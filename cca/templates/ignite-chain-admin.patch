diff --git a/templates/chain-template/CHANGELOG.md b/templates/chain-template/CHANGELOG.md
deleted file mode 100644
index 4e82db79..00000000
--- a/templates/chain-template/CHANGELOG.md
+++ /dev/null
@@ -1,440 +0,0 @@
-# Change Log
-
-All notable changes to this project will be documented in this file.
-See [Conventional Commits](https://conventionalcommits.org) for commit guidelines.
-
-# 1.1.0 (2024-10-08)
-
-
-### Bug Fixes
-
-* contract tab width ([7c859c0](https://github.com/cosmology-tech/create-cosmos-app/commit/7c859c0a94b7d42c772b33da56442668b5b8afd7))
-* create contract popover style ([b2db706](https://github.com/cosmology-tech/create-cosmos-app/commit/b2db7060ef59d258182e0323589db85a74aea1ad))
-* **style:** decrease max width ([62a25f8](https://github.com/cosmology-tech/create-cosmos-app/commit/62a25f8a3245542ec3e69907aee790afa3b61b73))
-
-
-### Features
-
-* add contract address input field ([029d260](https://github.com/cosmology-tech/create-cosmos-app/commit/029d26056994664331d5bf69753885bf98616d2c))
-* add create new contract button ([ef87061](https://github.com/cosmology-tech/create-cosmos-app/commit/ef8706144b607e1da1fae070a6d2dc43992fc21a))
-* add dark theme styles ([56bd0cb](https://github.com/cosmology-tech/create-cosmos-app/commit/56bd0cb246cf154436a55e8c79cdb52b8ab3908b))
-* add execute contract UI ([d158fa4](https://github.com/cosmology-tech/create-cosmos-app/commit/d158fa496d63a34125a5719ab1c1e5a502496d26))
-* add instantiate contract UI ([3be345b](https://github.com/cosmology-tech/create-cosmos-app/commit/3be345b2704949a616757efa37e3438ac0f2d54c))
-* add mobile styles ([40df1d9](https://github.com/cosmology-tech/create-cosmos-app/commit/40df1d961bc394ca614a727c716ec911a4c4d9f7))
-* add My Contracts, Query and Execute tabs ([c904729](https://github.com/cosmology-tech/create-cosmos-app/commit/c904729b681fc896046ec9767cdf19f49fcf6b67))
-* add query contract UI ([a543199](https://github.com/cosmology-tech/create-cosmos-app/commit/a5431990bb62f2a0ec0ff192526820e6d91e086d))
-* add Stepper component ([f86cf5f](https://github.com/cosmology-tech/create-cosmos-app/commit/f86cf5f4837a68a47a54ea1ea7a4ac4aa6bac7f5))
-* add tab and contract address to URL params ([c6f0af8](https://github.com/cosmology-tech/create-cosmos-app/commit/c6f0af88b1086d464112fb7725442425c4386ff8))
-* add upload contract UI ([43867de](https://github.com/cosmology-tech/create-cosmos-app/commit/43867deebcf8aa6ba60bd5400de75299f9b864b0))
-* autofill admin address ([8088abc](https://github.com/cosmology-tech/create-cosmos-app/commit/8088abc93cbfd794cf7eb38ddb1cc8c156b10f72))
-* create contract from code ID ([0d02e31](https://github.com/cosmology-tech/create-cosmos-app/commit/0d02e31a46c50c2572d4de53401abd05db1f6555))
-* initial commit for new chain-template ([e420c63](https://github.com/cosmology-tech/create-cosmos-app/commit/e420c639cd8fba249e70e44b151cde750aec7e75))
-* search my contracts ([336edd3](https://github.com/cosmology-tech/create-cosmos-app/commit/336edd30cf791c6538fbc2de26aacbe201471ba2))
-* switch tabs after instantiate ([1964562](https://github.com/cosmology-tech/create-cosmos-app/commit/196456255052728d3f3c39a4f2ba409146fb57bb))
-* upload to instantiate contract flow ([4f2c118](https://github.com/cosmology-tech/create-cosmos-app/commit/4f2c1186605c1ed9a239abfccdc75e2de39b2346))
-
-
-
-
-
-# [1.0.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.16.2...@cosmology/connect-multi-chain@1.0.0) (2024-04-06)
-
-
-### Bug Fixes
-
-* custom filtering connect-multi-chain ([0c345ce](https://github.com/cosmology-tech/create-cosmos-app/commit/0c345ceef886ebcd28574244aee3fef8f3d9ebb7))
-* custom filtering stake-tokens ([9cc3d24](https://github.com/cosmology-tech/create-cosmos-app/commit/9cc3d24055cc54358af9dc7d8a56856bd2ef0787))
-* use new combobox in asset-list ([68449d3](https://github.com/cosmology-tech/create-cosmos-app/commit/68449d39411c259f85eec07b7ae42f1a712c21a9))
-* use new dropdown for connect-multi-chain and vote-proposal ([68dd4c3](https://github.com/cosmology-tech/create-cosmos-app/commit/68dd4c3b03939b14ff46c622e6267b41ac7ddf18))
-
-
-
-
-
-## [0.16.2](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.16.1...@cosmology/connect-multi-chain@0.16.2) (2024-01-20)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.16.1](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.16.0...@cosmology/connect-multi-chain@0.16.1) (2024-01-19)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-# [0.16.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.15.7...@cosmology/connect-multi-chain@0.16.0) (2024-01-19)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.15.7](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.15.6...@cosmology/connect-multi-chain@0.15.7) (2024-01-19)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.15.6](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.15.5...@cosmology/connect-multi-chain@0.15.6) (2024-01-19)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.15.5](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.15.4...@cosmology/connect-multi-chain@0.15.5) (2023-09-27)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.15.4](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.15.3...@cosmology/connect-multi-chain@0.15.4) (2023-09-27)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.15.3](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.15.2...@cosmology/connect-multi-chain@0.15.3) (2023-07-30)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.15.2](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.15.1...@cosmology/connect-multi-chain@0.15.2) (2023-07-14)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.15.1](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.15.0...@cosmology/connect-multi-chain@0.15.1) (2023-06-28)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-# [0.15.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.14.3...@cosmology/connect-multi-chain@0.15.0) (2023-04-12)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.14.3](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.14.2...@cosmology/connect-multi-chain@0.14.3) (2023-03-28)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.14.2](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.14.1...@cosmology/connect-multi-chain@0.14.2) (2023-02-15)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.14.1](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.14.0...@cosmology/connect-multi-chain@0.14.1) (2023-01-11)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-# [0.14.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.13.3...@cosmology/connect-multi-chain@0.14.0) (2022-12-17)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.13.3](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.13.2...@cosmology/connect-multi-chain@0.13.3) (2022-11-25)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.13.2](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.13.1...@cosmology/connect-multi-chain@0.13.2) (2022-11-21)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.13.1](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.13.0...@cosmology/connect-multi-chain@0.13.1) (2022-11-17)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-# [0.13.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.12.0...@cosmology/connect-multi-chain@0.13.0) (2022-11-15)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-# [0.12.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.11.0...@cosmology/connect-multi-chain@0.12.0) (2022-11-14)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-# [0.11.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.10.0...@cosmology/connect-multi-chain@0.11.0) (2022-11-10)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-# [0.10.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.9.0...@cosmology/connect-multi-chain@0.10.0) (2022-11-09)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-# [0.9.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.8.5...@cosmology/connect-multi-chain@0.9.0) (2022-11-08)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.8.5](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.8.4...@cosmology/connect-multi-chain@0.8.5) (2022-11-05)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.8.4](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.8.3...@cosmology/connect-multi-chain@0.8.4) (2022-11-05)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.8.3](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmology/connect-multi-chain@0.8.2...@cosmology/connect-multi-chain@0.8.3) (2022-11-05)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## 0.8.2 (2022-11-01)
-
-**Note:** Version bump only for package @cosmology/connect-multi-chain
-
-
-
-
-
-## [0.8.1](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.8.0...@cosmonauts/connect-multi-chain@0.8.1) (2022-10-27)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-# [0.8.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.7.3...@cosmonauts/connect-multi-chain@0.8.0) (2022-10-26)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-## [0.7.3](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.7.2...@cosmonauts/connect-multi-chain@0.7.3) (2022-10-24)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-## [0.7.2](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.7.1...@cosmonauts/connect-multi-chain@0.7.2) (2022-10-15)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-## [0.7.1](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.7.0...@cosmonauts/connect-multi-chain@0.7.1) (2022-10-03)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-# [0.7.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.6.1...@cosmonauts/connect-multi-chain@0.7.0) (2022-09-30)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-## [0.6.1](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.6.0...@cosmonauts/connect-multi-chain@0.6.1) (2022-09-25)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-# [0.6.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.5.0...@cosmonauts/connect-multi-chain@0.6.0) (2022-09-25)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-# [0.5.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.4.0...@cosmonauts/connect-multi-chain@0.5.0) (2022-09-23)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-# [0.4.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.3.0...@cosmonauts/connect-multi-chain@0.4.0) (2022-09-22)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-# [0.3.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.2.0...@cosmonauts/connect-multi-chain@0.3.0) (2022-09-22)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-# [0.2.0](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.1.10...@cosmonauts/connect-multi-chain@0.2.0) (2022-09-22)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-## [0.1.10](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.1.9...@cosmonauts/connect-multi-chain@0.1.10) (2022-09-11)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-## [0.1.9](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.1.8...@cosmonauts/connect-multi-chain@0.1.9) (2022-09-08)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-## [0.1.8](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.1.7...@cosmonauts/connect-multi-chain@0.1.8) (2022-09-02)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-## [0.1.7](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.1.6...@cosmonauts/connect-multi-chain@0.1.7) (2022-08-30)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-## [0.1.6](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.1.5...@cosmonauts/connect-multi-chain@0.1.6) (2022-08-27)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-## [0.1.5](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.1.4...@cosmonauts/connect-multi-chain@0.1.5) (2022-08-27)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-## [0.1.4](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.1.3...@cosmonauts/connect-multi-chain@0.1.4) (2022-08-27)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-## [0.1.3](https://github.com/cosmology-tech/create-cosmos-app/compare/@cosmonauts/connect-multi-chain@0.1.2...@cosmonauts/connect-multi-chain@0.1.3) (2022-08-25)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-## 0.1.2 (2022-08-25)
-
-**Note:** Version bump only for package @cosmonauts/connect-multi-chain
-
-
-
-
-
-## 0.1.1 (2022-08-24)
-
-**Note:** Version bump only for package @cosmos-app/connect-multi-chain
diff --git a/templates/chain-template/README.md b/templates/chain-template/README.md
index 8f7ea36c..93ac8c07 100644
--- a/templates/chain-template/README.md
+++ b/templates/chain-template/README.md
@@ -1,6 +1,4 @@
-This is a Cosmos App project bootstrapped with [`create-cosmos-app`](https://github.com/cosmology-tech/create-cosmos-app).
-
-## Getting Started
+# Usage
 
 First, install the packages and run the development server:
 
@@ -11,84 +9,3 @@ yarn && yarn dev
 Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.
 
 You can start editing the page by modifying `pages/index.tsx`. The page auto-updates as you edit the file.
-
-## How to connect to Starship chains
-
-1. Follow the official guide to set up Starship: https://docs.cosmology.zone/starship/get-started/step-1
-2. Run `yarn starship start` and wait until Starship is up and running
-3. Open a new terminal and run `yarn dev`
-4. Open http://localhost:3000, select "Osmosis Devnet" or "Cosmos Hub Devnet" from the chain dropdown in the top right corner then click "Connect Wallet" in the left sidebar to connect to the chain
-5. Go to "Faucet" to get some test tokens and enjoy!
-
-## Learn More
-
-### Chain Registry
-
-The npm package for the Official Cosmos chain registry. Get chain and token data for you application.
-
-- https://github.com/cosmology-tech/chain-registry
-
-### Cosmology Videos
-
-Checkout more videos for how to use various frontend tooling in the Cosmos!
-
-- https://cosmology.zone/learn
-
-### Cosmos Kit
-
-A wallet connector for the Cosmos ⚛️
-
-- https://github.com/cosmology-tech/cosmos-kit
-
-### Telescope
-
-A "babel for the Cosmos", Telescope is a TypeScript Transpiler for Cosmos Protobufs. Telescope is used to generate libraries for Cosmos blockchains. Simply point to your protobuffer files and create developer-friendly Typescript libraries for teams to build on your blockchain.
-
-- https://github.com/cosmology-tech/telescope
-
-🎥 [Checkout the Telescope video playlist](https://www.youtube.com/watch?v=n82MsLe82mk&list=PL-lMkVv7GZwyQaK6bp6kMdOS5mzosxytC) to learn how to use `telescope`!
-
-### CosmWasm TS Codegen
-
-The quickest and easiest way to interact with CosmWasm Contracts. @cosmwasm/ts-codegen converts your CosmWasm smart contracts into dev-friendly TypeScript classes so you can focus on shipping code.
-
-- https://github.com/CosmWasm/ts-codegen
-
-🎥 [Checkout the CosmWasm/ts-codegen video playlist](https://www.youtube.com/watch?v=D_A5V2PfNLA&list=PL-lMkVv7GZwz1KO3jANwr5W4MoziruXwK) to learn how to use `ts-codegen`!
-
-## Learn More about Next.js
-
-To learn more about Next.js, take a look at the following resources:
-
-- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
-- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.
-
-You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!
-
-## Deploy on Vercel
-
-The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.
-
-Check out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.
-
-## Related
-
-Checkout these related projects:
-
-- [@cosmology/telescope](https://github.com/cosmology-tech/telescope) Your Frontend Companion for Building with TypeScript with Cosmos SDK Modules.
-- [@cosmwasm/ts-codegen](https://github.com/CosmWasm/ts-codegen) Convert your CosmWasm smart contracts into dev-friendly TypeScript classes.
-- [chain-registry](https://github.com/cosmology-tech/chain-registry) Everything from token symbols, logos, and IBC denominations for all assets you want to support in your application.
-- [cosmos-kit](https://github.com/cosmology-tech/cosmos-kit) Experience the convenience of connecting with a variety of web3 wallets through a single, streamlined interface.
-- [create-cosmos-app](https://github.com/cosmology-tech/create-cosmos-app) Set up a modern Cosmos app by running one command.
-- [interchain-ui](https://github.com/cosmology-tech/interchain-ui) The Interchain Design System, empowering developers with a flexible, easy-to-use UI kit.
-- [starship](https://github.com/cosmology-tech/starship) Unified Testing and Development for the Interchain.
-
-## Credits
-
-🛠 Built by Cosmology — if you like our tools, please consider delegating to [our validator ⚛️](https://cosmology.zone/validator)
-
-## Disclaimer
-
-AS DESCRIBED IN THE LICENSES, THE SOFTWARE IS PROVIDED “AS IS”, AT YOUR OWN RISK, AND WITHOUT WARRANTIES OF ANY KIND.
-
-No developer or entity involved in creating this software will be liable for any claims or damages whatsoever associated with your use, inability to use, or your interaction with other users of the code, including any direct, indirect, incidental, special, exemplary, punitive or consequential damages, or loss of profits, cryptocurrencies, tokens, or anything else of value.
diff --git a/templates/chain-template/components/asset-list/AssetListSection.tsx b/templates/chain-template/components/asset-list/AssetListSection.tsx
deleted file mode 100644
index e4189f1e..00000000
--- a/templates/chain-template/components/asset-list/AssetListSection.tsx
+++ /dev/null
@@ -1,56 +0,0 @@
-import React from 'react';
-import { Text, Box } from '@interchain-ui/react';
-import AssetsOverview from './AssetsOverview';
-import { useChain } from '@cosmos-kit/react';
-import { useAssets } from '@/hooks';
-import { ChainName } from 'cosmos-kit';
-
-interface AssetListSectionProps {
-  chainName: ChainName;
-  children?: React.ReactNode;
-}
-
-export const AssetListSection = ({ chainName }: AssetListSectionProps) => {
-  const { isWalletConnected } = useChain(chainName);
-  const { data, isLoading, refetch } = useAssets(chainName);
-
-  if (!isWalletConnected) {
-    return (
-      <Box maxWidth="768px" marginX="auto" marginBottom="60px">
-        <Text
-          fontSize="$xl"
-          fontWeight="$semibold"
-          attributes={{ marginBottom: '$10' }}
-        >
-          My assets
-        </Text>
-
-        <Box
-          height="160px"
-          bg="$cardBg"
-          borderRadius="$md"
-          p="$6"
-          display="flex"
-          justifyContent="center"
-          alignItems="center"
-        >
-          <Text fontSize="$md" color="$textSecondary">
-            Connect the wallet to see the assets
-          </Text>
-        </Box>
-      </Box>
-    );
-  }
-
-  return (
-    <Box maxWidth="$containerMd" marginX="auto" marginBottom="$17">
-      <AssetsOverview
-        isLoading={isLoading || !data}
-        assets={data?.assets ?? []}
-        prices={data?.prices ?? {}}
-        selectedChainName={chainName}
-        refetch={refetch}
-      />
-    </Box>
-  );
-};
diff --git a/templates/chain-template/components/asset-list/AssetsOverview.tsx b/templates/chain-template/components/asset-list/AssetsOverview.tsx
deleted file mode 100644
index 8a5967c5..00000000
--- a/templates/chain-template/components/asset-list/AssetsOverview.tsx
+++ /dev/null
@@ -1,192 +0,0 @@
-import React, { useMemo, useState } from 'react';
-import { flushSync } from 'react-dom';
-import { useChain } from '@cosmos-kit/react';
-import BigNumber from 'bignumber.js';
-import { ChainName } from 'cosmos-kit';
-import { SingleChain, SingleChainProps } from '@interchain-ui/react';
-
-import { useDisclosure, useChainUtils, useTotalAssets } from '@/hooks';
-import {
-  truncDecimals,
-  formatDollarValue,
-  prettyAssetToTransferItem,
-} from '@/utils';
-
-import { DropdownTransferModal } from './DropdownTransferModal';
-import { RowTransferModal } from './RowTransferModal';
-
-import { PrettyAsset, Transfer, TransferInfo } from './types';
-
-interface AssetsOverviewProps {
-  isLoading?: boolean;
-  assets: PrettyAsset[];
-  prices: Record<string, number>;
-  selectedChainName: ChainName;
-  refetch?: () => void;
-}
-
-const AssetsOverview = ({
-  assets,
-  selectedChainName,
-  isLoading,
-}: AssetsOverviewProps) => {
-  const [dropdownTransferInfo, setTransferInfo] = useState<TransferInfo>();
-  const [rowTransferInfo, setRowTransferInfo] = useState<TransferInfo>();
-
-  const { chain } = useChain(selectedChainName);
-
-  const {
-    data,
-    isLoading: isLoadingTotalAssets,
-    refetch,
-  } = useTotalAssets(selectedChainName);
-  const {
-    getChainName,
-    getNativeDenom,
-    isNativeAsset,
-    getDenomBySymbolAndChain,
-  } = useChainUtils(selectedChainName);
-
-  const modalControl = useDisclosure();
-  const rowModalControl = useDisclosure();
-
-  const ibcAssets = useMemo(
-    () => assets.filter((asset) => !isNativeAsset(asset)),
-    // eslint-disable-next-line react-hooks/exhaustive-deps
-    [assets]
-  );
-
-  const hasBalance = useMemo(
-    () => ibcAssets.some((asset) => new BigNumber(asset.amount).gt(0)),
-    [ibcAssets]
-  );
-
-  const assetsToShow = useMemo(() => {
-    const returnAssets: SingleChainProps['list'] = assets.map((asset) => ({
-      imgSrc: asset.logoUrl ?? '',
-      symbol: asset.symbol,
-      denom: asset.denom,
-      name: asset.prettyChainName,
-      tokenAmount: truncDecimals(asset.displayAmount, 6),
-      tokenAmountPrice: formatDollarValue(asset.dollarValue, asset.amount),
-      chainName: asset.prettyChainName,
-      showDeposit: !isNativeAsset(asset),
-      showWithdraw: !isNativeAsset(asset),
-      onDeposit: () => {
-        const sourceChainName = getChainName(asset.denom);
-        const denom = getDenomBySymbolAndChain(sourceChainName, asset.symbol);
-        flushSync(() => {
-          setRowTransferInfo({
-            sourceChainName,
-            type: Transfer.Deposit,
-            destChainName: selectedChainName,
-            token: {
-              ...prettyAssetToTransferItem(asset),
-              priceDisplayAmount: 0,
-              available: 0,
-              denom,
-            },
-          });
-        });
-
-        rowModalControl.onOpen();
-      },
-      onWithdraw: () => {
-        const destChainName = getChainName(asset.denom);
-
-        flushSync(() => {
-          setRowTransferInfo({
-            sourceChainName: selectedChainName,
-            type: Transfer.Withdraw,
-            destChainName,
-            token: prettyAssetToTransferItem(asset),
-          });
-        });
-
-        rowModalControl.onOpen();
-      },
-    }));
-
-    return returnAssets;
-  }, [
-    assets,
-    getChainName,
-    getNativeDenom,
-    isNativeAsset,
-    rowModalControl,
-    selectedChainName,
-  ]);
-
-  const onWithdrawAsset = () => {
-    const destChainName = getChainName(ibcAssets[0].denom);
-    setTransferInfo({
-      sourceChainName: selectedChainName,
-      type: Transfer.Withdraw,
-      destChainName,
-      token: prettyAssetToTransferItem(ibcAssets[0]),
-    });
-    modalControl.onOpen();
-  };
-
-  const onDepositAsset = () => {
-    const sourceChainName = getChainName(ibcAssets[0].denom);
-    const sourceChainAssetDenom = getNativeDenom(sourceChainName);
-    setTransferInfo({
-      sourceChainName,
-      type: Transfer.Deposit,
-      destChainName: selectedChainName,
-      token: {
-        ...prettyAssetToTransferItem(ibcAssets[0]),
-        available: 0,
-        priceDisplayAmount: 0,
-        denom: sourceChainAssetDenom,
-      },
-    });
-    modalControl.onOpen();
-  };
-
-  return (
-    <>
-      <SingleChain
-        isLoading={isLoading || isLoadingTotalAssets}
-        title="Your assets"
-        listTitle={`On ${chain.pretty_name}`}
-        showDeposit={ibcAssets.length > 0}
-        showWithdraw={hasBalance}
-        onDeposit={onDepositAsset}
-        onWithdraw={onWithdrawAsset}
-        singleChainHeader={{
-          label: `Total on ${chain.pretty_name}`,
-          value: `${data?.total ?? 0}`,
-        }}
-        list={assetsToShow}
-      />
-
-      {data && dropdownTransferInfo && (
-        <DropdownTransferModal
-          prices={data?.prices ?? {}}
-          assets={ibcAssets}
-          transferInfoState={{
-            transferInfo: dropdownTransferInfo,
-            setTransferInfo,
-          }}
-          modalControl={modalControl}
-          updateData={refetch}
-          selectedChainName={selectedChainName}
-        />
-      )}
-
-      {rowTransferInfo && (
-        <RowTransferModal
-          prices={data?.prices ?? {}}
-          transferInfo={rowTransferInfo}
-          updateData={refetch}
-          modalControl={rowModalControl}
-          selectedChainName={selectedChainName}
-        />
-      )}
-    </>
-  );
-};
-
-export default AssetsOverview;
diff --git a/templates/chain-template/components/asset-list/DropdownTransferModal.tsx b/templates/chain-template/components/asset-list/DropdownTransferModal.tsx
deleted file mode 100644
index fde312b7..00000000
--- a/templates/chain-template/components/asset-list/DropdownTransferModal.tsx
+++ /dev/null
@@ -1,291 +0,0 @@
-import React, { useEffect, useState, useMemo } from 'react';
-import {
-  BasicModal,
-  OverviewTransfer,
-  OverviewTransferProps,
-} from '@interchain-ui/react';
-import { useChainWallet, useManager } from '@cosmos-kit/react';
-import BigNumber from 'bignumber.js';
-import { ibc } from 'osmo-query';
-import { StdFee, coins } from '@cosmjs/amino';
-import { ChainName } from 'cosmos-kit';
-import { keplrWalletName } from '@/config';
-import { useDisclosure, useChainUtils, useTx, useBalance } from '@/hooks';
-import { truncDecimals } from '@/utils';
-
-import {
-  PrettyAsset,
-  PriceHash,
-  TransferInfo,
-  Transfer,
-  Unpacked,
-} from './types';
-
-const { transfer } = ibc.applications.transfer.v1.MessageComposer.withTypeUrl;
-
-const ZERO_AMOUNT = '0';
-
-interface OverviewTransferWrapperProps {
-  prices: PriceHash;
-  assets: PrettyAsset[];
-  modalControl: ReturnType<typeof useDisclosure>;
-  updateData: () => void;
-  transferInfoState: {
-    transferInfo: TransferInfo;
-    setTransferInfo: React.Dispatch<
-      React.SetStateAction<TransferInfo | undefined>
-    >;
-  };
-  selectedChainName: ChainName;
-}
-
-const OverviewTransferWrapper = (
-  props: OverviewTransferWrapperProps & {
-    isLoading: boolean;
-    setIsLoading: React.Dispatch<React.SetStateAction<boolean>>;
-    inputValue: string;
-    setInputValue: React.Dispatch<React.SetStateAction<string>>;
-  }
-) => {
-  const {
-    assets,
-    prices,
-    modalControl,
-    transferInfoState,
-    updateData,
-    selectedChainName,
-    isLoading,
-    setIsLoading,
-    inputValue,
-    setInputValue,
-  } = props;
-
-  const {
-    convRawToDispAmount,
-    symbolToDenom,
-    getExponentByDenom,
-    getIbcInfo,
-    getChainName,
-    getNativeDenom,
-  } = useChainUtils(selectedChainName);
-
-  const { transferInfo, setTransferInfo } = transferInfoState;
-
-  const {
-    type: transferType,
-    token: transferToken,
-    destChainName,
-    sourceChainName,
-  } = transferInfo;
-
-  const isDeposit = transferType === 'Deposit';
-  const { balance, isLoading: isLoadingBalance } = useBalance(
-    sourceChainName,
-    isDeposit
-  );
-
-  const { address: sourceAddress, connect: connectSourceChain } =
-    useChainWallet(sourceChainName, keplrWalletName);
-
-  const { address: destAddress, connect: connectDestChain } = useChainWallet(
-    destChainName,
-    keplrWalletName
-  );
-
-  const { getChainLogo } = useManager();
-  const { tx } = useTx(sourceChainName);
-
-  const availableAmount = useMemo((): number => {
-    if (!isDeposit) {
-      return transferToken.priceDisplayAmount ?? 0;
-    }
-
-    if (isLoadingBalance) {
-      return 0;
-    }
-
-    return new BigNumber(
-      convRawToDispAmount(transferToken.symbol, balance?.amount || ZERO_AMOUNT)
-    ).toNumber();
-    // eslint-disable-next-line react-hooks/exhaustive-deps
-  }, [isDeposit, isLoadingBalance, transferToken]);
-
-  const dollarValue = new BigNumber(inputValue)
-    .multipliedBy(prices[symbolToDenom(transferToken.symbol)])
-    .decimalPlaces(2)
-    .toString();
-
-  useEffect(() => {
-    if (!modalControl.isOpen) return;
-    if (!sourceAddress) connectSourceChain();
-    if (!destAddress) connectDestChain();
-    // eslint-disable-next-line react-hooks/exhaustive-deps
-  }, [destAddress, sourceAddress, modalControl]);
-
-  const closeModal = () => {
-    modalControl.onClose();
-    setInputValue('');
-    setIsLoading(false);
-  };
-
-  const handleTransferSubmit = async () => {
-    if (!sourceAddress || !destAddress) return;
-    setIsLoading(true);
-
-    const transferAmount = new BigNumber(inputValue)
-      .shiftedBy(getExponentByDenom(symbolToDenom(transferToken.symbol)))
-      .toString();
-
-    const { sourcePort, sourceChannel } = getIbcInfo(
-      sourceChainName,
-      destChainName
-    );
-
-    const fee: StdFee = {
-      amount: coins('1000', transferToken.denom ?? ''),
-      gas: '250000',
-    };
-
-    const token = {
-      denom: transferToken.denom ?? '',
-      amount: transferAmount,
-    };
-
-    const stamp = Date.now();
-    const timeoutInNanos = (stamp + 1.2e6) * 1e6;
-
-    const msg = transfer({
-      sourcePort,
-      sourceChannel,
-      sender: sourceAddress,
-      receiver: destAddress,
-      token,
-      // @ts-ignore
-      timeoutHeight: undefined,
-      timeoutTimestamp: BigInt(timeoutInNanos),
-    });
-
-    await tx([msg], {
-      fee,
-      onSuccess: () => {
-        updateData();
-        closeModal();
-      },
-    });
-
-    setIsLoading(false);
-  };
-
-  const assetOptions: OverviewTransferProps['dropdownList'] = useMemo(() => {
-    return assets
-      .filter((asset) => {
-        if (isDeposit) {
-          return true;
-        }
-        return new BigNumber(asset.amount).gt(0);
-      })
-      // .filter((asset) => {
-      //   return asset.symbol !== transferToken.symbol;
-      // })
-      .map((asset) => ({
-        available: new BigNumber(asset.displayAmount).toNumber(),
-        symbol: asset.symbol,
-        name: asset.prettyChainName,
-        denom: asset.denom,
-        imgSrc: asset.logoUrl ?? '',
-        priceDisplayAmount: new BigNumber(
-          truncDecimals(asset.dollarValue, 2)
-        ).toNumber(),
-      }));
-  }, [assets, isDeposit, transferToken]);
-  console.log('assetOptions', assetOptions);
-
-  const handleOnChange = (
-    assetOption: Unpacked<OverviewTransferProps['dropdownList']>,
-    value: number
-  ) => {
-    setInputValue(`${value}`);
-
-    setTransferInfo((prev) => {
-      if (!prev) return;
-
-      if (transferType === Transfer.Withdraw) {
-        const destChainName = getChainName(assetOption.denom ?? '');
-        return { ...prev, destChainName, token: assetOption };
-      }
-
-      const sourceChainName = getChainName(assetOption.denom ?? '');
-      const sourceChainAssetDenom = getNativeDenom(sourceChainName);
-      return {
-        ...prev,
-        sourceChainName,
-        token: {
-          ...assetOption,
-          available: availableAmount,
-          displayAmount: ZERO_AMOUNT,
-          dollarValue: ZERO_AMOUNT,
-          amount: ZERO_AMOUNT,
-          denom: sourceChainAssetDenom,
-        },
-      };
-    });
-  };
-
-  return (
-    <OverviewTransfer
-      selectedItem={transferToken}
-      isSubmitDisabled={
-        isLoading ||
-        !inputValue ||
-        new BigNumber(inputValue).isEqualTo(0) ||
-        isNaN(Number(inputValue))
-      }
-      fromChainLogoUrl={getChainLogo(transferInfo?.sourceChainName ?? '') ?? ''}
-      toChainLogoUrl={getChainLogo(transferInfo?.destChainName ?? '') ?? ''}
-      dropdownList={assetOptions}
-      onTransfer={() => {
-        handleTransferSubmit();
-      }}
-      onCancel={() => {
-        closeModal();
-      }}
-      onChange={handleOnChange}
-      timeEstimateLabel="≈ 20 seconds"
-    />
-  );
-};
-
-export const DropdownTransferModal = (props: OverviewTransferWrapperProps) => {
-  const { modalControl, transferInfoState } = props;
-
-  const [inputValue, setInputValue] = useState('');
-  const [isLoading, setIsLoading] = useState<boolean>(false);
-
-  const closeModal = () => {
-    modalControl.onClose();
-    setInputValue('');
-    setIsLoading(false);
-  };
-
-  return (
-    <BasicModal
-      isOpen={modalControl.isOpen}
-      title={transferInfoState.transferInfo.type}
-      onClose={() => closeModal()}
-    >
-      {transferInfoState ? (
-        <OverviewTransferWrapper
-          {...props}
-          modalControl={{
-            ...props.modalControl,
-            onClose: closeModal,
-          }}
-          isLoading={isLoading}
-          setIsLoading={setIsLoading}
-          inputValue={inputValue}
-          setInputValue={setInputValue}
-        />
-      ) : null}
-    </BasicModal>
-  );
-};
diff --git a/templates/chain-template/components/asset-list/RowTransferModal.tsx b/templates/chain-template/components/asset-list/RowTransferModal.tsx
deleted file mode 100644
index 0d7ff494..00000000
--- a/templates/chain-template/components/asset-list/RowTransferModal.tsx
+++ /dev/null
@@ -1,288 +0,0 @@
-import React, { useEffect, useMemo, useState } from 'react';
-import { BasicModal, AssetWithdrawTokens } from '@interchain-ui/react';
-import { useChainWallet, useManager } from '@cosmos-kit/react';
-import BigNumber from 'bignumber.js';
-import { ChainName } from 'cosmos-kit';
-import { coins, StdFee } from '@cosmjs/amino';
-import { useDisclosure, useChainUtils, useBalance, useTx } from '@/hooks';
-import { keplrWalletName } from '@/config';
-import { ibc } from 'osmo-query';
-
-import { PriceHash, TransferInfo, Transfer } from './types';
-
-const { transfer } = ibc.applications.transfer.v1.MessageComposer.withTypeUrl;
-
-interface IProps {
-  prices: PriceHash;
-  transferInfo: TransferInfo;
-  modalControl: ReturnType<typeof useDisclosure>;
-  updateData: () => void;
-  selectedChainName: ChainName;
-}
-
-const TransferModalBody = (
-  props: IProps & {
-    isLoading: boolean;
-    setIsLoading: React.Dispatch<React.SetStateAction<boolean>>;
-    inputValue: string;
-    setInputValue: React.Dispatch<React.SetStateAction<string>>;
-  }
-) => {
-  const {
-    prices,
-    selectedChainName,
-    transferInfo,
-    modalControl,
-    updateData,
-    isLoading,
-    setIsLoading,
-    inputValue,
-    setInputValue,
-  } = props;
-
-  const { getIbcInfo, symbolToDenom, getExponentByDenom, convRawToDispAmount } =
-    useChainUtils(selectedChainName);
-
-  const {
-    type: transferType,
-    token: transferToken,
-    destChainName,
-    sourceChainName,
-  } = transferInfo;
-
-  const isDeposit = transferType === Transfer.Deposit;
-
-  const {
-    address: sourceAddress,
-    connect: connectSourceChain,
-    chain: sourceChainInfo,
-  } = useChainWallet(sourceChainName, keplrWalletName);
-
-  const {
-    address: destAddress,
-    connect: connectDestChain,
-    chain: destChainInfo,
-  } = useChainWallet(destChainName, keplrWalletName);
-
-  const { balance, isLoading: isLoadingBalance } = useBalance(
-    sourceChainName,
-    isDeposit,
-    transferInfo.token.symbol
-  );
-
-  const { getChainLogo } = useManager();
-  const { tx } = useTx(sourceChainName);
-
-  const availableAmount = useMemo(() => {
-    if (!isDeposit) return transferToken.available ?? 0;
-    if (isLoadingBalance) return 0;
-
-    console.log('transferInfo.token', transferInfo.token);
-
-    return new BigNumber(
-      convRawToDispAmount(transferInfo.token.symbol, balance?.amount || '0')
-    ).toNumber();
-    // eslint-disable-next-line react-hooks/exhaustive-deps
-  }, [
-    isDeposit,
-    isLoading,
-    transferToken.symbol,
-    balance?.amount,
-    transferInfo.token.symbol,
-    isLoadingBalance,
-  ]);
-
-  const dollarValue = new BigNumber(1)
-    .multipliedBy(
-      prices[symbolToDenom(transferToken.symbol, transferInfo.sourceChainName)]
-    )
-    .decimalPlaces(6)
-    .toNumber();
-
-  useEffect(() => {
-    if (!modalControl.isOpen) return;
-    if (!sourceAddress) connectSourceChain();
-    if (!destAddress) connectDestChain();
-
-    // eslint-disable-next-line react-hooks/exhaustive-deps
-  }, [modalControl.isOpen]);
-
-  const handleClick = async () => {
-    if (!sourceAddress || !destAddress) return;
-    setIsLoading(true);
-
-    const transferAmount = new BigNumber(inputValue)
-      .shiftedBy(getExponentByDenom(symbolToDenom(transferToken.symbol)))
-      .toString();
-
-    const { sourcePort, sourceChannel } = getIbcInfo(
-      sourceChainName,
-      destChainName
-    );
-
-    const fee: StdFee = {
-      amount: coins('1000', transferToken.denom ?? ''),
-      gas: '250000',
-    };
-
-    const token = {
-      denom: transferToken.denom ?? '',
-      amount: transferAmount,
-    };
-
-    const stamp = Date.now();
-    const timeoutInNanos = (stamp + 1.2e6) * 1e6;
-
-    const msg = transfer({
-      sourcePort,
-      sourceChannel,
-      sender: sourceAddress,
-      receiver: destAddress,
-      token,
-      // @ts-ignore
-      timeoutHeight: undefined,
-      timeoutTimestamp: BigInt(timeoutInNanos),
-    });
-
-    await tx([msg], {
-      fee,
-      onSuccess: () => {
-        updateData();
-        modalControl.onClose();
-      },
-    });
-
-    setIsLoading(false);
-  };
-
-  const sourceChain = useMemo(() => {
-    return {
-      name: sourceChainInfo.pretty_name,
-      address: sourceAddress ?? '',
-      imgSrc: getChainLogo(sourceChainName) ?? '',
-    };
-  }, [getChainLogo, sourceAddress, sourceChainInfo, sourceChainName]);
-
-  const destChain = useMemo(() => {
-    return {
-      symbol: destChainInfo.chain_name.toUpperCase(),
-      name: destChainInfo.pretty_name,
-      address: destAddress ?? '',
-      imgSrc: getChainLogo(destChainName) ?? '',
-    };
-  }, [destChainInfo, destAddress, getChainLogo, destChainName]);
-
-  const handleSubmitTransfer = async () => {
-    if (!sourceAddress || !destAddress) return;
-    setIsLoading(true);
-
-    const transferAmount = new BigNumber(inputValue)
-      .shiftedBy(getExponentByDenom(symbolToDenom(transferToken.symbol)))
-      .toString();
-
-    const { sourcePort, sourceChannel } = getIbcInfo(
-      sourceChainName,
-      destChainName
-    );
-
-    const fee: StdFee = {
-      amount: coins('1000', transferToken.denom ?? ''),
-      gas: '250000',
-    };
-
-    const token = {
-      denom: transferToken.denom ?? '',
-      amount: transferAmount,
-    };
-
-    const stamp = Date.now();
-    const timeoutInNanos = (stamp + 1.2e6) * 1e6;
-
-    const msg = transfer({
-      sourcePort,
-      sourceChannel,
-      sender: sourceAddress,
-      receiver: destAddress,
-      token,
-      // @ts-ignore
-      timeoutHeight: undefined,
-      timeoutTimestamp: BigInt(timeoutInNanos),
-    });
-
-    await tx([msg], {
-      fee,
-      onSuccess: () => {
-        updateData();
-        modalControl.onClose();
-      },
-    });
-
-    setIsLoading(false);
-  };
-
-  return (
-    <AssetWithdrawTokens
-      isDropdown={false}
-      fromSymbol={transferInfo.token.symbol}
-      fromName={sourceChain.name}
-      fromAddress={sourceChain.address}
-      fromImgSrc={sourceChain.imgSrc}
-      toName={destChain.name}
-      toAddress={destChain.address}
-      toImgSrc={destChain.imgSrc}
-      isSubmitDisabled={
-        isLoading ||
-        !inputValue ||
-        new BigNumber(inputValue).isEqualTo(0) ||
-        isNaN(Number(inputValue))
-      }
-      available={availableAmount}
-      priceDisplayAmount={dollarValue}
-      timeEstimateLabel="20 seconds"
-      amount={inputValue}
-      onChange={(value) => {
-        console.log('onChange value', value);
-        setInputValue(value);
-      }}
-      onTransfer={() => {
-        console.log('onTransfer');
-        handleSubmitTransfer();
-      }}
-      onCancel={() => {
-        console.log('onCancel');
-        modalControl.onClose();
-      }}
-    />
-  );
-};
-
-export const RowTransferModal = (props: IProps) => {
-  const { modalControl, transferInfo } = props;
-  const [inputValue, setInputValue] = useState('');
-  const [isLoading, setIsLoading] = useState(false);
-
-  const closeModal = () => {
-    modalControl.onClose();
-    setInputValue('');
-  };
-
-  return (
-    <BasicModal
-      isOpen={modalControl.isOpen}
-      title={transferInfo.type}
-      onClose={() => closeModal()}
-    >
-      <TransferModalBody
-        {...props}
-        inputValue={inputValue}
-        setInputValue={setInputValue}
-        isLoading={isLoading}
-        setIsLoading={setIsLoading}
-        modalControl={{
-          ...modalControl,
-          onClose: closeModal,
-        }}
-      />
-    </BasicModal>
-  );
-};
diff --git a/templates/chain-template/components/asset-list/index.ts b/templates/chain-template/components/asset-list/index.ts
deleted file mode 100644
index 8a7f6313..00000000
--- a/templates/chain-template/components/asset-list/index.ts
+++ /dev/null
@@ -1,2 +0,0 @@
-export * from './types';
-export * from './AssetListSection';
diff --git a/templates/chain-template/components/asset-list/types.tsx b/templates/chain-template/components/asset-list/types.tsx
deleted file mode 100644
index 56437be2..00000000
--- a/templates/chain-template/components/asset-list/types.tsx
+++ /dev/null
@@ -1,52 +0,0 @@
-import { AvailableItem } from '@interchain-ui/react';
-
-export type Unpacked<T> = T extends (infer U)[] ? U : T;
-
-export type PrettyAsset = {
-  logoUrl: string | undefined;
-  symbol: string;
-  prettyChainName: string;
-  displayAmount: string;
-  dollarValue: string;
-  amount: string;
-  denom: string;
-};
-
-export type Token = {
-  price: number;
-  denom: string;
-  symbol: string;
-  liquidity: number;
-  volume_24h: number;
-  volume_24h_change: number;
-  name: string;
-  price_24h_change: number;
-  price_7d_change: number;
-  exponent: number;
-  display: string;
-};
-
-export type PriceHash = {
-  [key: string]: number;
-};
-
-export const Transfer = {
-  Deposit: 'Deposit',
-  Withdraw: 'Withdraw',
-} as const;
-
-export type TransferValues = typeof Transfer[keyof typeof Transfer];
-
-export type TransferInfo = {
-  type: TransferValues;
-  sourceChainName: string;
-  destChainName: string;
-  token: AvailableItem;
-};
-
-export type AssetOption = {
-  value: string;
-  icon: { png: string | undefined };
-};
-
-export type PrettyAssetOption = PrettyAsset & AssetOption;
diff --git a/templates/chain-template/components/common/Footer.tsx b/templates/chain-template/components/common/Footer.tsx
index 95e1658c..5bb5388a 100644
--- a/templates/chain-template/components/common/Footer.tsx
+++ b/templates/chain-template/components/common/Footer.tsx
@@ -45,11 +45,11 @@ const TextDivider = () => {
 const socialLinks = [
   {
     icon: <Icon name="github" color="$blackAlpha600" />,
-    href: 'https://github.com/cosmology-tech',
+    href: 'https://github.com/ignite',
   },
   {
     icon: <Icon name="discord" color="$blackAlpha600" />,
-    href: 'https://discord.com/invite/xh3ZwHj2qQ',
+    href: 'https://discord.com/invite/ignite',
   },
   {
     icon: (
@@ -57,11 +57,11 @@ const socialLinks = [
         <FaXTwitter size="16px" />
       </Box>
     ),
-    href: 'https://x.com/cosmology_tech',
+    href: 'https://x.com/ignite',
   },
   {
     icon: <Icon name="youtube" color="$blackAlpha600" />,
-    href: 'https://www.youtube.com/channel/UCA9jzRlnUJRxec8S5Lt7Vcw',
+    href: 'https://www.youtube.com/@ignitehq',
   },
 ];
 
diff --git a/templates/chain-template/components/common/Header/ChainDropdown.tsx b/templates/chain-template/components/common/Header/ChainDropdown.tsx
index 47c933b8..e31f2f28 100644
--- a/templates/chain-template/components/common/Header/ChainDropdown.tsx
+++ b/templates/chain-template/components/common/Header/ChainDropdown.tsx
@@ -1,48 +1,52 @@
-import Image from 'next/image';
-import { useEffect, useState } from 'react';
-import { useChain, useManager } from '@cosmos-kit/react';
-import { Box, Combobox, Skeleton, Stack, Text } from '@interchain-ui/react';
+import Image from "next/image";
+import { useEffect, useState } from "react";
+import { useChain, useManager } from "@cosmos-kit/react";
+import { Box, Combobox, Skeleton, Stack, Text } from "@interchain-ui/react";
+import { Chain, AssetList } from "@chain-registry/types";
 
-import { useStarshipChains, useDetectBreakpoints } from '@/hooks';
-import { chainStore, useChainStore } from '@/contexts';
-import { chainOptions } from '@/config';
-import { getSignerOptions } from '@/utils';
+import { useDetectBreakpoints } from "@/hooks";
+import { chainStore, useChainStore } from "@/contexts";
+import { chainOptions } from "@/config";
+import { getSignerOptions } from "@/utils";
 
 export const ChainDropdown = () => {
   const { selectedChain } = useChainStore();
   const { chain } = useChain(selectedChain);
-  const [input, setInput] = useState<string>(chain.pretty_name);
+  const [input, setInput] = useState<string>(chain.pretty_name??chain.chain_name);
   const { isMobile } = useDetectBreakpoints();
-  const { data: starshipChains, refetch } = useStarshipChains();
 
   const [isChainsAdded, setIsChainsAdded] = useState(false);
   const { addChains, getChainLogo } = useManager();
 
+  // local chain config
+  const chainConfig: Chain = require("../../../../chain.json");
+  const assetConfig: AssetList = require("../../../../assetlist.json");
+
   useEffect(() => {
-    if (
-      starshipChains?.chains.length &&
-      starshipChains?.assets.length &&
-      !isChainsAdded
-    ) {
+    if (isChainsAdded) return;
+
+    if (chainConfig && assetConfig) {
       addChains(
-        starshipChains.chains,
-        starshipChains.assets,
+        [chainConfig], 
+        [assetConfig], 
         getSignerOptions(),
+        {
+          [chainConfig.chain_name]: {
+            rpc: [chainConfig.apis.rpc[0].address],
+            rest: [chainConfig.apis.rest[0].address]
+          }
+        },
       );
       setIsChainsAdded(true);
     }
-  }, [starshipChains, isChainsAdded]);
+  }, [chainConfig, assetConfig, isChainsAdded]);
 
-  const onOpenChange = (isOpen: boolean) => {
-    if (isOpen && !isChainsAdded) {
-      refetch();
-    }
-  };
+  const onOpenChange = (isOpen: boolean) => {};
 
   const chains = isChainsAdded
-    ? chainOptions.concat(starshipChains?.chains ?? [])
+    ? chainOptions.concat([chainConfig])
     : chainOptions;
-
+    
   return (
     <Combobox
       onInputChange={(input) => {
@@ -60,12 +64,12 @@ export const ChainDropdown = () => {
         <Box display="flex" justifyContent="center" alignItems="center" px="$4">
           {input === chain.pretty_name ? (
             <Image
-              src={getChainLogo(selectedChain) ?? ''}
+              src={getChainLogo(selectedChain) ?? "/images/ignite.ico"}
               alt={chain.pretty_name}
               width={24}
               height={24}
               style={{
-                borderRadius: '50%',
+                borderRadius: "50%",
               }}
             />
           ) : (
@@ -74,26 +78,26 @@ export const ChainDropdown = () => {
         </Box>
       }
       styleProps={{
-        width: isMobile ? '130px' : '260px',
+        width: isMobile ? "130px" : "260px",
       }}
     >
       {chains.map((c) => (
         <Combobox.Item key={c.chain_name} textValue={c.pretty_name}>
           <Stack
             direction="horizontal"
-            space={isMobile ? '$3' : '$4'}
-            attributes={{ alignItems: 'center' }}
+            space={isMobile ? "$3" : "$4"}
+            attributes={{ alignItems: "center" }}
           >
             <Image
-              src={getChainLogo(c.chain_name) ?? ''}
-              alt={c.pretty_name}
+              src={getChainLogo(c.chain_name) ?? "/images/ignite.ico"}
+              alt={c.pretty_name??chain.chain_name}
               width={isMobile ? 18 : 24}
               height={isMobile ? 18 : 24}
               style={{
-                borderRadius: '50%',
+                borderRadius: "50%",
               }}
             />
-            <Text fontSize={isMobile ? '12px' : '16px'} fontWeight="500">
+            <Text fontSize={isMobile ? "12px" : "16px"} fontWeight="500">
               {c.pretty_name}
             </Text>
           </Stack>
diff --git a/templates/chain-template/components/common/Layout.tsx b/templates/chain-template/components/common/Layout.tsx
index 22e6408d..a236bf80 100644
--- a/templates/chain-template/components/common/Layout.tsx
+++ b/templates/chain-template/components/common/Layout.tsx
@@ -18,7 +18,7 @@ export function Layout({ children }: { children: React.ReactNode }) {
       <Box maxWidth="1440px" width="$full" mx="$auto" display="flex">
         <Head>
           <title>Create Cosmos App</title>
-          <meta name="description" content="Generated by create cosmos app" />
+          <meta name="description" content="Generated by Ignite CCA" />
           <link rel="icon" href="/images/favicon.ico" />
         </Head>
         <Sidebar isOpen={isOpen} onClose={onClose} />
diff --git a/templates/chain-template/components/common/Sidebar/NavItems.tsx b/templates/chain-template/components/common/Sidebar/NavItems.tsx
index 164234b2..9791c87c 100644
--- a/templates/chain-template/components/common/Sidebar/NavItems.tsx
+++ b/templates/chain-template/components/common/Sidebar/NavItems.tsx
@@ -29,16 +29,6 @@ const navItems: NavItem[] = [
     label: 'Governance',
     href: '/governance',
   },
-  {
-    icon: 'coinsLine',
-    label: 'Asset List',
-    href: '/asset-list',
-  },
-  {
-    icon: <MdOutlineWaterDrop size="20px" />,
-    label: 'Faucet',
-    href: '/faucet',
-  },
   {
     icon: <LuFileJson size="20px" />,
     label: 'Contract',
diff --git a/templates/chain-template/components/common/Sidebar/SidebarContent.tsx b/templates/chain-template/components/common/Sidebar/SidebarContent.tsx
index bd250436..2a0df37d 100644
--- a/templates/chain-template/components/common/Sidebar/SidebarContent.tsx
+++ b/templates/chain-template/components/common/Sidebar/SidebarContent.tsx
@@ -91,13 +91,13 @@ export const SidebarContent = ({ onClose }: { onClose: () => void }) => {
           <Text fontSize="12px" fontWeight="500" color="$text">
             Powered by
           </Text>
-          <Image
+          <a href="https://github.com/cosmology-tech"><Image
             src={poweredByLogoSrc}
             alt="cosmology"
             width="0"
             height="0"
             style={{ width: '100px', height: 'auto' }}
-          />
+          /></a>
         </Box>
       </Box>
     </Box>
diff --git a/templates/chain-template/components/index.ts b/templates/chain-template/components/index.ts
index 9b9594a6..06644b05 100644
--- a/templates/chain-template/components/index.ts
+++ b/templates/chain-template/components/index.ts
@@ -1,5 +1,4 @@
 export * from './common';
 export * from './staking';
 export * from './voting';
-export * from './asset-list';
 export * from './contract';
diff --git a/templates/chain-template/config/chains.ts b/templates/chain-template/config/chains.ts
index 6177cb2e..3a4a3391 100644
--- a/templates/chain-template/config/chains.ts
+++ b/templates/chain-template/config/chains.ts
@@ -1,10 +1,7 @@
 import { chains } from 'chain-registry';
-import osmosis from 'chain-registry/mainnet/osmosis/chain';
 
-const chainNames = ['osmosistestnet', 'juno', 'stargaze', 'osmosis', 'cosmoshub'];
+const chainNames = ['atomone', 'cosmoshub'];
 
 export const chainOptions = chainNames.map(
   (chainName) => chains.find((chain) => chain.chain_name === chainName)!
-);
-
-export const osmosisChainName = osmosis.chain_name;
+);
\ No newline at end of file
diff --git a/templates/chain-template/config/products.ts b/templates/chain-template/config/products.ts
index 193111c9..1bfbb53d 100644
--- a/templates/chain-template/config/products.ts
+++ b/templates/chain-template/config/products.ts
@@ -2,7 +2,6 @@ export type ProductCategory =
   | 'cosmwasm'
   | 'cosmos-sdk'
   | 'frontend'
-  | 'testing';
 
 export type Product = {
   name: string;
@@ -12,6 +11,27 @@ export type Product = {
 };
 
 export const products: Product[] = [
+  {
+    name: 'Ignite',
+    description:
+      'Ignite makes developing, growing, and launching blockchain projects faster than ever before.',
+    link: 'https://ignite.com',
+    category: 'cosmos-sdk',
+  },
+  {
+    name: 'Ignite Tutorials',
+    description:
+      'Learn How to Build Cutting-Edge Blockchains.',
+    link: 'https://tutorials.ignite.com',
+    category: 'cosmos-sdk',
+  },
+  {
+    name: 'Cosmos SDK',
+    description:
+      'Get a quick introduction to the Cosmos SDK and its key features, including its modular architecture and developer-friendly tools.',
+    link: 'https://docs.cosmos.network',
+    category: 'cosmos-sdk',
+  },
   {
     name: 'Cosmos Kit',
     description:
@@ -19,6 +39,13 @@ export const products: Product[] = [
     link: 'https://cosmology.zone/products/cosmos-kit',
     category: 'frontend',
   },
+  {
+    name: 'Ignite Videos',
+    description:
+      'Learn about Ignite development with video tutorials.',
+    link: 'https://youtube.com/@ignitehq',
+    category: 'frontend',
+  },
   {
     name: 'Telescope',
     description:
@@ -33,13 +60,6 @@ export const products: Product[] = [
     link: 'https://cosmology.zone/products/interchain-ui',
     category: 'frontend',
   },
-  {
-    name: 'TS Codegen',
-    description:
-      'The quickest and easiest way to convert CosmWasm Contracts into dev-friendly TypeScript classes.',
-    link: 'https://cosmology.zone/products/ts-codegen',
-    category: 'cosmwasm',
-  },
   {
     name: 'Chain Registry',
     description:
@@ -47,20 +67,6 @@ export const products: Product[] = [
     link: 'https://cosmology.zone/products/chain-registry',
     category: 'frontend',
   },
-  {
-    name: 'OsmoJS',
-    description:
-      'OsmosJS makes it easy to compose and broadcast Osmosis and Cosmos messages.',
-    link: 'https://cosmology.zone/products/osmojs',
-    category: 'frontend',
-  },
-  {
-    name: 'Starship',
-    description:
-      'Starship makes it easy to build a universal interchain development environment in k8s.',
-    link: 'https://cosmology.zone/products/starship',
-    category: 'testing',
-  },
   {
     name: 'Create Cosmos App',
     description:
@@ -76,7 +82,7 @@ export const products: Product[] = [
     category: 'cosmwasm',
   },
   {
-    name: 'Videos',
+    name: 'Cosmology Videos',
     description:
       'How-to videos from the official Cosmology website, with learning resources for building in Cosmos.',
     link: 'https://cosmology.zone/learn',
diff --git a/templates/chain-template/config/wallets.ts b/templates/chain-template/config/wallets.ts
index 65b3fe04..0ddbea16 100644
--- a/templates/chain-template/config/wallets.ts
+++ b/templates/chain-template/config/wallets.ts
@@ -7,5 +7,4 @@ export const wallets = [
   _wallets.keplr.extension,
   _wallets.leap.extension,
   _wallets.cosmostation.extension,
-  _wallets.station.extension,
 ] as MainWalletBase[];
diff --git a/templates/chain-template/hooks/asset-list/index.ts b/templates/chain-template/hooks/asset-list/index.ts
deleted file mode 100644
index 7021f7a9..00000000
--- a/templates/chain-template/hooks/asset-list/index.ts
+++ /dev/null
@@ -1,7 +0,0 @@
-export * from './useChainUtils';
-export * from './useChainAssetsPrices';
-export * from './useTopTokens';
-export * from './useAssets';
-export * from './useTotalAssets';
-export * from './useBalance';
-export * from './useOsmoQueryHooks';
diff --git a/templates/chain-template/hooks/asset-list/useAssets.ts b/templates/chain-template/hooks/asset-list/useAssets.ts
deleted file mode 100644
index 2c0bc391..00000000
--- a/templates/chain-template/hooks/asset-list/useAssets.ts
+++ /dev/null
@@ -1,136 +0,0 @@
-import { PrettyAsset } from '@/components';
-import { Coin } from '@cosmjs/stargate';
-import { useChain } from '@cosmos-kit/react';
-import { UseQueryResult } from '@tanstack/react-query';
-import BigNumber from 'bignumber.js';
-import { useEffect, useMemo } from 'react';
-import { useChainUtils } from './useChainUtils';
-import { useOsmoQueryHooks } from './useOsmoQueryHooks';
-import { useChainAssetsPrices } from './useChainAssetsPrices';
-import { useTopTokens } from './useTopTokens';
-import { getPagination } from './useTotalAssets';
-
-(BigInt.prototype as any).toJSON = function () {
-  return this.toString();
-};
-
-const MAX_TOKENS_TO_SHOW = 50;
-
-export const useAssets = (chainName: string) => {
-  const { address } = useChain(chainName);
-
-  const { cosmosQuery, isReady, isFetching } = useOsmoQueryHooks(chainName);
-
-  const allBalancesQuery: UseQueryResult<Coin[]> =
-    cosmosQuery.bank.v1beta1.useAllBalances({
-      request: {
-        address: address || '',
-        pagination: getPagination(100n),
-      },
-      options: {
-        enabled: isReady,
-        select: ({ balances }) => balances || [],
-      },
-    });
-
-  const pricesQuery = useChainAssetsPrices(chainName);
-  const topTokensQuery = useTopTokens();
-
-  const dataQueries = {
-    allBalances: allBalancesQuery,
-    topTokens: topTokensQuery,
-    prices: pricesQuery,
-  };
-
-  const queriesToReset = [dataQueries.allBalances];
-  const queriesToRefetch = [dataQueries.allBalances];
-
-  useEffect(() => {
-    queriesToReset.forEach((query) => query.remove());
-    // eslint-disable-next-line react-hooks/exhaustive-deps
-  }, [chainName]);
-
-  const queries = Object.values(dataQueries);
-  const isInitialFetching = queries.some(({ isLoading }) => isLoading);
-  const isRefetching = queries.some(({ isRefetching }) => isRefetching);
-  const isLoading = isFetching || isInitialFetching || isRefetching;
-
-  type AllQueries = typeof dataQueries;
-
-  type QueriesData = {
-    [Key in keyof AllQueries]: NonNullable<AllQueries[Key]['data']>;
-  };
-
-  const {
-    ibcAssets,
-    getAssetByDenom,
-    convRawToDispAmount,
-    calcCoinDollarValue,
-    denomToSymbol,
-    getPrettyChainName,
-  } = useChainUtils(chainName);
-
-  const data = useMemo(() => {
-    if (isLoading) return;
-
-    const queriesData = Object.fromEntries(
-      Object.entries(dataQueries).map(([key, query]) => [key, query.data])
-    ) as QueriesData;
-
-    const { allBalances, prices, topTokens } = queriesData;
-
-    const nativeAndIbcBalances: Coin[] = allBalances?.filter(
-      ({ denom }) => !denom.startsWith('gamm') && prices[denom]
-    );
-
-    const emptyBalances: Coin[] = ibcAssets
-      .filter(({ base }) => {
-        const notInBalances = !nativeAndIbcBalances?.find(
-          ({ denom }) => denom === base
-        );
-        return notInBalances && prices[base];
-      })
-      .filter((asset) => {
-        const isWithinLimit = ibcAssets.length <= MAX_TOKENS_TO_SHOW;
-        return isWithinLimit || topTokens.includes(asset.symbol);
-      })
-      .map((asset) => ({ denom: asset.base, amount: '0' }))
-      .reduce((acc: { denom: string, amount: string }[], current) => {
-        if (!acc.some(balance => balance.denom === current.denom)) {
-          acc.push(current);
-        }
-        return acc;
-      }, []);
-    const finalAssets = [...(nativeAndIbcBalances ?? []), ...emptyBalances]
-      .map(({ amount, denom }) => {
-        const asset = getAssetByDenom(denom);
-        const symbol = denomToSymbol(denom);
-        const dollarValue = calcCoinDollarValue(prices, { amount, denom });
-        return {
-          symbol,
-          logoUrl: asset.logo_URIs?.png || asset.logo_URIs?.svg,
-          prettyChainName: getPrettyChainName(denom),
-          displayAmount: convRawToDispAmount(denom, amount),
-          dollarValue,
-          amount,
-          denom,
-        };
-      })
-      .sort((a, b) =>
-        new BigNumber(a.dollarValue).lt(b.dollarValue) ? 1 : -1
-      );
-
-    return {
-      prices,
-      allBalances,
-      assets: finalAssets as PrettyAsset[],
-    };
-    // eslint-disable-next-line react-hooks/exhaustive-deps
-  }, [isLoading]);
-
-  const refetch = () => {
-    queriesToRefetch.forEach((query) => query.refetch());
-  };
-
-  return { data, isLoading, refetch };
-};
diff --git a/templates/chain-template/hooks/asset-list/useBalance.ts b/templates/chain-template/hooks/asset-list/useBalance.ts
deleted file mode 100644
index d29947b9..00000000
--- a/templates/chain-template/hooks/asset-list/useBalance.ts
+++ /dev/null
@@ -1,49 +0,0 @@
-import { Coin } from '@cosmjs/stargate';
-import { useChain } from '@cosmos-kit/react';
-import { UseQueryResult } from '@tanstack/react-query';
-import { useEffect } from 'react';
-import { useOsmoQueryHooks } from './useOsmoQueryHooks';
-
-export const useBalance = (
-  chainName: string,
-  enabled: boolean = true,
-  displayDenom?: string
-) => {
-  const { address, assets } = useChain(chainName);
-  let denom = assets?.assets[0].base!;
-  for (const asset of assets?.assets || []) {
-    if (asset.display.toLowerCase() === displayDenom?.toLowerCase()) {
-      denom = asset.base;
-      break;
-    }
-  }
-
-  const { cosmosQuery, isReady, isFetching } = useOsmoQueryHooks(
-    chainName,
-    'balance'
-  );
-
-  const balanceQuery: UseQueryResult<Coin> =
-    cosmosQuery.bank.v1beta1.useBalance({
-      request: {
-        denom,
-        address: address || '',
-      },
-      options: {
-        enabled: isReady && enabled,
-        select: ({ balance }) => balance,
-      },
-    });
-
-  useEffect(() => {
-    return () => {
-      balanceQuery.remove();
-    };
-    // eslint-disable-next-line react-hooks/exhaustive-deps
-  }, []);
-
-  return {
-    balance: balanceQuery.data,
-    isLoading: isFetching, // || !!balanceQueries.find(item => item.isFetching),
-  };
-};
diff --git a/templates/chain-template/hooks/asset-list/useChainAssetsPrices.ts b/templates/chain-template/hooks/asset-list/useChainAssetsPrices.ts
deleted file mode 100644
index 72b63edf..00000000
--- a/templates/chain-template/hooks/asset-list/useChainAssetsPrices.ts
+++ /dev/null
@@ -1,49 +0,0 @@
-import { Asset } from '@chain-registry/types';
-import { useQuery } from '@tanstack/react-query';
-import { useChainUtils } from './useChainUtils';
-import { handleError } from './useTopTokens';
-
-type CoinGeckoId = string;
-type CoinGeckoUSD = { usd: number };
-type CoinGeckoUSDResponse = Record<CoinGeckoId, CoinGeckoUSD>;
-
-const getAssetsWithGeckoIds = (assets: Asset[]) => {
-  return assets.filter((asset) => !!asset?.coingecko_id);
-};
-
-const getGeckoIds = (assets: Asset[]) => {
-  return assets.map((asset) => asset.coingecko_id) as string[];
-};
-
-const formatPrices = (
-  prices: CoinGeckoUSDResponse,
-  assets: Asset[]
-): Record<string, number> => {
-  return Object.entries(prices).reduce((priceHash, cur) => {
-    const denom = assets.find((asset) => asset.coingecko_id === cur[0])!.base;
-    return { ...priceHash, [denom]: cur[1].usd };
-  }, {});
-};
-
-const fetchPrices = async (
-  geckoIds: string[]
-): Promise<CoinGeckoUSDResponse> => {
-  const url = `https://api.coingecko.com/api/v3/simple/price?ids=${geckoIds.join()}&vs_currencies=usd`;
-
-  return fetch(url)
-    .then(handleError)
-    .then((res) => res.json());
-};
-
-export const useChainAssetsPrices = (chainName: string) => {
-  const { allAssets } = useChainUtils(chainName);
-  const assetsWithGeckoIds = getAssetsWithGeckoIds(allAssets);
-  const geckoIds = getGeckoIds(assetsWithGeckoIds);
-
-  return useQuery({
-    queryKey: ['useChainAssetsPrices', chainName],
-    queryFn: () => fetchPrices(geckoIds),
-    select: (data) => formatPrices(data, assetsWithGeckoIds),
-    staleTime: Infinity,
-  });
-};
diff --git a/templates/chain-template/hooks/asset-list/useChainUtils.ts b/templates/chain-template/hooks/asset-list/useChainUtils.ts
deleted file mode 100644
index 496239e6..00000000
--- a/templates/chain-template/hooks/asset-list/useChainUtils.ts
+++ /dev/null
@@ -1,177 +0,0 @@
-import { useManager } from '@cosmos-kit/react';
-import { useMemo } from 'react';
-import { Asset, AssetList } from '@chain-registry/types';
-import { asset_lists as ibcAssetLists } from '@chain-registry/assets';
-import { assets as chainAssets, ibc } from 'chain-registry';
-import { CoinDenom, CoinSymbol, Exponent, PriceHash } from '@/utils';
-import BigNumber from 'bignumber.js';
-import { Coin } from '@cosmjs/amino';
-import { PrettyAsset } from '@/components';
-import { ChainName } from 'cosmos-kit';
-
-export const useChainUtils = (chainName: string) => {
-  const { getChainRecord } = useManager();
-
-  const filterAssets = (assetList: AssetList[]): Asset[] => {
-    return (
-      assetList
-        .find(({ chain_name }) => chain_name === chainName)
-        ?.assets?.filter(({ type_asset }) => type_asset !== 'ics20') || []
-    );
-  };
-
-  const { nativeAssets, ibcAssets } = useMemo(() => {
-    // @ts-ignore
-    const nativeAssets = filterAssets(chainAssets);
-    // @ts-ignore
-    const ibcAssets = filterAssets(ibcAssetLists);
-
-    return { nativeAssets, ibcAssets };
-    // eslint-disable-next-line react-hooks/exhaustive-deps
-  }, [chainName]);
-
-  const allAssets = [...nativeAssets, ...ibcAssets];
-
-  const getIbcAssetsLength = () => {
-    return ibcAssets.length;
-  };
-
-  const getAssetByDenom = (denom: CoinDenom): Asset => {
-    return allAssets.find((asset) => asset.base === denom) as Asset;
-  };
-
-  const denomToSymbol = (denom: CoinDenom): CoinSymbol => {
-    const asset = getAssetByDenom(denom);
-    const symbol = asset?.symbol;
-    if (!symbol) {
-      return denom;
-    }
-    return symbol;
-  };
-
-  const symbolToDenom = (symbol: CoinSymbol, chainName?: string): CoinDenom => {
-    const asset = allAssets.find(
-      (asset) =>
-        asset.symbol === symbol &&
-        (!chainName ||
-          asset.traces?.[0].counterparty.chain_name.toLowerCase() ===
-            chainName.toLowerCase())
-    );
-    const base = asset?.base;
-    if (!base) {
-      return symbol;
-    }
-    return base;
-  };
-
-  const getExponentByDenom = (denom: CoinDenom): Exponent => {
-    const asset = getAssetByDenom(denom);
-    const unit = asset.denom_units.find(({ denom }) => denom === asset.display);
-    return unit?.exponent || 0;
-  };
-
-  const convRawToDispAmount = (symbol: string, amount: string | number) => {
-    const denom = symbolToDenom(symbol);
-    return new BigNumber(amount)
-      .shiftedBy(-getExponentByDenom(denom))
-      .toString();
-  };
-
-  const calcCoinDollarValue = (prices: PriceHash, coin: Coin) => {
-    const { denom, amount } = coin;
-    return new BigNumber(amount)
-      .shiftedBy(-getExponentByDenom(denom))
-      .multipliedBy(prices[denom])
-      .toString();
-  };
-
-  const getChainName = (ibcDenom: CoinDenom) => {
-    if (nativeAssets.find((asset) => asset.base === ibcDenom)) {
-      return chainName;
-    }
-    const asset = ibcAssets.find((asset) => asset.base === ibcDenom);
-    const ibcChainName = asset?.traces?.[0].counterparty.chain_name;
-    if (!ibcChainName)
-      throw Error('chainName not found for ibcDenom: ' + ibcDenom);
-    return ibcChainName;
-  };
-
-  const getPrettyChainName = (ibcDenom: CoinDenom) => {
-    const chainName = getChainName(ibcDenom);
-    try {
-      const chainRecord = getChainRecord(chainName);
-      // @ts-ignore
-      return chainRecord.chain.pretty_name;
-    } catch (e) {
-      return 'CHAIN_INFO_NOT_FOUND';
-    }
-  };
-
-  const isNativeAsset = ({ denom }: PrettyAsset) => {
-    return !!nativeAssets.find((asset) => asset.base === denom);
-  };
-
-  const getNativeDenom = (chainName: ChainName) => {
-    const chainRecord = getChainRecord(chainName);
-    const denom = chainRecord.assetList?.assets[0].base;
-    if (!denom) throw Error('denom not found');
-    return denom;
-  };
-
-  const getDenomBySymbolAndChain = (chainName: ChainName, symbol: string) => {
-    const chainRecord = getChainRecord(chainName);
-    const denom = chainRecord.assetList?.assets.find(
-      (asset) => asset.symbol === symbol
-    )?.base;
-    if (!denom) throw Error('denom not found');
-    return denom;
-  };
-
-  const getIbcInfo = (fromChainName: string, toChainName: string) => {
-    let flipped = false;
-
-    let ibcInfo = ibc.find(
-      (i) =>
-        i.chain_1.chain_name === fromChainName &&
-        i.chain_2.chain_name === toChainName
-    );
-
-    if (!ibcInfo) {
-      ibcInfo = ibc.find(
-        (i) =>
-          i.chain_1.chain_name === toChainName &&
-          i.chain_2.chain_name === fromChainName
-      );
-      flipped = true;
-    }
-
-    if (!ibcInfo) {
-      throw new Error('cannot find IBC info');
-    }
-
-    const key = flipped ? 'chain_2' : 'chain_1';
-    const sourcePort = ibcInfo.channels[0][key].port_id;
-    const sourceChannel = ibcInfo.channels[0][key].channel_id;
-
-    return { sourcePort, sourceChannel };
-  };
-
-  return {
-    allAssets,
-    nativeAssets,
-    ibcAssets,
-    getAssetByDenom,
-    denomToSymbol,
-    symbolToDenom,
-    convRawToDispAmount,
-    calcCoinDollarValue,
-    getIbcAssetsLength,
-    getChainName,
-    getPrettyChainName,
-    isNativeAsset,
-    getNativeDenom,
-    getIbcInfo,
-    getExponentByDenom,
-    getDenomBySymbolAndChain,
-  };
-};
diff --git a/templates/chain-template/hooks/asset-list/useOsmoQueryHooks.ts b/templates/chain-template/hooks/asset-list/useOsmoQueryHooks.ts
deleted file mode 100644
index bb6c5fa6..00000000
--- a/templates/chain-template/hooks/asset-list/useOsmoQueryHooks.ts
+++ /dev/null
@@ -1,37 +0,0 @@
-import { useChain } from '@cosmos-kit/react';
-import { useRpcEndpoint, useRpcClient, createRpcQueryHooks } from 'osmo-query';
-
-export const useOsmoQueryHooks = (chainName: string, extraKey?: string) => {
-  const { address, getRpcEndpoint } = useChain(chainName);
-
-  const rpcEndpointQuery = useRpcEndpoint({
-    getter: getRpcEndpoint,
-    options: {
-      staleTime: Infinity,
-      queryKeyHashFn: (queryKey) => {
-        const key = [...queryKey, chainName];
-        return JSON.stringify(extraKey ? [...key, extraKey] : key);
-      },
-    },
-  });
-
-  const rpcClientQuery = useRpcClient({
-    rpcEndpoint: rpcEndpointQuery.data || '',
-    options: {
-      enabled: !!rpcEndpointQuery.data,
-      staleTime: Infinity,
-      queryKeyHashFn: (queryKey) => {
-        return JSON.stringify(extraKey ? [...queryKey, extraKey] : queryKey);
-      },
-    },
-  });
-
-  const { cosmos: cosmosQuery, osmosis: osmoQuery } = createRpcQueryHooks({
-    rpc: rpcClientQuery.data,
-  });
-
-  const isReady = !!address && !!rpcClientQuery.data;
-  const isFetching = rpcEndpointQuery.isFetching || rpcClientQuery.isFetching;
-
-  return { cosmosQuery, osmoQuery, isReady, isFetching };
-};
diff --git a/templates/chain-template/hooks/asset-list/useTopTokens.ts b/templates/chain-template/hooks/asset-list/useTopTokens.ts
deleted file mode 100644
index 13491ebe..00000000
--- a/templates/chain-template/hooks/asset-list/useTopTokens.ts
+++ /dev/null
@@ -1,45 +0,0 @@
-import { useQuery } from '@tanstack/react-query';
-
-type Token = {
-  price: number;
-  denom: string;
-  symbol: string;
-  liquidity: number;
-  volume_24h: number;
-  volume_24h_change: number;
-  name: string;
-  price_24h_change: number;
-  price_7d_change: number;
-  exponent: number;
-  display: string;
-};
-
-export const handleError = (resp: Response) => {
-  if (!resp.ok) throw Error(resp.statusText);
-  return resp;
-};
-
-const fetchTokens = async (): Promise<Token[]> => {
-  const url = 'https://api-osmosis.imperator.co/tokens/v2/all';
-  return fetch(url)
-    .then(handleError)
-    .then((res) => res.json());
-};
-
-const MAX_TOP_TOKENS = 60;
-
-const filterTopTokens = (tokens: Token[]) => {
-  return tokens
-    .sort((a, b) => b.liquidity - a.liquidity)
-    .slice(0, MAX_TOP_TOKENS)
-    .map((token) => token.symbol);
-};
-
-export const useTopTokens = () => {
-  return useQuery({
-    queryKey: ['tokens'],
-    queryFn: fetchTokens,
-    select: filterTopTokens,
-    staleTime: Infinity,
-  });
-};
diff --git a/templates/chain-template/hooks/asset-list/useTotalAssets.ts b/templates/chain-template/hooks/asset-list/useTotalAssets.ts
deleted file mode 100644
index 6a0820c3..00000000
--- a/templates/chain-template/hooks/asset-list/useTotalAssets.ts
+++ /dev/null
@@ -1,202 +0,0 @@
-import { Coin } from '@cosmjs/stargate';
-import { useChain } from '@cosmos-kit/react';
-import { UseQueryResult } from '@tanstack/react-query';
-import BigNumber from 'bignumber.js';
-import { useEffect, useMemo } from 'react';
-import { useChainUtils } from './useChainUtils';
-import { useChainAssetsPrices } from './useChainAssetsPrices';
-import { osmosisChainName } from '@/config';
-import { Pool } from 'osmo-query/dist/codegen/osmosis/gamm/pool-models/balancer/balancerPool';
-import { convertGammTokenToDollarValue } from '@/utils';
-import { useOsmoQueryHooks } from './useOsmoQueryHooks';
-
-(BigInt.prototype as any).toJSON = function () {
-  return this.toString();
-};
-
-export const getPagination = (limit: bigint) => ({
-  limit,
-  key: new Uint8Array(),
-  offset: 0n,
-  countTotal: true,
-  reverse: false,
-});
-
-export const useTotalAssets = (chainName: string) => {
-  const { address } = useChain(chainName);
-
-  const { cosmosQuery, osmoQuery, isReady, isFetching } =
-    useOsmoQueryHooks(chainName);
-
-  const isOsmosisChain = chainName === osmosisChainName;
-
-  const allBalancesQuery: UseQueryResult<Coin[]> =
-    cosmosQuery.bank.v1beta1.useAllBalances({
-      request: {
-        address: address || '',
-        pagination: getPagination(100n),
-      },
-      options: {
-        enabled: isReady,
-        select: ({ balances }) => balances || [],
-      },
-    });
-
-  const delegationsQuery: UseQueryResult<Coin[]> =
-    cosmosQuery.staking.v1beta1.useDelegatorDelegations({
-      request: {
-        delegatorAddr: address || '',
-        pagination: getPagination(100n),
-      },
-      options: {
-        enabled: isReady,
-        select: ({ delegationResponses }) =>
-          delegationResponses.map(({ balance }) => balance) || [],
-      },
-    });
-
-  const lockedCoinsQuery: UseQueryResult<Coin[]> =
-    osmoQuery.lockup.useAccountLockedCoins({
-      request: {
-        owner: address || '',
-      },
-      options: {
-        enabled: isReady && isOsmosisChain,
-        select: ({ coins }) => coins || [],
-        staleTime: Infinity,
-      },
-    });
-
-  const poolsQuery: UseQueryResult<Pool[]> = osmoQuery.gamm.v1beta1.usePools({
-    request: {
-      pagination: getPagination(5000n),
-    },
-    options: {
-      enabled: isReady && isOsmosisChain,
-      select: ({ pools }) => pools || [],
-      staleTime: Infinity,
-    },
-  });
-
-  const pricesQuery = useChainAssetsPrices(chainName);
-
-  const dataQueries = {
-    pools: poolsQuery,
-    prices: pricesQuery,
-    allBalances: allBalancesQuery,
-    delegations: delegationsQuery,
-    lockedCoins: lockedCoinsQuery,
-  };
-
-  const queriesToReset = [dataQueries.allBalances, dataQueries.delegations];
-  const queriesToRefetch = [dataQueries.allBalances];
-
-  useEffect(() => {
-    queriesToReset.forEach((query) => query.remove());
-    // eslint-disable-next-line react-hooks/exhaustive-deps
-  }, [chainName]);
-
-  const queries = Object.values(dataQueries);
-  const isInitialFetching = queries.some(({ isFetching }) => isFetching);
-  const isRefetching = queries.some(({ isRefetching }) => isRefetching);
-  const isLoading = isFetching || isInitialFetching || isRefetching;
-
-  type AllQueries = typeof dataQueries;
-
-  type QueriesData = {
-    [Key in keyof AllQueries]: NonNullable<AllQueries[Key]['data']>;
-  };
-
-  const { calcCoinDollarValue } = useChainUtils(chainName);
-
-  const zero = new BigNumber(0);
-
-  const data = useMemo(() => {
-    if (isLoading) return;
-
-    const queriesData = Object.fromEntries(
-      Object.entries(dataQueries).map(([key, query]) => [key, query.data])
-    ) as QueriesData;
-
-    const {
-      allBalances,
-      delegations,
-      lockedCoins = [],
-      pools = [],
-      prices = {},
-    } = queriesData;
-
-    const stakedTotal = delegations
-      ?.map((coin) => calcCoinDollarValue(prices, coin))
-      .reduce((total, cur) => total.plus(cur), zero)
-      .toString();
-
-    const balancesTotal = allBalances
-      ?.filter(({ denom }) => !denom.startsWith('gamm') && prices[denom])
-      .map((coin) => calcCoinDollarValue(prices, coin))
-      .reduce((total, cur) => total.plus(cur), zero)
-      .toString();
-
-    let bondedTotal;
-    let liquidityTotal;
-
-    if (isOsmosisChain) {
-      const liquidityCoins = (allBalances ?? []).filter(({ denom }) =>
-        denom.startsWith('gamm')
-      );
-      const gammTokenDenoms = [
-        ...(liquidityCoins ?? []),
-        ...(lockedCoins ?? []),
-      ].map(({ denom }) => denom);
-
-      const uniqueDenoms = [...new Set(gammTokenDenoms)];
-
-      const poolsMap: Record<string, Pool> = pools
-        .filter(({ totalShares }) => uniqueDenoms.includes(totalShares.denom))
-        .filter((pool) => !pool?.$typeUrl?.includes('stableswap'))
-        .filter(({ poolAssets }) => {
-          return poolAssets.every(({ token }) => {
-            const isGammToken = token.denom.startsWith('gamm/pool');
-            return !isGammToken && prices[token.denom];
-          });
-        })
-        .reduce((prev, cur) => ({ ...prev, [cur.totalShares.denom]: cur }), {});
-
-      bondedTotal = lockedCoins
-        .map((coin) => {
-          const poolData = poolsMap[coin.denom];
-          if (!poolData) return '0';
-          return convertGammTokenToDollarValue(coin, poolData, prices);
-        })
-        .reduce((total, cur) => total.plus(cur), zero)
-        .toString();
-
-      liquidityTotal = liquidityCoins
-        .map((coin) => {
-          const poolData = poolsMap[coin.denom];
-          if (!poolData) return '0';
-          return convertGammTokenToDollarValue(coin, poolData, prices);
-        })
-        .reduce((total, cur) => total.plus(cur), zero)
-        .toString();
-    }
-
-    const total = [stakedTotal, balancesTotal, bondedTotal, liquidityTotal]
-      .reduce((total, cur) => total.plus(cur || 0), zero)
-      .decimalPlaces(2)
-      .toString();
-
-    return {
-      total,
-      prices,
-      allBalances,
-    };
-    // eslint-disable-next-line react-hooks/exhaustive-deps
-  }, [isLoading]);
-
-  const refetch = () => {
-    queriesToRefetch.forEach((query) => query.refetch());
-  };
-
-  return { data, isLoading, refetch };
-};
diff --git a/templates/chain-template/hooks/common/index.ts b/templates/chain-template/hooks/common/index.ts
index 69602ad0..97f8d80d 100644
--- a/templates/chain-template/hooks/common/index.ts
+++ b/templates/chain-template/hooks/common/index.ts
@@ -5,5 +5,4 @@ export * from './useCopyToClipboard';
 export * from './useOutsideClick';
 export * from './useMediaQuery';
 export * from './useDetectBreakpoints';
-export * from './useStarshipChains';
 export * from './useConnectChain';
diff --git a/templates/chain-template/hooks/common/useStarshipChains.ts b/templates/chain-template/hooks/common/useStarshipChains.ts
deleted file mode 100644
index a1bbf340..00000000
--- a/templates/chain-template/hooks/common/useStarshipChains.ts
+++ /dev/null
@@ -1,47 +0,0 @@
-import { useQuery } from '@tanstack/react-query';
-import { AssetList, Chain } from '@chain-registry/types';
-
-import { StarshipConfig } from '@/starship';
-import config from '@/starship/configs/config.yaml';
-
-export const useStarshipChains = () => {
-  const { registry } = config as StarshipConfig;
-  const baseUrl = `http://localhost:${registry.ports.rest}`;
-
-  return useQuery({
-    queryKey: ['starship-chains'],
-    queryFn: async () => {
-      try {
-        const { chains } = (await fetcher<{ chains: Chain[] }>(
-          `${baseUrl}/chains`
-        )) ?? { chains: [] };
-        const chainIds = chains.map((chain) => chain.chain_id);
-        const assets = (await Promise.all(
-          chainIds.map((chainId) =>
-            fetcher<AssetList>(`${baseUrl}/chains/${chainId}/assets`)
-          )
-        ).then((assetLists) => assetLists.filter(Boolean))) as AssetList[];
-
-        return { chains, assets };
-      } catch (error) {
-        console.error(error);
-        return undefined;
-      }
-    },
-    staleTime: Infinity,
-    cacheTime: Infinity,
-    refetchOnMount: false,
-    refetchOnReconnect: false,
-  });
-};
-
-const fetcher = async <T>(url: string): Promise<T | null> => {
-  try {
-    const response = await fetch(url);
-    const data = await response.json();
-    return data;
-  } catch (error) {
-    console.error(error);
-    return null;
-  }
-};
diff --git a/templates/chain-template/hooks/index.ts b/templates/chain-template/hooks/index.ts
index 9b9594a6..06644b05 100644
--- a/templates/chain-template/hooks/index.ts
+++ b/templates/chain-template/hooks/index.ts
@@ -1,5 +1,4 @@
 export * from './common';
 export * from './staking';
 export * from './voting';
-export * from './asset-list';
 export * from './contract';
diff --git a/templates/chain-template/hooks/voting/useVotingData.ts b/templates/chain-template/hooks/voting/useVotingData.ts
index aae05fd1..57e3c1ea 100644
--- a/templates/chain-template/hooks/voting/useVotingData.ts
+++ b/templates/chain-template/hooks/voting/useVotingData.ts
@@ -150,7 +150,7 @@ export function useVotingData(chainName: string) {
       Object.entries(singleQueries).map(([key, query]) => [key, query.data])
     ) as SingleQueriesData;
 
-    singleQueriesData?.proposals.forEach((proposal) => {
+    singleQueriesData?.proposals?.forEach((proposal) => {
       if (proposal.status === ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD) {
         (async () => {
           for (const { address } of chain?.apis?.rest || []) {
diff --git a/templates/chain-template/package.json b/templates/chain-template/package.json
index 3d285bd8..b4f20c68 100644
--- a/templates/chain-template/package.json
+++ b/templates/chain-template/package.json
@@ -9,8 +9,7 @@
     "lint": "next lint",
     "locks:remove": "rm -f yarn.lock",
     "locks:create": "generate-lockfile --lockfile ../../yarn.lock --package package.json --write yarn.lock --force",
-    "locks": "npm run locks:remove && npm run locks:create",
-    "starship": "starship --config starship/configs/config.yaml"
+    "locks": "npm run locks:remove && npm run locks:create"
   },
   "resolutions": {
     "react": "18.2.0",
@@ -19,7 +18,6 @@
     "@types/react-dom": "18.0.9"
   },
   "dependencies": {
-    "@chain-registry/assets": "1.70.32",
     "@cosmjs/amino": "0.32.3",
     "@cosmjs/cosmwasm-stargate": "0.32.3",
     "@cosmjs/stargate": "0.31.1",
@@ -35,7 +33,6 @@
     "interchain-query": "1.10.1",
     "next": "^13",
     "node-gzip": "^1.1.2",
-    "osmo-query": "16.5.1",
     "react": "18.2.0",
     "react-ace": "11.0.1",
     "react-dom": "18.2.0",
@@ -47,7 +44,6 @@
   "devDependencies": {
     "@chain-registry/types": "^0.50.13",
     "@keplr-wallet/types": "^0.12.111",
-    "@starship-ci/cli": "^2.9.0",
     "@tanstack/react-query-devtools": "4.32.0",
     "@types/node": "18.11.9",
     "@types/node-gzip": "^1",
@@ -56,7 +52,6 @@
     "eslint": "8.28.0",
     "eslint-config-next": "13.0.5",
     "generate-lockfile": "0.0.12",
-    "starshipjs": "^2.4.0",
     "typescript": "4.9.3",
     "yaml-loader": "^0.8.1"
   }
diff --git a/templates/chain-template/pages/_app.tsx b/templates/chain-template/pages/_app.tsx
index e5f79bd4..ba517482 100644
--- a/templates/chain-template/pages/_app.tsx
+++ b/templates/chain-template/pages/_app.tsx
@@ -47,7 +47,7 @@ function CreateCosmosApp({ Component, pageProps }: AppProps) {
         signerOptions={getSignerOptions()}
         endpointOptions={{
           endpoints: {
-            osmosis: {
+            mychain: {
               rpc: ['http://localhost:26657'],
             },
           },
diff --git a/templates/chain-template/pages/asset-list.tsx b/templates/chain-template/pages/asset-list.tsx
deleted file mode 100644
index 49ecba75..00000000
--- a/templates/chain-template/pages/asset-list.tsx
+++ /dev/null
@@ -1,13 +0,0 @@
-import { ReactNoSSR } from '@interchain-ui/react-no-ssr';
-import { AssetListSection } from '@/components';
-import { useChainStore } from '@/contexts';
-
-export default function AssetListPage() {
-  const { selectedChain } = useChainStore();
-
-  return (
-    <ReactNoSSR>
-      <AssetListSection chainName={selectedChain} />
-    </ReactNoSSR>
-  );
-}
diff --git a/templates/chain-template/pages/docs.tsx b/templates/chain-template/pages/docs.tsx
index a400279d..b46c7c98 100644
--- a/templates/chain-template/pages/docs.tsx
+++ b/templates/chain-template/pages/docs.tsx
@@ -17,11 +17,7 @@ const tabs: Tab[] = [
     category: null,
   },
   {
-    label: 'CosmWasm',
-    category: 'cosmwasm',
-  },
-  {
-    label: 'Cosmos SDK',
+    label: 'Cosmos SDK & Ignite',
     category: 'cosmos-sdk',
   },
   {
@@ -29,8 +25,8 @@ const tabs: Tab[] = [
     category: 'frontend',
   },
   {
-    label: 'Testing',
-    category: 'testing',
+    label: 'CosmWasm',
+    category: 'cosmwasm',
   },
 ];
 
diff --git a/templates/chain-template/pages/faucet.tsx b/templates/chain-template/pages/faucet.tsx
deleted file mode 100644
index 3c8a0801..00000000
--- a/templates/chain-template/pages/faucet.tsx
+++ /dev/null
@@ -1,214 +0,0 @@
-import { useState } from 'react';
-import { Box, Text, TextField, TextFieldAddon } from '@interchain-ui/react';
-import { useChain } from '@cosmos-kit/react';
-
-import { Button } from '@/components';
-import { useChainStore } from '@/contexts';
-import { creditFromFaucet, validateChainAddress } from '@/utils';
-import { useStarshipChains, useToast } from '@/hooks';
-import config from '@/starship/configs/config.yaml';
-import type { StarshipConfig } from '@/starship';
-import styles from '@/styles/comp.module.css';
-
-export default function Faucet() {
-  const [input, setInput] = useState('');
-  const [isLoading, setIsLoading] = useState(false);
-
-  const { selectedChain } = useChainStore();
-  const { address, chain, assets } = useChain(selectedChain);
-  const { toast } = useToast();
-  const { data: starshipChains } = useStarshipChains();
-
-  const checkIsChainSupported = () => {
-    const isStarshipRunning =
-      starshipChains?.chains?.length && starshipChains?.assets?.length;
-
-    if (!isStarshipRunning) {
-      toast({
-        type: 'error',
-        title: 'Starship is not running',
-        description: 'Faucet is only available in Starship environment',
-      });
-      return false;
-    }
-
-    const isStarshipChain = starshipChains?.chains?.some(
-      (c) => c.chain_id === chain.chain_id,
-    );
-
-    if (!isStarshipChain) {
-      toast({
-        type: 'error',
-        title: 'Chain is not supported',
-        description: 'Faucet is only available for Starship chains',
-      });
-      return false;
-    }
-
-    return true;
-  };
-
-  const inputErrMsg = input
-    ? validateChainAddress(input, chain.bech32_prefix)
-    : null;
-
-  const handleGetTokens = async () => {
-    if (!assets || !checkIsChainSupported()) return;
-
-    setIsLoading(true);
-
-    const asset = assets.assets[0];
-    const port = (config as StarshipConfig).chains.find(
-      (c) => c.id === chain.chain_id,
-    )!.ports.faucet;
-
-    try {
-      await creditFromFaucet(input, asset.base, port);
-      toast({
-        type: 'success',
-        title: 'Tokens credited',
-      });
-    } catch (error: any) {
-      console.error(error);
-      toast({
-        type: 'error',
-        title: 'Failed to get tokens',
-        description: error.message,
-      });
-    } finally {
-      setIsLoading(false);
-    }
-  };
-
-  const isButtonDisabled = !input || !!inputErrMsg;
-
-  return (
-    <>
-      <Text
-        textAlign="center"
-        fontSize="48px"
-        fontWeight="500"
-        attributes={{ mt: '140px', mb: '20px' }}
-      >
-        Faucet
-      </Text>
-      <Text
-        textAlign="center"
-        fontSize="16px"
-        fontWeight="500"
-        attributes={{ mb: '20px' }}
-      >
-        Get test tokens for building applications
-      </Text>
-      <Box maxWidth="500px" mx="auto">
-        <Text fontSize="16px" fontWeight="700" attributes={{ mb: '10px' }}>
-          Address
-        </Text>
-
-        <Box mb="24px">
-          <TextField
-            id="address"
-            value={input}
-            onChange={(e) => setInput(e.target.value)}
-            placeholder="Enter your address"
-            intent={inputErrMsg ? 'error' : 'default'}
-            autoComplete="off"
-            inputClassName={styles['input-pr']}
-            endAddon={
-              <TextFieldAddon position="end">
-                <Box
-                  height="$full"
-                  display="flex"
-                  alignItems="center"
-                  borderLeftWidth="1px"
-                  borderLeftStyle="solid"
-                  borderLeftColor="$inputBorder"
-                >
-                  <Button
-                    size="sm"
-                    variant="text"
-                    disabled={!address}
-                    onClick={() => setInput(address ?? '')}
-                  >
-                    Autofill
-                  </Button>
-                </Box>
-              </TextFieldAddon>
-            }
-          />
-          {inputErrMsg && (
-            <Text
-              color="$red600"
-              fontSize="12px"
-              fontWeight="500"
-              wordBreak="break-all"
-              attributes={{ mt: '6px' }}
-            >
-              {inputErrMsg}
-            </Text>
-          )}
-        </Box>
-
-        <Button
-          variant="primary"
-          width="100%"
-          mb="30px"
-          onClick={handleGetTokens}
-          isLoading={isLoading}
-          disabled={isButtonDisabled}
-        >
-          Get Tokens
-        </Button>
-
-        <Text fontSize="16px" fontWeight="700" attributes={{ mb: '10px' }}>
-          FAQ
-        </Text>
-
-        <Box display="flex" flexDirection="column" gap="20px">
-          {faqs.map(({ question, answer }) => (
-            <FaqItem key={question} question={question} answer={answer} />
-          ))}
-        </Box>
-      </Box>
-    </>
-  );
-}
-
-const faqs = [
-  {
-    question: 'What is faucet?',
-    answer:
-      'A crypto faucet is a website or application that rewards you with cryptocurrency for completing simple tasks.',
-  },
-  {
-    question: 'How can I get test tokens?',
-    answer:
-      'The Faucet dispenses a small number of test tokens after you claimed.',
-  },
-];
-
-const FaqItem = ({
-  question,
-  answer,
-}: {
-  question: string;
-  answer: string;
-}) => {
-  return (
-    <Box
-      p="20px"
-      width="$full"
-      borderWidth="1px"
-      borderStyle="solid"
-      borderColor="$blackAlpha300"
-      borderRadius="4px"
-    >
-      <Text fontSize="18px" fontWeight="600" attributes={{ mb: '10px' }}>
-        {question}
-      </Text>
-      <Text fontSize="16px" fontWeight="500" color="$textSecondary">
-        {answer}
-      </Text>
-    </Box>
-  );
-};
diff --git a/templates/chain-template/public/images/ignite.ico b/templates/chain-template/public/images/ignite.ico
new file mode 100644
index 00000000..f076b10f
Binary files /dev/null and b/templates/chain-template/public/images/ignite.ico differ
diff --git a/templates/chain-template/starship/configs/config.yaml b/templates/chain-template/starship/configs/config.yaml
deleted file mode 100644
index 8b733102..00000000
--- a/templates/chain-template/starship/configs/config.yaml
+++ /dev/null
@@ -1,36 +0,0 @@
-name: starship-dev
-version: 0.2.10
-
-chains:
-  - id: test-osmosis-1
-    name: osmosis
-    numValidators: 1
-    ports:
-      rest: 1317
-      rpc: 26657
-      faucet: 8007
-  - id: test-cosmoshub-4
-    name: cosmoshub
-    numValidators: 1
-    ports:
-      rest: 1313
-      rpc: 26653
-      faucet: 8003
-
-relayers:
-  - name: osmosis-cosmoshub
-    type: hermes
-    replicas: 1
-    chains:
-      - test-osmosis-1
-      - test-cosmoshub-4
-
-registry:
-  enabled: true
-  ports:
-    rest: 8081
-
-explorer:
-  enabled: true
-  ports:
-    rest: 8080
diff --git a/templates/chain-template/starship/index.ts b/templates/chain-template/starship/index.ts
deleted file mode 100644
index fcb073fe..00000000
--- a/templates/chain-template/starship/index.ts
+++ /dev/null
@@ -1 +0,0 @@
-export * from './types';
diff --git a/templates/chain-template/starship/types.ts b/templates/chain-template/starship/types.ts
deleted file mode 100644
index e822f7e7..00000000
--- a/templates/chain-template/starship/types.ts
+++ /dev/null
@@ -1,19 +0,0 @@
-export interface StarshipConfig {
-  registry: {
-    ports: {
-      rest: number;
-    };
-  };
-  chains: Array<{
-    id: string;
-    name: string;
-    ports: {
-      rpc: number;
-      rest: number;
-      faucet: number;
-    };
-  }>;
-  relayers: Array<{
-    chains: [string, string];
-  }>;
-}
diff --git a/templates/chain-template/utils/asset-list/assets.ts b/templates/chain-template/utils/asset-list/assets.ts
deleted file mode 100644
index 949e91ab..00000000
--- a/templates/chain-template/utils/asset-list/assets.ts
+++ /dev/null
@@ -1,19 +0,0 @@
-import { Asset as OsmosisAsset } from '@chain-registry/types';
-import { asset_lists } from '@chain-registry/assets';
-import { assets } from 'chain-registry';
-
-let osmoAssets: OsmosisAsset[] = [];
-
-const chainInfo = asset_lists.find(
-  ({ chain_name }) => chain_name === 'osmosis'
-);
-if (chainInfo && Array.isArray(chainInfo.assets)) {
-  osmoAssets = [...chainInfo.assets];
-}
-
-let chainInfo2 = assets.find(({ chain_name }) => chain_name === 'osmosis');
-if (chainInfo2 && Array.isArray(chainInfo2.assets)) {
-  osmoAssets = [...osmoAssets, ...chainInfo2.assets];
-}
-
-export const osmosisAssets = osmoAssets;
diff --git a/templates/chain-template/utils/asset-list/base.ts b/templates/chain-template/utils/asset-list/base.ts
deleted file mode 100644
index 856413cd..00000000
--- a/templates/chain-template/utils/asset-list/base.ts
+++ /dev/null
@@ -1,96 +0,0 @@
-import { osmosisAssets } from './assets';
-import {
-  CoinGeckoToken,
-  CoinDenom,
-  Exponent,
-  CoinSymbol,
-  PriceHash,
-  CoinGeckoUSDResponse,
-} from './types';
-import { Asset as OsmosisAsset } from '@chain-registry/types';
-import BigNumber from 'bignumber.js';
-
-export const getOsmoAssetByDenom = (denom: CoinDenom): OsmosisAsset => {
-  return osmosisAssets.find((asset) => asset.base === denom) as OsmosisAsset;
-};
-
-export const getDenomForCoinGeckoId = (
-  coinGeckoId: CoinGeckoToken
-): CoinDenom => {
-  // @ts-ignore
-  return osmosisAssets.find((asset) => asset.coingecko_id === coinGeckoId).base;
-};
-
-export const osmoDenomToSymbol = (denom: CoinDenom): CoinSymbol => {
-  const asset = getOsmoAssetByDenom(denom);
-  const symbol = asset?.symbol;
-  if (!symbol) {
-    return denom;
-  }
-  return symbol;
-};
-
-export const symbolToOsmoDenom = (token: CoinSymbol): CoinDenom => {
-  const asset = osmosisAssets.find(({ symbol }) => symbol === token);
-  const base = asset?.base;
-  if (!base) {
-    console.log(`cannot find base for token ${token}`);
-    // @ts-ignore
-    return null;
-  }
-  return base;
-};
-
-export const getExponentByDenom = (denom: CoinDenom): Exponent => {
-  const asset = getOsmoAssetByDenom(denom);
-  const unit = asset.denom_units.find(({ denom }) => denom === asset.display);
-  // @ts-ignore
-  return unit.exponent;
-};
-
-export const convertGeckoPricesToDenomPriceHash = (
-  prices: CoinGeckoUSDResponse
-): PriceHash => {
-  return Object.keys(prices).reduce((res, geckoId) => {
-    const denom = getDenomForCoinGeckoId(geckoId);
-    // @ts-ignore
-    res[denom] = prices[geckoId].usd;
-    return res;
-  }, {});
-};
-
-export const noDecimals = (num: number | string) => {
-  return new BigNumber(num).decimalPlaces(0, BigNumber.ROUND_DOWN).toString();
-};
-
-export const baseUnitsToDollarValue = (
-  prices: PriceHash,
-  symbol: string,
-  amount: string | number
-) => {
-  const denom = symbolToOsmoDenom(symbol);
-  return new BigNumber(amount)
-    .shiftedBy(-getExponentByDenom(denom))
-    .multipliedBy(prices[denom])
-    .toString();
-};
-
-export const dollarValueToDenomUnits = (
-  prices: PriceHash,
-  symbol: string,
-  value: string | number
-) => {
-  const denom = symbolToOsmoDenom(symbol);
-  return new BigNumber(value)
-    .dividedBy(prices[denom])
-    .shiftedBy(getExponentByDenom(denom))
-    .toString();
-};
-
-export const baseUnitsToDisplayUnits = (
-  symbol: string,
-  amount: string | number
-) => {
-  const denom = symbolToOsmoDenom(symbol);
-  return new BigNumber(amount).shiftedBy(-getExponentByDenom(denom)).toString();
-};
diff --git a/templates/chain-template/utils/asset-list/format.ts b/templates/chain-template/utils/asset-list/format.ts
deleted file mode 100644
index c5fb7036..00000000
--- a/templates/chain-template/utils/asset-list/format.ts
+++ /dev/null
@@ -1,31 +0,0 @@
-import BigNumber from 'bignumber.js';
-import { PrettyAsset } from '@/components';
-import { AvailableItem } from '@interchain-ui/react';
-
-export const truncDecimals = (
-  val: string | number | undefined,
-  decimals: number
-) => {
-  return new BigNumber(val || 0).decimalPlaces(decimals).toString();
-};
-
-export const formatDollarValue = (dollarValue: string, amount: string) => {
-  return new BigNumber(dollarValue).gt(0.01)
-    ? '$' + truncDecimals(dollarValue, 2)
-    : new BigNumber(amount).gt(0)
-    ? '< $0.01'
-    : '$0';
-};
-
-export const prettyAssetToTransferItem = (from: PrettyAsset): AvailableItem => {
-  return {
-    imgSrc: from.logoUrl ?? '',
-    symbol: from.symbol,
-    name: from.prettyChainName,
-    denom: from.denom,
-    available: new BigNumber(from.displayAmount).toNumber(),
-    priceDisplayAmount: new BigNumber(
-      truncDecimals(from.dollarValue, 2)
-    ).toNumber(),
-  };
-};
diff --git a/templates/chain-template/utils/asset-list/index.ts b/templates/chain-template/utils/asset-list/index.ts
deleted file mode 100644
index 8a42ed6d..00000000
--- a/templates/chain-template/utils/asset-list/index.ts
+++ /dev/null
@@ -1,5 +0,0 @@
-export * from './pool';
-export * from './base';
-export * from './assets';
-export * from './format';
-export * from './types';
diff --git a/templates/chain-template/utils/asset-list/pool.ts b/templates/chain-template/utils/asset-list/pool.ts
deleted file mode 100644
index 0d511440..00000000
--- a/templates/chain-template/utils/asset-list/pool.ts
+++ /dev/null
@@ -1,279 +0,0 @@
-import { Pool } from 'osmo-query/dist/codegen/osmosis/gamm/pool-models/balancer/balancerPool';
-import { Coin } from 'osmo-query/dist/codegen/cosmos/base/v1beta1/coin';
-import {
-  PriceHash,
-  CoinValue,
-  PoolPretty,
-  CoinBalance,
-  PoolAssetPretty,
-  PrettyPair,
-} from './types';
-import BigNumber from 'bignumber.js';
-import { osmosisAssets } from './assets';
-import {
-  baseUnitsToDisplayUnits,
-  baseUnitsToDollarValue,
-  dollarValueToDenomUnits,
-  getExponentByDenom,
-  osmoDenomToSymbol,
-  noDecimals,
-  getOsmoAssetByDenom,
-} from './base';
-
-export const calcPoolLiquidity = (pool: Pool, prices: PriceHash): string => {
-  return pool.poolAssets
-    .reduce((res, { token }) => {
-      const liquidity = new BigNumber(token.amount)
-        .shiftedBy(-getExponentByDenom(token.denom))
-        .multipliedBy(prices[token.denom]);
-      return res.plus(liquidity);
-    }, new BigNumber(0))
-    .toString();
-};
-
-export const getPoolByGammName = (pools: Pool[], gammId: string): Pool => {
-  return pools.find(({ totalShares: { denom } }) => denom === gammId) as Pool;
-};
-
-export const convertGammTokenToDollarValue = (
-  coin: Coin,
-  pool: Pool,
-  prices: PriceHash
-): string => {
-  const { amount } = coin;
-  const liquidity = calcPoolLiquidity(pool, prices);
-
-  return new BigNumber(liquidity)
-    .multipliedBy(amount)
-    .dividedBy(pool.totalShares!.amount)
-    .toString();
-};
-
-export const convertDollarValueToCoins = (
-  value: string | number,
-  pool: Pool,
-  prices: PriceHash
-): CoinValue[] => {
-  const tokens = pool.poolAssets.map(({ token: { denom }, weight }) => {
-    const ratio = new BigNumber(weight).dividedBy(pool.totalWeight);
-    const valueByRatio = new BigNumber(value).multipliedBy(ratio);
-    const displayAmount = valueByRatio.dividedBy(prices[denom]).toString();
-    const amount = new BigNumber(displayAmount)
-      .shiftedBy(getExponentByDenom(denom))
-      .toString();
-    const symbol = osmoDenomToSymbol(denom);
-
-    return {
-      denom,
-      symbol,
-      amount,
-      displayAmount,
-      value: valueByRatio.toString(),
-    };
-  });
-  return tokens;
-};
-
-export const convertDollarValueToShares = (
-  value: string | number,
-  pool: Pool,
-  prices: PriceHash
-) => {
-  const liquidity = calcPoolLiquidity(pool, prices);
-
-  return new BigNumber(value)
-    .multipliedBy(pool.totalShares.amount)
-    .dividedBy(liquidity)
-    .shiftedBy(-18)
-    .toString();
-};
-
-const assetHashMap = osmosisAssets.reduce((res, asset) => {
-  return { ...res, [asset.base]: asset };
-}, {});
-
-export const prettyPool = (
-  pool: Pool,
-  { includeDetails = false } = {}
-): PoolPretty => {
-  const totalWeight = new BigNumber(pool.totalWeight);
-  const tokens = pool.poolAssets.map(({ token, weight }) => {
-    // @ts-ignore
-    const asset = assetHashMap?.[token.denom];
-    const symbol = asset?.symbol ?? token.denom;
-    const ratio = new BigNumber(weight).dividedBy(totalWeight).toString();
-    const obj = {
-      symbol,
-      denom: token.denom,
-      amount: token.amount,
-      ratio,
-      info: undefined,
-    };
-    if (includeDetails) {
-      obj.info = asset;
-    }
-    return obj;
-  });
-  const value = {
-    nickname: tokens.map((t) => t.symbol).join('/'),
-    images: undefined,
-  };
-  if (includeDetails) {
-    // @ts-ignore
-    value.images = tokens
-      .map((t) => {
-        // @ts-ignore
-        const imgs = t?.info?.logo_URIs;
-        if (imgs) {
-          return {
-            token: t.symbol,
-            images: imgs,
-          };
-        }
-      })
-      .filter(Boolean);
-  }
-  // @ts-ignore
-  return {
-    ...value,
-    ...pool,
-    poolAssetsPretty: tokens,
-  };
-};
-
-export const calcCoinsNeededForValue = (
-  prices: PriceHash,
-  poolInfo: PoolPretty,
-  value: string | number
-) => {
-  const val = new BigNumber(value);
-  const coinsNeeded = poolInfo.poolAssetsPretty.map(
-    ({ symbol, amount, denom, ratio }) => {
-      const valueByRatio = val.multipliedBy(ratio).toString();
-      const amountNeeded = dollarValueToDenomUnits(
-        prices,
-        symbol,
-        valueByRatio
-      );
-      const unitRatio = new BigNumber(amountNeeded)
-        .dividedBy(amount)
-        .toString();
-
-      return {
-        denom: denom,
-        symbol: symbol,
-        amount: noDecimals(amountNeeded),
-        shareTotalValue: valueByRatio,
-        displayAmount: baseUnitsToDisplayUnits(symbol, amountNeeded),
-        totalDollarValue: baseUnitsToDollarValue(prices, symbol, amount),
-        unitRatio,
-      };
-    }
-  );
-  return coinsNeeded;
-};
-
-export const getCoinBalance = (
-  prices: PriceHash,
-  balances: Coin[],
-  prettyAsset: PoolAssetPretty
-): CoinBalance => {
-  const coinBalance = balances.find((coin) => coin.denom == prettyAsset.denom);
-
-  if (!coinBalance || !coinBalance.amount) {
-    // console.log({ coinBalance });
-    // throw new Error("not enough " + prettyAsset.symbol);
-    // @ts-ignore
-    return { ...coinBalance, displayValue: 0 };
-  }
-
-  const displayValue = baseUnitsToDollarValue(
-    prices,
-    prettyAsset.symbol,
-    coinBalance.amount
-  );
-
-  return { ...coinBalance, displayValue };
-};
-
-export const calcMaxCoinsForPool = (
-  prices: PriceHash,
-  poolInfo: PoolPretty,
-  balances: Coin[]
-) => {
-  const smallestTotalDollarValue = poolInfo.poolAssetsPretty
-    .map((prettyAsset) => {
-      const { displayValue } = getCoinBalance(prices, balances, prettyAsset);
-      return new BigNumber(displayValue).dividedBy(prettyAsset.ratio);
-    })
-    .sort((a, b) => a.minus(b).toNumber())[0]
-    .toString();
-
-  const coinsNeeded = poolInfo.poolAssetsPretty.map((asset) => {
-    const coinValue = new BigNumber(smallestTotalDollarValue)
-      .multipliedBy(asset.ratio)
-      .toString();
-    const amount = dollarValueToDenomUnits(prices, asset.symbol, coinValue);
-
-    return {
-      denom: asset.denom,
-      amount: noDecimals(amount),
-    };
-  });
-
-  return coinsNeeded;
-};
-
-export const calcShareOutAmount = (
-  poolInfo: Pool,
-  coinsNeeded: Coin[]
-): string => {
-  return poolInfo.poolAssets
-    .map(({ token }, i) => {
-      const tokenInAmount = new BigNumber(coinsNeeded[i].amount);
-      const totalShare = new BigNumber(poolInfo.totalShares.amount);
-      const totalShareExp = totalShare.shiftedBy(-18);
-      const poolAssetAmount = new BigNumber(token.amount);
-
-      return tokenInAmount
-        .multipliedBy(totalShareExp)
-        .dividedBy(poolAssetAmount)
-        .shiftedBy(18)
-        .decimalPlaces(0, BigNumber.ROUND_HALF_UP)
-        .toString();
-    })
-    .sort()[0];
-};
-
-export const makePoolPairs = (pools: Pool[]): PrettyPair[] => {
-  // @ts-ignore
-  return pools
-    .filter(
-      (pool) =>
-        pool.poolAssets.length === 2 &&
-        pool.poolAssets.every(({ token }) => !token.denom.startsWith('gamm'))
-    )
-    .map((pool) => {
-      const assetA = pool.poolAssets[0].token;
-      const assetAinfo = getOsmoAssetByDenom(assetA.denom);
-      const assetB = pool.poolAssets[1].token;
-      const assetBinfo = getOsmoAssetByDenom(assetB.denom);
-
-      if (!assetAinfo || !assetBinfo) return;
-
-      return {
-        // TODO fix the fact this is seemingly using long
-        // TODO or, why do we even have pools here???
-        // @ts-ignore
-        poolId: typeof pool.id === 'string' ? pool.id : pool.id.low.toString(),
-        poolAddress: pool.address,
-        baseName: assetAinfo.display,
-        baseSymbol: assetAinfo.symbol,
-        baseAddress: assetAinfo.base,
-        quoteName: assetBinfo.display,
-        quoteSymbol: assetBinfo.symbol,
-        quoteAddress: assetBinfo.base,
-      };
-    })
-    .filter(Boolean);
-};
diff --git a/templates/chain-template/utils/asset-list/types.ts b/templates/chain-template/utils/asset-list/types.ts
deleted file mode 100644
index e1e13eb1..00000000
--- a/templates/chain-template/utils/asset-list/types.ts
+++ /dev/null
@@ -1,85 +0,0 @@
-import { AssetDenomUnit } from '@chain-registry/types';
-import { Duration } from 'osmo-query/dist/codegen/google/protobuf/duration';
-import { Gauge } from 'osmo-query/dist/codegen/osmosis/incentives/gauge';
-import { SuperfluidAsset } from 'osmo-query/dist/codegen/osmosis/superfluid/superfluid';
-import { Coin } from 'osmo-query/dist/codegen/cosmos/base/v1beta1/coin';
-import { Pool } from 'osmo-query/dist/codegen/osmosis/gamm/pool-models/balancer/balancerPool';
-
-export type CoinDenom = AssetDenomUnit['denom'];
-
-export type Exponent = AssetDenomUnit['exponent'];
-
-export type CoinSymbol = string;
-
-export interface PriceHash {
-  [key: CoinDenom]: number;
-}
-
-export type CoinGeckoToken = string;
-
-export interface CoinGeckoUSD {
-  usd: number;
-}
-
-export type CoinGeckoUSDResponse = Record<CoinGeckoToken, CoinGeckoUSD>;
-
-export interface CoinValue {
-  amount: string;
-  denom: CoinDenom;
-  displayAmount: string;
-  value: string;
-  symbol: CoinSymbol;
-}
-
-export type CoinBalance = Coin & { displayValue: string | number };
-
-export interface PoolAssetPretty {
-  symbol: any;
-  denom: string;
-  amount: string;
-  ratio: string;
-  info: any;
-}
-
-export interface PoolTokenImage {
-  token: CoinSymbol;
-  images: {
-    png: string;
-    svg: string;
-  };
-}
-
-export interface PoolPretty extends Pool {
-  nickname: string;
-  images: PoolTokenImage[] | null;
-  poolAssetsPretty: PoolAssetPretty[];
-}
-
-export interface CalcPoolAprsParams {
-  activeGauges: Gauge[];
-  pool: Pool;
-  prices: PriceHash;
-  superfluidPools: SuperfluidAsset[];
-  aprSuperfluid: string | number;
-  lockupDurations: Duration[];
-  volume7d: string | number;
-  swapFee: string | number;
-  lockup?: string;
-  includeNonPerpetual?: boolean;
-}
-
-export interface Trade {
-  sell: Coin;
-  buy: Coin;
-}
-
-export interface PrettyPair {
-  poolId: string;
-  poolAddress: string;
-  baseName: string;
-  baseSymbol: string;
-  baseAddress: string;
-  quoteName: string;
-  quoteSymbol: string;
-  quoteAddress: string;
-}
diff --git a/templates/chain-template/utils/common.ts b/templates/chain-template/utils/common.ts
index 45f856b7..6d392726 100644
--- a/templates/chain-template/utils/common.ts
+++ b/templates/chain-template/utils/common.ts
@@ -2,14 +2,20 @@ import { assets } from 'chain-registry';
 import { Asset, AssetList } from '@chain-registry/types';
 import { GasPrice } from '@cosmjs/stargate';
 import { SignerOptions, Wallet } from '@cosmos-kit/core';
+import { useChain } from '@cosmos-kit/react';
 
 export const getChainAssets = (chainName: string) => {
   return assets.find((chain) => chain.chain_name === chainName) as AssetList;
 };
 
 export const getCoin = (chainName: string) => {
-  const chainAssets = getChainAssets(chainName);
-  return chainAssets.assets[0] as Asset;
+  const { assets } = useChain(chainName);
+  if (!assets) {
+    const chainAssets = getChainAssets(chainName);
+    return chainAssets.assets[0] as Asset;
+  }
+
+  return assets.assets[0] as Asset;
 };
 
 export const getExponent = (chainName: string) => {
@@ -31,7 +37,7 @@ export const getWalletLogo = (wallet: Wallet) => {
 };
 
 export const getSignerOptions = (): SignerOptions => {
-  const defaultGasPrice = GasPrice.fromString('0.025uosmo');
+  const defaultGasPrice = GasPrice.fromString('0.025stake');
 
   return {
     // @ts-ignore
diff --git a/templates/chain-template/utils/faucet.ts b/templates/chain-template/utils/faucet.ts
index 699c8bd9..1b1bc2e5 100644
--- a/templates/chain-template/utils/faucet.ts
+++ b/templates/chain-template/utils/faucet.ts
@@ -13,7 +13,6 @@ export const makeKeplrChainInfo = (chain: Chain, asset: Asset): ChainInfo => {
     coinImageUrl:
       asset.logo_URIs?.svg ||
       asset.logo_URIs?.png ||
-      asset.logo_URIs?.jpeg ||
       '',
   };
 
@@ -26,7 +25,7 @@ export const makeKeplrChainInfo = (chain: Chain, asset: Asset): ChainInfo => {
       coinType: 118,
     },
     bech32Config: {
-      bech32PrefixAccAddr: chain.bech32_prefix,
+      bech32PrefixAccAddr: chain.bech32_prefix ?? '',
       bech32PrefixAccPub: chain.bech32_prefix + 'pub',
       bech32PrefixValAddr: chain.bech32_prefix + 'valoper',
       bech32PrefixValPub: chain.bech32_prefix + 'valoperpub',
@@ -48,25 +47,6 @@ export const makeKeplrChainInfo = (chain: Chain, asset: Asset): ChainInfo => {
   };
 };
 
-export const creditFromFaucet = async (
-  address: string,
-  denom: string,
-  port: number
-) => {
-  const faucetEndpoint = `http://localhost:${port}/credit`;
-
-  await fetch(faucetEndpoint, {
-    method: 'POST',
-    body: JSON.stringify({
-      address,
-      denom,
-    }),
-    headers: {
-      'Content-type': 'application/json',
-    },
-  });
-};
-
 export const validateChainAddress = (address: string, bech32Prefix: string) => {
   if (!address.startsWith(bech32Prefix)) {
     return `Invalid prefix (expected "${bech32Prefix}")`;
diff --git a/templates/chain-template/utils/index.ts b/templates/chain-template/utils/index.ts
index acb8b603..3e96554e 100644
--- a/templates/chain-template/utils/index.ts
+++ b/templates/chain-template/utils/index.ts
@@ -1,6 +1,5 @@
 export * from './common';
 export * from './staking';
 export * from './voting';
-export * from './asset-list';
 export * from './contract';
 export * from './faucet';
diff --git a/templates/chain-template/yarn.lock b/templates/chain-template/yarn.lock
index f09d844d..25c096dc 100644
--- a/templates/chain-template/yarn.lock
+++ b/templates/chain-template/yarn.lock
@@ -5,7 +5,7 @@ __metadata:
   version: 8
   cacheKey: 10c0
 
-"@babel/runtime@npm:^7.12.5, @babel/runtime@npm:^7.21.0":
+"@babel/runtime@npm:^7.12.5":
   version: 7.24.4
   resolution: "@babel/runtime@npm:7.24.4"
   dependencies:
@@ -23,59 +23,37 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@chain-registry/assets@npm:1.70.32":
-  version: 1.70.32
-  resolution: "@chain-registry/assets@npm:1.70.32"
+"@chain-registry/client@npm:^1.49.11":
+  version: 1.53.48
+  resolution: "@chain-registry/client@npm:1.53.48"
   dependencies:
-    "@chain-registry/types": "npm:^0.50.13"
-  checksum: 10c0/7eaca13b5ddcd9b005d86bac75f4348682de9f2debd3b761dbd0a1e487da1c5385909d40d7ff3bf5970191766d2cca8730bab77273d71da6e4c849eb92b29413
-  languageName: node
-  linkType: hard
-
-"@chain-registry/client@npm:1.18.1":
-  version: 1.18.1
-  resolution: "@chain-registry/client@npm:1.18.1"
-  dependencies:
-    "@babel/runtime": "npm:^7.21.0"
-    "@chain-registry/types": "npm:^0.17.1"
-    "@chain-registry/utils": "npm:^1.17.0"
-    bfs-path: "npm:^1.0.2"
-    cross-fetch: "npm:^3.1.5"
-  checksum: 10c0/9e03b44aae667f6050d6de4f1388122470a2dd94693314f7214c925ed4a1eff79e88ca000bf9f10d308bfd5eb633eca722d2b4e413fef7b566c9a83331e71f26
-  languageName: node
-  linkType: hard
-
-"@chain-registry/client@npm:^1.48.1":
-  version: 1.48.31
-  resolution: "@chain-registry/client@npm:1.48.31"
-  dependencies:
-    "@chain-registry/types": "npm:^0.45.31"
-    "@chain-registry/utils": "npm:^1.46.31"
+    "@chain-registry/types": "npm:^0.50.48"
+    "@chain-registry/utils": "npm:^1.51.48"
     bfs-path: "npm:^1.0.2"
     cross-fetch: "npm:^3.1.5"
-  checksum: 10c0/ec4a6fa1ae197b939eab0079464bbca4e7fe82714191ef5d679bb468c97fe71fa664baf8c51583e9db9ac9194ec24a9d598fe20ef0f94dd058f67eff82b4b121
+  checksum: 10c0/4885a1ba51beb63d9a825a14544e8ffbef005b95a3c53c44c8ada9686dfe30b40a97922238e726b2153d2db9d2e1ccb6d5ae733dafc63f17498c373b4bc46e45
   languageName: node
   linkType: hard
 
-"@chain-registry/cosmostation@npm:1.66.2":
-  version: 1.66.2
-  resolution: "@chain-registry/cosmostation@npm:1.66.2"
+"@chain-registry/cosmostation@npm:1.67.13":
+  version: 1.67.13
+  resolution: "@chain-registry/cosmostation@npm:1.67.13"
   dependencies:
-    "@chain-registry/types": "npm:^0.45.1"
-    "@chain-registry/utils": "npm:^1.46.1"
+    "@chain-registry/types": "npm:^0.46.11"
+    "@chain-registry/utils": "npm:^1.47.11"
     "@cosmostation/extension-client": "npm:0.1.15"
-  checksum: 10c0/6ec2bdfd32b05e93bfef23ee72dd65c2c0a539ae70c5cf22fc7e73602e0172bda1a8343352cf4025e410dfec88aa3abe2a59a76e88fc69f2fe5d867eca9408f9
+  checksum: 10c0/d9cb615ab21fc868eb02a877f0ccd4744478a65e2993d1d936c84f67a97a036e363e081193ea1e5c712e59cde985112f66b67012230a5d5d5f49466e8fbbcce6
   languageName: node
   linkType: hard
 
-"@chain-registry/cosmostation@npm:^1.66.2":
-  version: 1.66.38
-  resolution: "@chain-registry/cosmostation@npm:1.66.38"
+"@chain-registry/cosmostation@npm:^1.67.13":
+  version: 1.72.92
+  resolution: "@chain-registry/cosmostation@npm:1.72.92"
   dependencies:
-    "@chain-registry/types": "npm:^0.45.31"
-    "@chain-registry/utils": "npm:^1.46.31"
+    "@chain-registry/types": "npm:^0.50.48"
+    "@chain-registry/utils": "npm:^1.51.48"
     "@cosmostation/extension-client": "npm:0.1.15"
-  checksum: 10c0/f781d7b66f9db61802c9ed33da317a5c55e29021cf2572b5b934967c3700fb8449a1c776078770c5ce9dc3e2127a2ed7120fdf64d0703e4338e37803df9883a6
+  checksum: 10c0/6d98e910c09803ba913cdd4e0805399a73ca69709c0b8a17c8ba1187bfee7fc968dddc05ba2bfe42e17bff9464cfd51de61a1d243b62a9cf86be4162a3fa0a77
   languageName: node
   linkType: hard
 
@@ -91,45 +69,29 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@chain-registry/keplr@npm:^1.68.2":
-  version: 1.68.38
-  resolution: "@chain-registry/keplr@npm:1.68.38"
+"@chain-registry/keplr@npm:^1.69.13":
+  version: 1.74.92
+  resolution: "@chain-registry/keplr@npm:1.74.92"
   dependencies:
-    "@chain-registry/types": "npm:^0.45.31"
+    "@chain-registry/types": "npm:^0.50.48"
     "@keplr-wallet/cosmos": "npm:0.12.28"
     "@keplr-wallet/crypto": "npm:0.12.28"
     semver: "npm:^7.5.0"
-  checksum: 10c0/afdc3a1eec9184d9b01179ed67b450f7cb218270ab7500517aaca021eaf62806e0436c22cf10ce5d1d36c52d0d13c7b009aa632f020acc8c39249822b683d6b3
+  checksum: 10c0/18ed18b3d73c50d457a9ed23eaddaed3ea5b52d11bec74629ba6c68c6c77a979bfdbb467bda7f227bf3d9eaf71da93e9ba5dfce4b4b423db700d2ac8c96597c5
   languageName: node
   linkType: hard
 
-"@chain-registry/types@npm:0.45.1":
-  version: 0.45.1
-  resolution: "@chain-registry/types@npm:0.45.1"
-  checksum: 10c0/d2008c36e2b9d5b4dfbeae2e4038b956789cf7a70bff85d936fdb76a34a16609952b8b233bd09c3e93eeb9ccde26a5492230d1f3e450b2a7a7b8474df76835a5
-  languageName: node
-  linkType: hard
-
-"@chain-registry/types@npm:^0.17.1":
-  version: 0.17.1
-  resolution: "@chain-registry/types@npm:0.17.1"
-  dependencies:
-    "@babel/runtime": "npm:^7.21.0"
-  checksum: 10c0/00400f2994c838dbf0a4a6aa01af397d72badbeee82e13095e1ae1e5853a9405f802f0e5629f3aab0cfaa7ec9eae78eb0976001d5a24a7f33d138e2b02edb547
-  languageName: node
-  linkType: hard
-
-"@chain-registry/types@npm:^0.45.1, @chain-registry/types@npm:^0.45.31":
+"@chain-registry/types@npm:^0.45.1":
   version: 0.45.31
   resolution: "@chain-registry/types@npm:0.45.31"
   checksum: 10c0/dcbca6b8fbfbabed00eacf0f15e1863f38493a86d8135987bb591c65f7145fc17403e9b52d8ca1ed2124922964d7336103e03675b48eaa5345950f44f32aaf54
   languageName: node
   linkType: hard
 
-"@chain-registry/types@npm:^0.45.26":
-  version: 0.45.26
-  resolution: "@chain-registry/types@npm:0.45.26"
-  checksum: 10c0/9f3163a458c7f2a5867bbad2cea0916345df9df3c03e110dfd79290331b58462da903836fb98b573ba1b95ad835ecffb803c3de649edcfcfb608dde7880e24b4
+"@chain-registry/types@npm:^0.46.11":
+  version: 0.46.15
+  resolution: "@chain-registry/types@npm:0.46.15"
+  checksum: 10c0/11655ead021fcc78f317f682842a73666e080216d22f87be5b9fffa9341130b3e8b8a3b1d2d77ec3c41841af4c1fbdf24af467ef12df552fa2e99fe2eae5f1e1
   languageName: node
   linkType: hard
 
@@ -140,37 +102,21 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@chain-registry/utils@npm:^1.17.0":
-  version: 1.46.26
-  resolution: "@chain-registry/utils@npm:1.46.26"
-  dependencies:
-    "@chain-registry/types": "npm:^0.45.26"
-    bignumber.js: "npm:9.1.2"
-    sha.js: "npm:^2.4.11"
-  checksum: 10c0/37cff17ed77323e9c2fe7575261e30ed7e07812b6488e61649252259e6cdb03349146a1d789d2fd5ca77fc51b9baabe38e9ddce267f082a0b95806bf25de505c
+"@chain-registry/types@npm:^0.50.48":
+  version: 0.50.48
+  resolution: "@chain-registry/types@npm:0.50.48"
+  checksum: 10c0/0346db5b3974c2681f40eb80fcd63038bf0128ebb5090ad31f96584064920306db0b6e24ce0445d08a2360907d24e40b4c2924f57213946dfe0b4b91c3131e55
   languageName: node
   linkType: hard
 
-"@chain-registry/utils@npm:^1.46.1, @chain-registry/utils@npm:^1.46.31":
-  version: 1.46.31
-  resolution: "@chain-registry/utils@npm:1.46.31"
+"@chain-registry/utils@npm:^1.47.11, @chain-registry/utils@npm:^1.51.48":
+  version: 1.51.48
+  resolution: "@chain-registry/utils@npm:1.51.48"
   dependencies:
-    "@chain-registry/types": "npm:^0.45.31"
+    "@chain-registry/types": "npm:^0.50.48"
     bignumber.js: "npm:9.1.2"
     sha.js: "npm:^2.4.11"
-  checksum: 10c0/1c4a53f3ac133ffe8d7f6b6c3f15134e204fe375c9b7e66651fc493751f742e3e91a8c130c6fac9e55d7817ad9f0804a7ecd709197fe3ebfdca16044c96bc817
-  languageName: node
-  linkType: hard
-
-"@classic-terra/terra.proto@npm:^1.1.0":
-  version: 1.1.0
-  resolution: "@classic-terra/terra.proto@npm:1.1.0"
-  dependencies:
-    "@improbable-eng/grpc-web": "npm:^0.14.1"
-    google-protobuf: "npm:^3.17.3"
-    long: "npm:^4.0.0"
-    protobufjs: "npm:~6.11.2"
-  checksum: 10c0/b285534bf7242286a9780a484d10d901af491bbfad1b3697f7b3439dc824ae7658ad8d2a8c3af179ef772c66a2c3c5d6118b055b0a087bea29e5a98abdfd6072
+  checksum: 10c0/92b472fa99dc90966c33258b340f9f7f732fc15c3ebf4ded76e9d896f0c3d2ce588d1a14b4033ab8a87f5640bb7ea07ff4489941b6235dace87a077519b8aa8b
   languageName: node
   linkType: hard
 
@@ -184,18 +130,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@cosmjs/amino@npm:0.29.3":
-  version: 0.29.3
-  resolution: "@cosmjs/amino@npm:0.29.3"
-  dependencies:
-    "@cosmjs/crypto": "npm:^0.29.3"
-    "@cosmjs/encoding": "npm:^0.29.3"
-    "@cosmjs/math": "npm:^0.29.3"
-    "@cosmjs/utils": "npm:^0.29.3"
-  checksum: 10c0/5f7916ed259239c83303a5c1ae467021961db7c250a56aba24b2432ad66c2d1612c73055a1e86783f54417720450ba814ca5e854a0c98eb6823f66f20bdecdec
-  languageName: node
-  linkType: hard
-
 "@cosmjs/amino@npm:0.29.4":
   version: 0.29.4
   resolution: "@cosmjs/amino@npm:0.29.4"
@@ -220,7 +154,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@cosmjs/amino@npm:^0.29.3, @cosmjs/amino@npm:^0.29.4, @cosmjs/amino@npm:^0.29.5":
+"@cosmjs/amino@npm:^0.29.4, @cosmjs/amino@npm:^0.29.5":
   version: 0.29.5
   resolution: "@cosmjs/amino@npm:0.29.5"
   dependencies:
@@ -292,7 +226,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@cosmjs/crypto@npm:^0.29.3, @cosmjs/crypto@npm:^0.29.4, @cosmjs/crypto@npm:^0.29.5":
+"@cosmjs/crypto@npm:^0.29.4, @cosmjs/crypto@npm:^0.29.5":
   version: 0.29.5
   resolution: "@cosmjs/crypto@npm:0.29.5"
   dependencies:
@@ -352,7 +286,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@cosmjs/encoding@npm:^0.29.3, @cosmjs/encoding@npm:^0.29.4, @cosmjs/encoding@npm:^0.29.5":
+"@cosmjs/encoding@npm:^0.29.4, @cosmjs/encoding@npm:^0.29.5":
   version: 0.29.5
   resolution: "@cosmjs/encoding@npm:0.29.5"
   dependencies:
@@ -436,7 +370,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@cosmjs/math@npm:^0.29.3, @cosmjs/math@npm:^0.29.4, @cosmjs/math@npm:^0.29.5":
+"@cosmjs/math@npm:^0.29.4, @cosmjs/math@npm:^0.29.5":
   version: 0.29.5
   resolution: "@cosmjs/math@npm:0.29.5"
   dependencies:
@@ -472,21 +406,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@cosmjs/proto-signing@npm:0.29.3":
-  version: 0.29.3
-  resolution: "@cosmjs/proto-signing@npm:0.29.3"
-  dependencies:
-    "@cosmjs/amino": "npm:^0.29.3"
-    "@cosmjs/crypto": "npm:^0.29.3"
-    "@cosmjs/encoding": "npm:^0.29.3"
-    "@cosmjs/math": "npm:^0.29.3"
-    "@cosmjs/utils": "npm:^0.29.3"
-    cosmjs-types: "npm:^0.5.2"
-    long: "npm:^4.0.0"
-  checksum: 10c0/8d73649b3a340a085633609d4db94b4fc01f94574e3ead2667db071afd12a4008a84710142dd15dc315981d39d55c9355c875176e7ab20ac239980110e23eebe
-  languageName: node
-  linkType: hard
-
 "@cosmjs/proto-signing@npm:0.29.4":
   version: 0.29.4
   resolution: "@cosmjs/proto-signing@npm:0.29.4"
@@ -502,7 +421,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@cosmjs/proto-signing@npm:^0.29.3, @cosmjs/proto-signing@npm:^0.29.4":
+"@cosmjs/proto-signing@npm:^0.29.4":
   version: 0.29.5
   resolution: "@cosmjs/proto-signing@npm:0.29.5"
   dependencies:
@@ -608,26 +527,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@cosmjs/stargate@npm:0.29.3":
-  version: 0.29.3
-  resolution: "@cosmjs/stargate@npm:0.29.3"
-  dependencies:
-    "@confio/ics23": "npm:^0.6.8"
-    "@cosmjs/amino": "npm:^0.29.3"
-    "@cosmjs/encoding": "npm:^0.29.3"
-    "@cosmjs/math": "npm:^0.29.3"
-    "@cosmjs/proto-signing": "npm:^0.29.3"
-    "@cosmjs/stream": "npm:^0.29.3"
-    "@cosmjs/tendermint-rpc": "npm:^0.29.3"
-    "@cosmjs/utils": "npm:^0.29.3"
-    cosmjs-types: "npm:^0.5.2"
-    long: "npm:^4.0.0"
-    protobufjs: "npm:~6.11.3"
-    xstream: "npm:^11.14.0"
-  checksum: 10c0/a37fc5ba1f2c8521c55d7efb9dfce0e3bfde7b6cbe241e54b36af769d256683ecd955e8b50ee5a9f6932f8847adda3866c3652ece3610463fac3b6d9a021e9fe
-  languageName: node
-  linkType: hard
-
 "@cosmjs/stargate@npm:0.29.4":
   version: 0.29.4
   resolution: "@cosmjs/stargate@npm:0.29.4"
@@ -704,7 +603,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@cosmjs/stream@npm:^0.29.3, @cosmjs/stream@npm:^0.29.4, @cosmjs/stream@npm:^0.29.5":
+"@cosmjs/stream@npm:^0.29.4, @cosmjs/stream@npm:^0.29.5":
   version: 0.29.5
   resolution: "@cosmjs/stream@npm:0.29.5"
   dependencies:
@@ -740,7 +639,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@cosmjs/tendermint-rpc@npm:^0.29.3, @cosmjs/tendermint-rpc@npm:^0.29.4":
+"@cosmjs/tendermint-rpc@npm:^0.29.4":
   version: 0.29.5
   resolution: "@cosmjs/tendermint-rpc@npm:0.29.5"
   dependencies:
@@ -812,7 +711,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@cosmjs/utils@npm:^0.29.3, @cosmjs/utils@npm:^0.29.4, @cosmjs/utils@npm:^0.29.5":
+"@cosmjs/utils@npm:^0.29.4, @cosmjs/utils@npm:^0.29.5":
   version: 0.29.5
   resolution: "@cosmjs/utils@npm:0.29.5"
   checksum: 10c0/cfb2dbc499bc305cf0b7d3f0afc936b52e0e7492dce33e3bef7986b0e3aa8c34316c60072b7664799d182ce5f5016eaead3d5f948d871c5b1afe30604ef2542d
@@ -844,16 +743,14 @@ __metadata:
   version: 0.0.0-use.local
   resolution: "@cosmology/chain-template@workspace:."
   dependencies:
-    "@chain-registry/assets": "npm:1.70.32"
     "@chain-registry/types": "npm:^0.50.13"
     "@cosmjs/amino": "npm:0.32.3"
     "@cosmjs/cosmwasm-stargate": "npm:0.32.3"
     "@cosmjs/stargate": "npm:0.31.1"
-    "@cosmos-kit/react": "npm:2.18.0"
+    "@cosmos-kit/react": "npm:2.21.2"
     "@interchain-ui/react": "npm:1.23.31"
     "@interchain-ui/react-no-ssr": "npm:0.1.2"
     "@keplr-wallet/types": "npm:^0.12.111"
-    "@starship-ci/cli": "npm:^2.9.0"
     "@tanstack/react-query": "npm:4.32.0"
     "@tanstack/react-query-devtools": "npm:4.32.0"
     "@types/node": "npm:18.11.9"
@@ -863,7 +760,7 @@ __metadata:
     ace-builds: "npm:1.35.0"
     bignumber.js: "npm:9.1.2"
     chain-registry: "npm:^1.69.32"
-    cosmos-kit: "npm:2.18.4"
+    cosmos-kit: "npm:2.23.4"
     dayjs: "npm:1.11.11"
     eslint: "npm:8.28.0"
     eslint-config-next: "npm:13.0.5"
@@ -871,431 +768,407 @@ __metadata:
     interchain-query: "npm:1.10.1"
     next: "npm:^13"
     node-gzip: "npm:^1.1.2"
-    osmo-query: "npm:16.5.1"
     react: "npm:18.2.0"
     react-ace: "npm:11.0.1"
     react-dom: "npm:18.2.0"
     react-dropzone: "npm:^14.2.3"
     react-icons: "npm:5.2.1"
     react-markdown: "npm:9.0.1"
-    starshipjs: "npm:^2.4.0"
     typescript: "npm:4.9.3"
     yaml-loader: "npm:^0.8.1"
     zustand: "npm:4.5.2"
   languageName: unknown
   linkType: soft
 
-"@cosmology/lcd@npm:^0.12.0":
-  version: 0.12.0
-  resolution: "@cosmology/lcd@npm:0.12.0"
-  dependencies:
-    "@babel/runtime": "npm:^7.21.0"
-    axios: "npm:0.27.2"
-  checksum: 10c0/28fbc26cd4c7cf693ae5be7aab637d1f5420f407dbc7a588d67bf5e5bb5e8f0b58e1c428993ca54dbe1dbac8c9dbd9d2713dffad76dfbc727d7bb77b5fb9b041
-  languageName: node
-  linkType: hard
-
-"@cosmos-kit/cdcwallet-extension@npm:^2.13.2":
-  version: 2.13.2
-  resolution: "@cosmos-kit/cdcwallet-extension@npm:2.13.2"
+"@cosmos-kit/cdcwallet-extension@npm:^2.15.3":
+  version: 2.15.3
+  resolution: "@cosmos-kit/cdcwallet-extension@npm:2.15.3"
   dependencies:
-    "@chain-registry/keplr": "npm:1.68.2"
-    "@cosmos-kit/core": "npm:^2.13.1"
+    "@chain-registry/keplr": "npm:^1.69.13"
+    "@cosmos-kit/core": "npm:^2.15.1"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/2c159f90a568ed1a94495950ddc9d5674249276e803eff784143c2b35986933b95a8a8735d6fcd670070651e8bf3c8de67013cd5f58e62dae95f488bfd1a85d9
+  checksum: 10c0/00047f0f842b3789d10689975c82acc1375cf8bc3048c4a9c24335b2664a50993d18f061b4efcd9cf1f55737f6208e366964352c821833fdcf9125352ac2f0a8
   languageName: node
   linkType: hard
 
-"@cosmos-kit/cdcwallet@npm:^2.13.2":
-  version: 2.13.2
-  resolution: "@cosmos-kit/cdcwallet@npm:2.13.2"
+"@cosmos-kit/cdcwallet@npm:^2.15.3":
+  version: 2.15.3
+  resolution: "@cosmos-kit/cdcwallet@npm:2.15.3"
   dependencies:
-    "@cosmos-kit/cdcwallet-extension": "npm:^2.13.2"
-  checksum: 10c0/d9d0d888a771810356154bc4fbfb1b4530cb97831ce7ff1e35c46a2b388864660dc9e0a7c7b76dff720c0a922645a519877e3f0e69180633f48e06ac0f8a5bf5
+    "@cosmos-kit/cdcwallet-extension": "npm:^2.15.3"
+  checksum: 10c0/2f7ff18fbb042598fc2a02c5125ad0e831e4d8fc94aecfbcf08fb2d620d156dc85195a8d2548988eda44a97c80cbf3d9e2edb07ddd442640d092e41f0aee36c1
   languageName: node
   linkType: hard
 
-"@cosmos-kit/coin98-extension@npm:^2.12.2":
-  version: 2.12.2
-  resolution: "@cosmos-kit/coin98-extension@npm:2.12.2"
+"@cosmos-kit/coin98-extension@npm:^2.14.3":
+  version: 2.14.3
+  resolution: "@cosmos-kit/coin98-extension@npm:2.14.3"
   dependencies:
-    "@chain-registry/keplr": "npm:1.68.2"
-    "@cosmos-kit/core": "npm:^2.13.1"
+    "@chain-registry/keplr": "npm:^1.69.13"
+    "@cosmos-kit/core": "npm:^2.15.1"
     cosmjs-types: "npm:>=0.9.0"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/1a1423dd45288f77b7cb615342fa9750a11cfd741d5047ef6737d258d6af115f5e2ef6eac4cc41b5ed7599db7d21d02fb7682e02b0f1b533625714a8316794da
+  checksum: 10c0/9cff3630732c934aff0f40a3c5c068a9b0ee8cfc2d1b7033d97858280b5ca2d9a51732117e606cb6b3d6aaa6ab0f886f2ddcf0e63b27305fccf75a08e20ca2a7
   languageName: node
   linkType: hard
 
-"@cosmos-kit/coin98@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/coin98@npm:2.11.2"
+"@cosmos-kit/coin98@npm:^2.13.3":
+  version: 2.13.3
+  resolution: "@cosmos-kit/coin98@npm:2.13.3"
   dependencies:
-    "@cosmos-kit/coin98-extension": "npm:^2.12.2"
-  checksum: 10c0/7b9cf76b26e816743e17011eb3f1780bf9b49cbcdb7a8d2534322189c4e8e785212fe20794903ffbcfd11c532ab1828463d2527bba85b4a27f921bb8f63e1c9a
+    "@cosmos-kit/coin98-extension": "npm:^2.14.3"
+  checksum: 10c0/14cda5f82fb53020618e5aafbe10e2233d696c51cd34b8b4216874f3275ea14acf2026e3e8d6fc32078dfb95e30011141395358a03988a4e180a13985ff10e21
   languageName: node
   linkType: hard
 
-"@cosmos-kit/compass-extension@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/compass-extension@npm:2.11.2"
+"@cosmos-kit/compass-extension@npm:^2.13.3":
+  version: 2.13.3
+  resolution: "@cosmos-kit/compass-extension@npm:2.13.3"
   dependencies:
-    "@chain-registry/keplr": "npm:1.68.2"
-    "@cosmos-kit/core": "npm:^2.13.1"
+    "@chain-registry/keplr": "npm:^1.69.13"
+    "@cosmos-kit/core": "npm:^2.15.1"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/663087e375619b271e0a0c41e45679c5e45ba17d0c6bd12a354316471ad186454583d15ff5076c106660b9becd723ed6ad3645a502352309a453053955cea8cf
+  checksum: 10c0/78bc0c3a8eaa0bb6ff0efc3ca73563958313bcb275b9852d80361d23a952eba3f200bfc89eae141c35936d84b1d156286d62642e018965e7ba9871cf8d8a2faf
   languageName: node
   linkType: hard
 
-"@cosmos-kit/compass@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/compass@npm:2.11.2"
+"@cosmos-kit/compass@npm:^2.13.3":
+  version: 2.13.3
+  resolution: "@cosmos-kit/compass@npm:2.13.3"
   dependencies:
-    "@cosmos-kit/compass-extension": "npm:^2.11.2"
-  checksum: 10c0/35fe8f1cfe889425cfd85ed41e8299839677a12a4fe3228b78cf2cf5e9389990aeb737b7cea3c9fb7b316a72abfa4bcd441fe07a4065f14e7f59b96d108b7ffe
+    "@cosmos-kit/compass-extension": "npm:^2.13.3"
+  checksum: 10c0/3cf47901549d400bbe0ce79dbe8805da67c3ad8abd1eff989bb318c79bf5b64baf46b00ae43f2b724626318c9eca4d118ab92847d78cc34a604b09ee73a13a52
   languageName: node
   linkType: hard
 
-"@cosmos-kit/core@npm:^2.13.1":
-  version: 2.13.1
-  resolution: "@cosmos-kit/core@npm:2.13.1"
+"@cosmos-kit/core@npm:^2.15.1":
+  version: 2.15.1
+  resolution: "@cosmos-kit/core@npm:2.15.1"
   dependencies:
-    "@chain-registry/client": "npm:^1.48.1"
-    "@chain-registry/keplr": "npm:^1.68.2"
-    "@chain-registry/types": "npm:^0.45.1"
+    "@chain-registry/client": "npm:^1.49.11"
+    "@chain-registry/keplr": "npm:^1.69.13"
+    "@chain-registry/types": "npm:^0.46.11"
     "@cosmjs/amino": "npm:^0.32.3"
     "@cosmjs/cosmwasm-stargate": "npm:^0.32.3"
     "@cosmjs/proto-signing": "npm:^0.32.3"
     "@cosmjs/stargate": "npm:^0.32.3"
-    "@dao-dao/cosmiframe": "npm:^0.1.0"
+    "@dao-dao/cosmiframe": "npm:^1.0.0-rc.1"
     "@walletconnect/types": "npm:2.11.0"
     bowser: "npm:2.11.0"
     cosmjs-types: "npm:^0.9.0"
     events: "npm:3.3.0"
     nock: "npm:13.5.4"
     uuid: "npm:^9.0.1"
-  checksum: 10c0/5295440b213fed8d1853023253888652dd57624ea7dee86720c04964f00209078fafc843359686daffac78fc8e52b68078fbbdf4552dd2e8903315f2ab0e22d5
+  checksum: 10c0/922b0608742e3a3822b33945f29ba0ea779a47ecbe3a9679fc45506d4d17d5ee9788791480d87c00e5a018c48b227866e0e8e0d2554c38f84d6b4e8bd9820c0b
   languageName: node
   linkType: hard
 
-"@cosmos-kit/cosmostation-extension@npm:^2.12.2":
-  version: 2.12.2
-  resolution: "@cosmos-kit/cosmostation-extension@npm:2.12.2"
+"@cosmos-kit/cosmostation-extension@npm:^2.15.2":
+  version: 2.15.2
+  resolution: "@cosmos-kit/cosmostation-extension@npm:2.15.2"
   dependencies:
-    "@chain-registry/cosmostation": "npm:^1.66.2"
-    "@cosmos-kit/core": "npm:^2.13.1"
+    "@chain-registry/cosmostation": "npm:^1.67.13"
+    "@cosmos-kit/core": "npm:^2.15.1"
     cosmjs-types: "npm:^0.9.0"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/fcc95612410700ed8114322b5cda8d059b9e168511d5ecdc652b0bdf97c48b25d46fd38227323066cd0b447ff0b8dd59bdb6c0925b8979480032947f77165f6b
+  checksum: 10c0/49ec82b9b882c477765f1656ed17a43ebb7331018ba92b121e1d7b69a936775afd4bc0b93bbedd2bc2642f1dfc912b85fa3b9ffa19eeb3c231a1d54db0800afc
   languageName: node
   linkType: hard
 
-"@cosmos-kit/cosmostation-mobile@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/cosmostation-mobile@npm:2.11.2"
+"@cosmos-kit/cosmostation-mobile@npm:^2.13.2":
+  version: 2.13.2
+  resolution: "@cosmos-kit/cosmostation-mobile@npm:2.13.2"
   dependencies:
-    "@chain-registry/cosmostation": "npm:1.66.2"
-    "@cosmos-kit/core": "npm:^2.13.1"
-    "@cosmos-kit/walletconnect": "npm:^2.10.1"
-  checksum: 10c0/a52d1ae62b1797b809251715e3c88c74646053e34f9e9b96d9d170c252ecf18118bf55e58ca59a8fd50fa7503cd5aebd5a59546de1dabfa618f09733ff3c5439
+    "@chain-registry/cosmostation": "npm:1.67.13"
+    "@cosmos-kit/core": "npm:^2.15.1"
+    "@cosmos-kit/walletconnect": "npm:^2.12.1"
+  checksum: 10c0/157f334c6aace0a2a9396a619884ac198f8b1004c166e873c4f2de96fbbaf13b77f190cc3da3f6da778c20f5529b4ca26f718b21cc591ef5205eee5daee38e66
   languageName: node
   linkType: hard
 
-"@cosmos-kit/cosmostation@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/cosmostation@npm:2.11.2"
+"@cosmos-kit/cosmostation@npm:^2.14.2":
+  version: 2.14.2
+  resolution: "@cosmos-kit/cosmostation@npm:2.14.2"
   dependencies:
-    "@cosmos-kit/cosmostation-extension": "npm:^2.12.2"
-    "@cosmos-kit/cosmostation-mobile": "npm:^2.11.2"
-  checksum: 10c0/f1c55e88e97b47091e5f757a9a4615ddec90baf4e49bbc7d401537728e75cd93b4e96f999215d3d74b3c9c65748b8dd81851b2565c964376a592df4326a445c9
+    "@cosmos-kit/cosmostation-extension": "npm:^2.15.2"
+    "@cosmos-kit/cosmostation-mobile": "npm:^2.13.2"
+  checksum: 10c0/eee4cb32432f78cf313c3a0ee35371e436bf34480cf15dfcd5666d7e769e6a85633daadd265cb86f2e2e844cf1c50037693e58821c37ccb5afe5fa70f59ab122
   languageName: node
   linkType: hard
 
-"@cosmos-kit/exodus-extension@npm:^2.10.2":
-  version: 2.10.2
-  resolution: "@cosmos-kit/exodus-extension@npm:2.10.2"
+"@cosmos-kit/ctrl-extension@npm:^2.14.2":
+  version: 2.14.2
+  resolution: "@cosmos-kit/ctrl-extension@npm:2.14.2"
   dependencies:
-    "@cosmos-kit/core": "npm:^2.13.1"
-    react-icons: "npm:4.4.0"
+    "@cosmos-kit/core": "npm:^2.15.1"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/a6b7716472fd28a3172a99471d8e8f9c557344f0c9ea36e5e031f2424e9674ba5de16998fcb2bd0b72d5037a93bfae662f687d83f04268647042462707de3c6c
+  checksum: 10c0/97beb17c82dc313229be5f4d08ca728336f269c2c44abe120a449e8fdf85574b1275548a142ccab0a59eeee1148a6072ecfbc9096e613d38cc473e01283c1702
   languageName: node
   linkType: hard
 
-"@cosmos-kit/exodus@npm:^2.10.2":
-  version: 2.10.2
-  resolution: "@cosmos-kit/exodus@npm:2.10.2"
+"@cosmos-kit/ctrl@npm:^2.13.2":
+  version: 2.13.2
+  resolution: "@cosmos-kit/ctrl@npm:2.13.2"
   dependencies:
-    "@cosmos-kit/exodus-extension": "npm:^2.10.2"
-  checksum: 10c0/5733c78fbf176824881124b97a0404d95faf366d39b13fa4e3eecc1119edc9932f7f1469bd2c66d7f7c41d28d70392bf66deaebc76ba3c0a6f353f6e7d557502
+    "@cosmos-kit/ctrl-extension": "npm:^2.14.2"
+  checksum: 10c0/0e4a08bf04ace8b7c58d3c543026b2fef2ad087357e98e90c44fc3363f833446188e402617154622ada2b2aa51042fedbc3ca637f79035d7ba6d8edb0656765e
   languageName: node
   linkType: hard
 
-"@cosmos-kit/fin-extension@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/fin-extension@npm:2.11.2"
+"@cosmos-kit/exodus-extension@npm:^2.12.2":
+  version: 2.12.2
+  resolution: "@cosmos-kit/exodus-extension@npm:2.12.2"
   dependencies:
-    "@chain-registry/keplr": "npm:1.68.2"
-    "@cosmos-kit/core": "npm:^2.13.1"
+    "@cosmos-kit/core": "npm:^2.15.1"
+    react-icons: "npm:4.4.0"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/314968c6c2c637fbc4d7785dd3fb2e12203ea9566583f7b8bc101833c59497d9ce3bd0216236b5dbcbb787d0492b80f9e501bd54d898f5a150b8f76fa46d4537
+  checksum: 10c0/19aacb7c1c55c48626ca704962619adfd435cb09ec84887f598aa0a368d4389dc6666a747b9a0655b43632fe2f386b706bec96c56811e9af84503640ac349098
   languageName: node
   linkType: hard
 
-"@cosmos-kit/fin@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/fin@npm:2.11.2"
+"@cosmos-kit/exodus@npm:^2.12.2":
+  version: 2.12.2
+  resolution: "@cosmos-kit/exodus@npm:2.12.2"
   dependencies:
-    "@cosmos-kit/fin-extension": "npm:^2.11.2"
-  checksum: 10c0/f24e13e27baf5caf37f1bd18474dad022f4b987fd0213974c7fdd4510cfce3eab428d69ed73ed134115f3b91aa208ec29451ab92f71146660a510ea92f08a025
+    "@cosmos-kit/exodus-extension": "npm:^2.12.2"
+  checksum: 10c0/cc734a9a40882b84e35ebd495c1ad470446c9f989f892fd19d679be984cbf486bb9499ac6355f2b7fdeeb9c7e00ae5d05b9be4e390e13e07de2453c4678dfd61
   languageName: node
   linkType: hard
 
-"@cosmos-kit/frontier-extension@npm:^2.10.2":
-  version: 2.10.2
-  resolution: "@cosmos-kit/frontier-extension@npm:2.10.2"
+"@cosmos-kit/fin-extension@npm:^2.13.3":
+  version: 2.13.3
+  resolution: "@cosmos-kit/fin-extension@npm:2.13.3"
   dependencies:
-    "@cosmos-kit/core": "npm:^2.13.1"
+    "@chain-registry/keplr": "npm:^1.69.13"
+    "@cosmos-kit/core": "npm:^2.15.1"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/ae6ceeaaded9367d0a46932d534c051c0ec8d49a76dd80144c61f8de5d9ddbf3cdfe03b682a2ea66756ce93e46e2e1142251a31174ffbc45f688a1aff9cc3155
+  checksum: 10c0/66137ef31aefac93b297fe08b709cb03fd327e44d248a20797be588bd35bb0413abd2573b9b87327d16bc254d5f70ec65744364dc8899686ae3553a26991d4e2
   languageName: node
   linkType: hard
 
-"@cosmos-kit/frontier@npm:^2.10.2":
-  version: 2.10.2
-  resolution: "@cosmos-kit/frontier@npm:2.10.2"
+"@cosmos-kit/fin@npm:^2.13.3":
+  version: 2.13.3
+  resolution: "@cosmos-kit/fin@npm:2.13.3"
   dependencies:
-    "@cosmos-kit/frontier-extension": "npm:^2.10.2"
-  checksum: 10c0/617ed26dd6cecf960b511180f9a15b4a1360ae7293467ea165b25a4ce89e192d98dc47d77d4086af79abd7ca682a26d2311ac61c3c3cf164b0007a87bca994f5
+    "@cosmos-kit/fin-extension": "npm:^2.13.3"
+  checksum: 10c0/8718284b76ad250b48737dd494054c943f7cef3c848b4ee9fa3dacbc837e7d6d013816245765042b6060c2639e1d566de086481f8d7904bb742852338bc4c759
   languageName: node
   linkType: hard
 
-"@cosmos-kit/galaxy-station-extension@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/galaxy-station-extension@npm:2.11.2"
+"@cosmos-kit/keplr-extension@npm:^2.14.2":
+  version: 2.14.2
+  resolution: "@cosmos-kit/keplr-extension@npm:2.14.2"
   dependencies:
-    "@chain-registry/types": "npm:0.45.1"
-    "@cosmos-kit/core": "npm:^2.13.1"
-    "@hexxagon/feather.js": "npm:^1.0.9-beta.8"
-    "@hexxagon/station-connector": "npm:^1.0.17"
-  peerDependencies:
-    "@cosmjs/amino": ">=0.32.3"
-    "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/6c481b17504935ed589583d18cda708a9d81efde41e66c589b16ee401b8ae72a887b016a106a3a0f2ce9afd12560244474ccd11f818143d342169cea769ca073
-  languageName: node
-  linkType: hard
-
-"@cosmos-kit/galaxy-station@npm:^2.10.2":
-  version: 2.10.2
-  resolution: "@cosmos-kit/galaxy-station@npm:2.10.2"
-  dependencies:
-    "@cosmos-kit/galaxy-station-extension": "npm:^2.11.2"
-  checksum: 10c0/86721b41a710dae0c8ec22c0466def90ef8b61cd09505e648d145bcd48997413e996cda4330bfce96e2e788cfcd572bbed556ad1d4d8ef693a1e7a6a3cb765d4
-  languageName: node
-  linkType: hard
-
-"@cosmos-kit/keplr-extension@npm:^2.12.2":
-  version: 2.12.2
-  resolution: "@cosmos-kit/keplr-extension@npm:2.12.2"
-  dependencies:
-    "@chain-registry/keplr": "npm:^1.68.2"
-    "@cosmos-kit/core": "npm:^2.13.1"
+    "@chain-registry/keplr": "npm:^1.69.13"
+    "@cosmos-kit/core": "npm:^2.15.1"
     "@keplr-wallet/provider-extension": "npm:^0.12.95"
     "@keplr-wallet/types": "npm:^0.12.95"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/679a71402b31a520dfe4a14ac18b7d3bc2aec75132760f4d3ad67ae91170a52e5c33587fb8208126ffec8ac911fe07413d37edf2d99c4637fec8d836d6338753
+  checksum: 10c0/d7a9b0b430e8538ef538e7ad3f4656811fbde1906bea4148dfbe206124655477285d3742174b6f428725ba4ab51cf3d137e51497364166726f674029e7879676
   languageName: node
   linkType: hard
 
-"@cosmos-kit/keplr-mobile@npm:^2.12.2":
-  version: 2.12.2
-  resolution: "@cosmos-kit/keplr-mobile@npm:2.12.2"
+"@cosmos-kit/keplr-mobile@npm:^2.14.3":
+  version: 2.14.3
+  resolution: "@cosmos-kit/keplr-mobile@npm:2.14.3"
   dependencies:
-    "@chain-registry/keplr": "npm:1.68.2"
-    "@cosmos-kit/core": "npm:^2.13.1"
-    "@cosmos-kit/keplr-extension": "npm:^2.12.2"
-    "@cosmos-kit/walletconnect": "npm:^2.10.1"
+    "@chain-registry/keplr": "npm:^1.69.13"
+    "@cosmos-kit/core": "npm:^2.15.1"
+    "@cosmos-kit/keplr-extension": "npm:^2.14.2"
+    "@cosmos-kit/walletconnect": "npm:^2.12.1"
     "@keplr-wallet/provider-extension": "npm:^0.12.95"
     "@keplr-wallet/wc-client": "npm:^0.12.95"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/9e8ece5399bd206089e796812018e36ba76be39282e6b397316cb8c102512ee3e866d7b297530067f1705aa808095e016ae785295f0f8cc5d3ae2b780c943090
+  checksum: 10c0/d4e774a7a4dbe20690a6aabcd19b349ace795f975314d7d63f4e1c4d00b3eb4b696bb707e736c576d413689988ccdbee0f9eb6c7c4b1d19d419e90cfb6a3c19d
   languageName: node
   linkType: hard
 
-"@cosmos-kit/keplr@npm:^2.12.2":
-  version: 2.12.2
-  resolution: "@cosmos-kit/keplr@npm:2.12.2"
+"@cosmos-kit/keplr@npm:^2.14.3":
+  version: 2.14.3
+  resolution: "@cosmos-kit/keplr@npm:2.14.3"
   dependencies:
-    "@cosmos-kit/keplr-extension": "npm:^2.12.2"
-    "@cosmos-kit/keplr-mobile": "npm:^2.12.2"
-  checksum: 10c0/7bc3c2f6b8c360ab0d8fedc02353341d2ad64351d4f309e2a8374484170975e2cdb1a6866af58a2edb1957cc5e4e28012b43f283d23e4e3e9f0478d2db2770ae
+    "@cosmos-kit/keplr-extension": "npm:^2.14.2"
+    "@cosmos-kit/keplr-mobile": "npm:^2.14.3"
+  checksum: 10c0/f44131c4d32df3be502e271314f7aa8d3693147dda3b258e903bdbc04f1fc7fac2fa1f183d63088612566c9b3187e7fae0c7d8e153e289037aea1d2d8a0e5439
   languageName: node
   linkType: hard
 
-"@cosmos-kit/leap-extension@npm:^2.12.2":
-  version: 2.12.2
-  resolution: "@cosmos-kit/leap-extension@npm:2.12.2"
+"@cosmos-kit/leap-extension@npm:^2.14.3":
+  version: 2.14.3
+  resolution: "@cosmos-kit/leap-extension@npm:2.14.3"
   dependencies:
-    "@chain-registry/keplr": "npm:1.68.2"
-    "@cosmos-kit/core": "npm:^2.13.1"
+    "@chain-registry/keplr": "npm:^1.69.13"
+    "@cosmos-kit/core": "npm:^2.15.1"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/5d7130cefbf5d29e05f7b792ac8f4d31ffd962088a25531d5be7cae5221309755a8a978982baf627d069d9ff315a6de592c527539657ee3dcf6f6957d205d223
+  checksum: 10c0/0d63e1bf76a911aa15781bb9d3faf82af5fdbfe66094aeed40a391f6fc7803c932916dac53d205554ce57206cfc2e1afc9d53c3c0077340051bc43340afa9dba
   languageName: node
   linkType: hard
 
-"@cosmos-kit/leap-metamask-cosmos-snap@npm:^0.12.2":
-  version: 0.12.2
-  resolution: "@cosmos-kit/leap-metamask-cosmos-snap@npm:0.12.2"
+"@cosmos-kit/leap-metamask-cosmos-snap@npm:^0.14.3":
+  version: 0.14.3
+  resolution: "@cosmos-kit/leap-metamask-cosmos-snap@npm:0.14.3"
   dependencies:
-    "@chain-registry/keplr": "npm:1.68.2"
-    "@cosmos-kit/core": "npm:^2.13.1"
+    "@chain-registry/keplr": "npm:^1.69.13"
+    "@cosmos-kit/core": "npm:^2.15.1"
     "@leapwallet/cosmos-snap-provider": "npm:0.1.26"
     "@metamask/providers": "npm:^11.1.1"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
     cosmjs-types: ">=0.9.0"
-  checksum: 10c0/123838d21fb83fce13f4635bf34c6484dd8f5e9f6d24d5ce674afd196e0a67c9f6e3e6068c873160060377c8c231d3089a40e5d93a51c9526eed1bd91d8a0080
+  checksum: 10c0/bbd464264c2ec483b650fea8f90c68b7a53e8b4db87b50776ca8a622852cdba3cf9d00c9eeb5f38edb1f65428d9a1431176e6b3061c0a42574cefca85cb26dd4
   languageName: node
   linkType: hard
 
-"@cosmos-kit/leap-mobile@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/leap-mobile@npm:2.11.2"
+"@cosmos-kit/leap-mobile@npm:^2.13.3":
+  version: 2.13.3
+  resolution: "@cosmos-kit/leap-mobile@npm:2.13.3"
   dependencies:
-    "@chain-registry/keplr": "npm:1.68.2"
-    "@cosmos-kit/core": "npm:^2.13.1"
-    "@cosmos-kit/walletconnect": "npm:^2.10.1"
-  checksum: 10c0/b00131dcdf4155dd6fde16afc3233accf64b31a1dbfbc854b95d7b89642fe95c39d182477cbd102b335b59a59f659072238a29f84e970f3e126694ee22d74596
+    "@chain-registry/keplr": "npm:^1.69.13"
+    "@cosmos-kit/core": "npm:^2.15.1"
+    "@cosmos-kit/walletconnect": "npm:^2.12.1"
+  checksum: 10c0/6b3b6090bfc6bfbcc883c1d6252995dec4f6cdeda16f963bce1a156fcea48164bdb0fec34125fa0ce3bf148accaa7fd0a4fa8ccd525cc71140944f31547ff1d5
   languageName: node
   linkType: hard
 
-"@cosmos-kit/leap@npm:^2.12.2":
-  version: 2.12.2
-  resolution: "@cosmos-kit/leap@npm:2.12.2"
+"@cosmos-kit/leap@npm:^2.14.3":
+  version: 2.14.3
+  resolution: "@cosmos-kit/leap@npm:2.14.3"
   dependencies:
-    "@cosmos-kit/leap-extension": "npm:^2.12.2"
-    "@cosmos-kit/leap-metamask-cosmos-snap": "npm:^0.12.2"
-    "@cosmos-kit/leap-mobile": "npm:^2.11.2"
-  checksum: 10c0/cf146378bfd82c7ca84ed4dbd95371ab02b496cd98aa041e5047dfa529f7c9723aae57cc74811f810ebbd737902ea84ea4677d82d9099ab7b2d5c1df19c3a104
+    "@cosmos-kit/leap-extension": "npm:^2.14.3"
+    "@cosmos-kit/leap-metamask-cosmos-snap": "npm:^0.14.3"
+    "@cosmos-kit/leap-mobile": "npm:^2.13.3"
+  checksum: 10c0/f03f74922a29dd5189dc83b3905d5a06a3e1da7c241b19be52961306d1310f84fb8b98b7350352dc9e4bd2cebb63b97a51acb21ceabe1b2211200196e0d68bd4
   languageName: node
   linkType: hard
 
-"@cosmos-kit/ledger@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/ledger@npm:2.11.2"
+"@cosmos-kit/ledger@npm:^2.13.2":
+  version: 2.13.2
+  resolution: "@cosmos-kit/ledger@npm:2.13.2"
   dependencies:
-    "@cosmos-kit/core": "npm:^2.13.1"
+    "@cosmos-kit/core": "npm:^2.15.1"
     "@ledgerhq/hw-app-cosmos": "npm:^6.28.1"
     "@ledgerhq/hw-transport-webhid": "npm:^6.27.15"
     "@ledgerhq/hw-transport-webusb": "npm:^6.27.15"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/96bacf4e41569bb274d10871e1974d156bc2a58e2e3bdf7ae7ee1b73630d2267f6a852c114e9ee30cda03ddda9f7e3d74ed2b937e9c575f84f87919804f985ec
+  checksum: 10c0/6744afc8251bec9cfd1acd8e7f7c0dcefc0a0ab06b82e66ca3384664cab984d0ac0c4bb1319d455a46d075bcb15a2fef693d34ddd3d3dcc9ccd4ef9a3431e72c
   languageName: node
   linkType: hard
 
-"@cosmos-kit/okxwallet-extension@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/okxwallet-extension@npm:2.11.2"
+"@cosmos-kit/okxwallet-extension@npm:^2.13.1":
+  version: 2.13.1
+  resolution: "@cosmos-kit/okxwallet-extension@npm:2.13.1"
   dependencies:
-    "@cosmos-kit/core": "npm:^2.13.1"
+    "@cosmos-kit/core": "npm:^2.15.1"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/f2b2bd0067eed702f6a16cf8ef716e1c6a7aa42d8f263b90f4fb8e2346c41a275221a544c4fd42bb50a83d13c254de90d428e1f0b22c3591075e0daf37d069eb
+  checksum: 10c0/9c66ea972d20b9fb1488c2e7b8f6665b7235c6315184187fc808e520d64a4b05f760c8ad9aafb8deba5bb00eaed3e9771d8cadcb4b2566ecd32cfd6b05091e73
   languageName: node
   linkType: hard
 
-"@cosmos-kit/omni-mobile@npm:^2.10.2":
-  version: 2.10.2
-  resolution: "@cosmos-kit/omni-mobile@npm:2.10.2"
+"@cosmos-kit/omni-mobile@npm:^2.12.2":
+  version: 2.12.2
+  resolution: "@cosmos-kit/omni-mobile@npm:2.12.2"
   dependencies:
-    "@cosmos-kit/core": "npm:^2.13.1"
-    "@cosmos-kit/walletconnect": "npm:^2.10.1"
+    "@cosmos-kit/core": "npm:^2.15.1"
+    "@cosmos-kit/walletconnect": "npm:^2.12.1"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/71a780a4f7a9ffa60be8c35c0515123c4e657a4f4495df23c0343d870838ebac64a65678a15748774b166f60cde5894075534213e354f54d4e12d09cbada3cf3
+  checksum: 10c0/746445986feff46911499d21046fab601b74af8fe3dbb1393970aa7822eceb409ac69d4b463e663ec0bdfc62eb5d05e53b575279ea10c6044c018c98cfccdbc6
   languageName: node
   linkType: hard
 
-"@cosmos-kit/omni@npm:^2.10.2":
-  version: 2.10.2
-  resolution: "@cosmos-kit/omni@npm:2.10.2"
+"@cosmos-kit/omni@npm:^2.12.2":
+  version: 2.12.2
+  resolution: "@cosmos-kit/omni@npm:2.12.2"
   dependencies:
-    "@cosmos-kit/omni-mobile": "npm:^2.10.2"
-  checksum: 10c0/d33c64f53f740cf4c50bbdf04a195c8f676d1acfb94aac82b996cd183afdd405602904ac1ff11c41daddcde2a56691f959d528259e7d26d0a57b18ce61d4807e
+    "@cosmos-kit/omni-mobile": "npm:^2.12.2"
+  checksum: 10c0/478d3ddc7157b8562438fea8bc7c38a17c8771f1e8a6ac01d623be186ae43206a801d9741da3b632e4459a393f065b4211d49f62d8943f43eb9615564e8c8b3e
   languageName: node
   linkType: hard
 
-"@cosmos-kit/owallet-extension@npm:^2.12.2":
-  version: 2.12.2
-  resolution: "@cosmos-kit/owallet-extension@npm:2.12.2"
+"@cosmos-kit/owallet-extension@npm:^2.14.3":
+  version: 2.14.3
+  resolution: "@cosmos-kit/owallet-extension@npm:2.14.3"
   dependencies:
-    "@chain-registry/keplr": "npm:1.68.2"
-    "@cosmos-kit/core": "npm:^2.13.1"
+    "@chain-registry/keplr": "npm:^1.69.13"
+    "@cosmos-kit/core": "npm:^2.15.1"
     "@keplr-wallet/types": "npm:^0.12.90"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/c6e10fa9caff33c3a8788ec1be4a12ee2c25d906a4fb24b0b08c387d6ea6c6b6b3d0e2a77e980c0839513a42ef790db897a310327ba0354a0ed79987f98ca285
+  checksum: 10c0/1c18333b267fbeea31c44a976fcb3577dfd48dc23714c474a90bbc21cbd59e7e9f2d78f3f11a6ee3e9c6fc61a8d98022d86781df0d627e197c4798a34a8c2081
   languageName: node
   linkType: hard
 
-"@cosmos-kit/owallet@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/owallet@npm:2.11.2"
+"@cosmos-kit/owallet-mobile@npm:^2.15.2":
+  version: 2.15.2
+  resolution: "@cosmos-kit/owallet-mobile@npm:2.15.2"
   dependencies:
-    "@cosmos-kit/owallet-extension": "npm:^2.12.2"
-  checksum: 10c0/06d2a2b086d932ac18824a926674e6f102c99e4cd8ebfb79e5e0254d594c2ef82b2e44da550144ce56bd685c44a84b6c4cecc421b062b7a1ed07a07ae9f0e52a
+    "@chain-registry/keplr": "npm:1.68.2"
+    "@cosmos-kit/core": "npm:^2.15.1"
+    "@cosmos-kit/walletconnect": "npm:^2.12.1"
+  checksum: 10c0/c1d930d0f55a2dd777690b2672ef003c1edf072df535316ee5b30b48a414d795cef1d09cf96b099e6e60afc357cdba1cc4776a6f2da09bdd13b37adde0682002
   languageName: node
   linkType: hard
 
-"@cosmos-kit/react-lite@npm:^2.13.0":
-  version: 2.13.0
-  resolution: "@cosmos-kit/react-lite@npm:2.13.0"
+"@cosmos-kit/owallet@npm:^2.14.2":
+  version: 2.14.2
+  resolution: "@cosmos-kit/owallet@npm:2.14.2"
   dependencies:
-    "@chain-registry/types": "npm:^0.45.1"
-    "@cosmos-kit/core": "npm:^2.13.1"
-    "@dao-dao/cosmiframe": "npm:^0.1.0"
+    "@cosmos-kit/owallet-extension": "npm:^2.14.3"
+    "@cosmos-kit/owallet-mobile": "npm:^2.15.2"
+  checksum: 10c0/70aabde56b9941c71269dc2d8cab5a68e733c9c98b1c15ca80edbafbf4a7b9ae75619f21d22c6873b1447ac1e4d62ef32e401099c83a0c3d731a6b378fc94b56
+  languageName: node
+  linkType: hard
+
+"@cosmos-kit/react-lite@npm:^2.15.3":
+  version: 2.15.3
+  resolution: "@cosmos-kit/react-lite@npm:2.15.3"
+  dependencies:
+    "@chain-registry/types": "npm:^0.46.11"
+    "@cosmos-kit/core": "npm:^2.15.1"
+    "@dao-dao/cosmiframe": "npm:^1.0.0-rc.1"
   peerDependencies:
     "@types/react": ">= 17"
     "@types/react-dom": ">= 17"
     react: ^18
     react-dom: ^18
-  checksum: 10c0/8eae200d14fdd74cfad691a56ae3cd87e4d84f3b0483669adc4cc0228782bd630959b13e0cd1276ad3b297aa21b56bbd93867e9644daa25bd4ea95cbafa682a6
+  checksum: 10c0/20bbf49f582e1e5f179f2e0f4e213652f2fb3c20863e01789821f51e6017717a54ae2a8f1f0060392c890e7f7c793758b2ea5d9d0765dea586b72d31f350bbc2
   languageName: node
   linkType: hard
 
-"@cosmos-kit/react@npm:2.18.0":
-  version: 2.18.0
-  resolution: "@cosmos-kit/react@npm:2.18.0"
+"@cosmos-kit/react@npm:2.21.2":
+  version: 2.21.2
+  resolution: "@cosmos-kit/react@npm:2.21.2"
   dependencies:
-    "@chain-registry/types": "npm:^0.45.1"
-    "@cosmos-kit/core": "npm:^2.13.1"
-    "@cosmos-kit/react-lite": "npm:^2.13.0"
+    "@chain-registry/types": "npm:^0.46.11"
+    "@cosmos-kit/core": "npm:^2.15.1"
+    "@cosmos-kit/react-lite": "npm:^2.15.3"
     "@react-icons/all-files": "npm:^4.1.0"
   peerDependencies:
     "@interchain-ui/react": ^1.23.9
@@ -1303,166 +1176,98 @@ __metadata:
     "@types/react-dom": ">= 17"
     react: ^18
     react-dom: ^18
-  checksum: 10c0/b23e43a79e8c616e2c245a5637f904a7efc7b46358415963e0a6879846061a26964416afde4d2275175a3777291b985d25e433429bf198c52f148ea47aa08da8
+  checksum: 10c0/16dcdee0aaf44580b6ce3e84759312336dd8bbe37a6744b0b951cadcaa22c4f7d9c8dfbb6d8e8fce1b54d8488c33b35f0c218be22d27146666dbe053e7650de5
   languageName: node
   linkType: hard
 
-"@cosmos-kit/shell-extension@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/shell-extension@npm:2.11.2"
+"@cosmos-kit/shell-extension@npm:^2.13.3":
+  version: 2.13.3
+  resolution: "@cosmos-kit/shell-extension@npm:2.13.3"
   dependencies:
-    "@chain-registry/keplr": "npm:1.68.2"
-    "@cosmos-kit/core": "npm:^2.13.1"
+    "@chain-registry/keplr": "npm:^1.69.13"
+    "@cosmos-kit/core": "npm:^2.15.1"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/c708c603aab2c7c289f8decfc8cb7b833595734e147f8905f8cd30a4bf288391f0c3366f2a8e4855041b12495ed70a40cb98470edd446a495277d00b4e91518c
+  checksum: 10c0/0e40b2910caffa7386a9f1b707f050e6315d2bc779f5d8a9cb6fa54936ee48bf0732ad1a543a89ce21e69872707b42c253ef676797d7bccb112af3b317e49c80
   languageName: node
   linkType: hard
 
-"@cosmos-kit/shell@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/shell@npm:2.11.2"
+"@cosmos-kit/shell@npm:^2.13.3":
+  version: 2.13.3
+  resolution: "@cosmos-kit/shell@npm:2.13.3"
   dependencies:
-    "@cosmos-kit/shell-extension": "npm:^2.11.2"
-  checksum: 10c0/cc531070a980b4fa57a34ee96b54d070fe9782e4477ff9da997ae37e6f30d3ea5921ea523768bd70f72e0eddf46f67ba592e4b7fe75b99679bc7da562797ccf0
+    "@cosmos-kit/shell-extension": "npm:^2.13.3"
+  checksum: 10c0/01f3a73814c0c227118a6863468ce92f6e98ecc7fd2c3df3184dcc74c080cb5f0971de9c1ca84d879f6ae66dd6b97fdc91b3ced417cab03e18e32eb878efc946
   languageName: node
   linkType: hard
 
-"@cosmos-kit/station-extension@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/station-extension@npm:2.11.2"
-  dependencies:
-    "@cosmos-kit/core": "npm:^2.13.1"
-    "@terra-money/feather.js": "npm:^1.0.8"
-    "@terra-money/station-connector": "npm:^1.1.0"
-    "@terra-money/wallet-types": "npm:^3.11.2"
-  peerDependencies:
-    "@chain-registry/types": ">= 0.17"
-    "@cosmjs/amino": ">=0.32.3"
-    "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/0532961a303ab7cad2319f27c71c80f9662ec9f7a5d957f27dc49c8753417dbc94c4ec175010b9b616af1512e42dc09144a12c5c143a5ab64bb2015d0fc6768e
-  languageName: node
-  linkType: hard
-
-"@cosmos-kit/station@npm:^2.10.2":
-  version: 2.10.2
-  resolution: "@cosmos-kit/station@npm:2.10.2"
-  dependencies:
-    "@cosmos-kit/station-extension": "npm:^2.11.2"
-  checksum: 10c0/1d0e1a05e9fd2528d1c105fba340244adff25460b536d75fcc2454f56f317efd6edced3eddee9cc8b9d897338114f9469af272fd1a5f7f1c317273acfc5f29b4
-  languageName: node
-  linkType: hard
-
-"@cosmos-kit/tailwind-extension@npm:^1.5.2":
-  version: 1.5.2
-  resolution: "@cosmos-kit/tailwind-extension@npm:1.5.2"
-  dependencies:
-    "@cosmos-kit/core": "npm:^2.13.1"
-  checksum: 10c0/a8facdddc4df41814ae5048423b3c9da8c223503f16fb6728038238790fd143a2ebda727c813f9ae2c1190c0d0da07e942a8c0181ea2e1268f9580435550d2ed
-  languageName: node
-  linkType: hard
-
-"@cosmos-kit/tailwind@npm:^1.5.2":
-  version: 1.5.2
-  resolution: "@cosmos-kit/tailwind@npm:1.5.2"
+"@cosmos-kit/tailwind-extension@npm:^1.7.2":
+  version: 1.7.2
+  resolution: "@cosmos-kit/tailwind-extension@npm:1.7.2"
   dependencies:
-    "@cosmos-kit/tailwind-extension": "npm:^1.5.2"
-  checksum: 10c0/79d9ce43765e90c990f52d72049d4705322d3fc9175214f80aec7d24cbce24460cf37aaab9baf424aa965ff2b9398e3c84c32f8ac2bb5c4a35370ebddefc4733
+    "@cosmos-kit/core": "npm:^2.15.1"
+  checksum: 10c0/d674c57aca16e382c041484fd31748848c14455f6c72ec5d87638ef643d43093d3aa4325ba3c04787d631b1e17025babbd9338556b517c2d94ccac90103441cb
   languageName: node
   linkType: hard
 
-"@cosmos-kit/trust-extension@npm:^2.10.2":
-  version: 2.10.2
-  resolution: "@cosmos-kit/trust-extension@npm:2.10.2"
+"@cosmos-kit/tailwind@npm:^1.7.2":
+  version: 1.7.2
+  resolution: "@cosmos-kit/tailwind@npm:1.7.2"
   dependencies:
-    "@cosmos-kit/core": "npm:^2.13.1"
-  peerDependencies:
-    "@cosmjs/amino": ">=0.32.3"
-    "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/4a56176642f984aa07a3b46f4dfed59113e4012350c45b854c4ea96cedd2dbf8cbf07e7c9a943ffaf85d624c0f8612d3eb6dd2518926ce82289a48a208859f13
+    "@cosmos-kit/tailwind-extension": "npm:^1.7.2"
+  checksum: 10c0/8ae14b9502307a52ad4e1ca3fd74f6ec0d95d7e3dd57072e894b4d28a77a848835281d36c19f6ac63f7d64e53b5d8715733ce6ecfbc2da0af76e2b3a348afd06
   languageName: node
   linkType: hard
 
-"@cosmos-kit/trust-mobile@npm:^2.10.2":
-  version: 2.10.2
-  resolution: "@cosmos-kit/trust-mobile@npm:2.10.2"
+"@cosmos-kit/trust-extension@npm:^2.12.2":
+  version: 2.12.2
+  resolution: "@cosmos-kit/trust-extension@npm:2.12.2"
   dependencies:
-    "@cosmos-kit/core": "npm:^2.13.1"
-    "@cosmos-kit/walletconnect": "npm:^2.10.1"
+    "@cosmos-kit/core": "npm:^2.15.1"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/6ed367a52d75355add3bddcbefc47e589110da9e1d42f7b65fdd7e02398786d083403f685539ea03a0b65f9a9813e1703d2c53a67aa834c091170e488b77205c
+  checksum: 10c0/7f8f23a8f046c24077e4e0f5ac1423ffefa63550d0312d6c64e46f692f11331a3244f8628cc1d125fc1adabe9721a86c9a537532adef082dfd913062bbdf47d0
   languageName: node
   linkType: hard
 
-"@cosmos-kit/trust@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/trust@npm:2.11.2"
-  dependencies:
-    "@cosmos-kit/trust-extension": "npm:^2.10.2"
-    "@cosmos-kit/trust-mobile": "npm:^2.10.2"
-  checksum: 10c0/68824bdab267de17b5ed0689a6b2a4881b06d5ec292bc1d12d9890552039229f6768eaf0e0ac8017633f67e9140a56da62df514f13f9aa6de09e7a55cc350132
-  languageName: node
-  linkType: hard
-
-"@cosmos-kit/vectis-extension@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/vectis-extension@npm:2.11.2"
+"@cosmos-kit/trust-mobile@npm:^2.12.2":
+  version: 2.12.2
+  resolution: "@cosmos-kit/trust-mobile@npm:2.12.2"
   dependencies:
-    "@chain-registry/keplr": "npm:1.68.2"
-    "@cosmos-kit/core": "npm:^2.13.1"
+    "@cosmos-kit/core": "npm:^2.15.1"
+    "@cosmos-kit/walletconnect": "npm:^2.12.1"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/d150dd1f8845073b98d4ebf1d59f8459881cfc3e7b954fe0cd1932852bc7cb1986da6c44cbea7d06ce57c971fd8a1d5b7daa7c27fb0d31abfb4b1fdc786bd2b4
+  checksum: 10c0/973f97d821bf48af96198cb347de37ccc9ca661e30e0cdd731d294b5c4195d2de036fb56f11429cbae4bff5f86a4dfc1979b37998f29bf22bc398fd0cd759594
   languageName: node
   linkType: hard
 
-"@cosmos-kit/vectis@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/vectis@npm:2.11.2"
+"@cosmos-kit/trust@npm:^2.13.2":
+  version: 2.13.2
+  resolution: "@cosmos-kit/trust@npm:2.13.2"
   dependencies:
-    "@cosmos-kit/vectis-extension": "npm:^2.11.2"
-  checksum: 10c0/e9baa032280d35fc6da13a771bb7e4180decede89f052d9297e702d9ea3aaed7ce92d98865e2bb3b60f8a86ae7770add714db8072d64c89fd8d00449887ddee7
+    "@cosmos-kit/trust-extension": "npm:^2.12.2"
+    "@cosmos-kit/trust-mobile": "npm:^2.12.2"
+  checksum: 10c0/abb0ecd5ca748f87195ea66cc8451511533e417f286ac5639d0656729ebf86324326e2f8ad3c8a0df946aaf69a8378b7bc6c711f10a501dc7a9962276e9bacb3
   languageName: node
   linkType: hard
 
-"@cosmos-kit/walletconnect@npm:^2.10.1":
-  version: 2.10.1
-  resolution: "@cosmos-kit/walletconnect@npm:2.10.1"
+"@cosmos-kit/walletconnect@npm:^2.12.1":
+  version: 2.12.1
+  resolution: "@cosmos-kit/walletconnect@npm:2.12.1"
   dependencies:
     "@cosmjs/proto-signing": "npm:^0.32.3"
-    "@cosmos-kit/core": "npm:^2.13.1"
+    "@cosmos-kit/core": "npm:^2.15.1"
     "@walletconnect/sign-client": "npm:^2.9.0"
     "@walletconnect/utils": "npm:^2.9.0"
     events: "npm:3.3.0"
   peerDependencies:
     "@cosmjs/amino": ">=0.32.3"
     "@walletconnect/types": 2.11.0
-  checksum: 10c0/5940d33dfebb75f029b57cfa1de9206d2fc3c36e406cef29786ac5c0cd749cd0f5c06e5953d096bc522f45d8c1903cb1aa4429ee07425f261cc3167dcb6b35b6
-  languageName: node
-  linkType: hard
-
-"@cosmos-kit/xdefi-extension@npm:^2.11.2":
-  version: 2.11.2
-  resolution: "@cosmos-kit/xdefi-extension@npm:2.11.2"
-  dependencies:
-    "@cosmos-kit/core": "npm:^2.13.1"
-  peerDependencies:
-    "@cosmjs/amino": ">=0.32.3"
-    "@cosmjs/proto-signing": ">=0.32.3"
-  checksum: 10c0/73afc1fb1ed406c5fa44081baf2c0b3d0fd90e6d162427e66040f8319a10ef72c756bd180861400f0f1b51cdd8d54c4a4fdb56fb71eda1aef2003d3131a7404a
-  languageName: node
-  linkType: hard
-
-"@cosmos-kit/xdefi@npm:^2.10.2":
-  version: 2.10.2
-  resolution: "@cosmos-kit/xdefi@npm:2.10.2"
-  dependencies:
-    "@cosmos-kit/xdefi-extension": "npm:^2.11.2"
-  checksum: 10c0/a7dcb2a6234d4828f60fa835247627a6183fe000f4e2106f8c6a1e2bff5c2c842a887a5ddae188e2d500b807e1d4580fddfb318499683914f0abf6ffa2f72faa
+  checksum: 10c0/f3fedcdeaee8737597c176f7a370794853f9abcc3fbba3e601cf92b416b2464419141c1867adbe83db21e202a18129cf6599fc6c4b3bc6ef4e319ec2a88d67cc
   languageName: node
   linkType: hard
 
@@ -1473,15 +1278,15 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@dao-dao/cosmiframe@npm:^0.1.0":
-  version: 0.1.0
-  resolution: "@dao-dao/cosmiframe@npm:0.1.0"
+"@dao-dao/cosmiframe@npm:^1.0.0-rc.1":
+  version: 1.0.0-rc.1
+  resolution: "@dao-dao/cosmiframe@npm:1.0.0-rc.1"
   dependencies:
     uuid: "npm:^9.0.1"
   peerDependencies:
     "@cosmjs/amino": "*"
     "@cosmjs/proto-signing": "*"
-  checksum: 10c0/e65a64a8ce67063585c2f21c07a7443358cfcbd2153c432b2e882a0549e37edb8d5a375ef49d279d2ec7cb46dfce6d728ccc872cdf89a444602319d11e44ccc8
+  checksum: 10c0/145af9b412d24e56827085328689b99c40e1116d50b76f0219ddacfe74b8c4249f74653bbbe58733636dca109119ba342d2976c2dcee3198e3b01b4257b3b9bc
   languageName: node
   linkType: hard
 
@@ -1509,52 +1314,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@ethersproject/abi@npm:5.7.0, @ethersproject/abi@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/abi@npm:5.7.0"
-  dependencies:
-    "@ethersproject/address": "npm:^5.7.0"
-    "@ethersproject/bignumber": "npm:^5.7.0"
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/constants": "npm:^5.7.0"
-    "@ethersproject/hash": "npm:^5.7.0"
-    "@ethersproject/keccak256": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-    "@ethersproject/properties": "npm:^5.7.0"
-    "@ethersproject/strings": "npm:^5.7.0"
-  checksum: 10c0/7de51bf52ff03df2526546dacea6e74f15d4c5ef762d931552082b9600dcefd8e333599f02d7906ba89f7b7f48c45ab72cee76f397212b4f17fa9d9ff5615916
-  languageName: node
-  linkType: hard
-
-"@ethersproject/abstract-provider@npm:5.7.0, @ethersproject/abstract-provider@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/abstract-provider@npm:5.7.0"
-  dependencies:
-    "@ethersproject/bignumber": "npm:^5.7.0"
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-    "@ethersproject/networks": "npm:^5.7.0"
-    "@ethersproject/properties": "npm:^5.7.0"
-    "@ethersproject/transactions": "npm:^5.7.0"
-    "@ethersproject/web": "npm:^5.7.0"
-  checksum: 10c0/a5708e2811b90ddc53d9318ce152511a32dd4771aa2fb59dbe9e90468bb75ca6e695d958bf44d13da684dc3b6aab03f63d425ff7591332cb5d7ddaf68dff7224
-  languageName: node
-  linkType: hard
-
-"@ethersproject/abstract-signer@npm:5.7.0, @ethersproject/abstract-signer@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/abstract-signer@npm:5.7.0"
-  dependencies:
-    "@ethersproject/abstract-provider": "npm:^5.7.0"
-    "@ethersproject/bignumber": "npm:^5.7.0"
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-    "@ethersproject/properties": "npm:^5.7.0"
-  checksum: 10c0/e174966b3be17269a5974a3ae5eef6d15ac62ee8c300ceace26767f218f6bbf3de66f29d9a9c9ca300fa8551aab4c92e28d2cc772f5475fdeaa78d9b5be0e745
-  languageName: node
-  linkType: hard
-
-"@ethersproject/address@npm:5.7.0, @ethersproject/address@npm:^5.6.0, @ethersproject/address@npm:^5.7.0":
+"@ethersproject/address@npm:^5.6.0":
   version: 5.7.0
   resolution: "@ethersproject/address@npm:5.7.0"
   dependencies:
@@ -1567,26 +1327,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@ethersproject/base64@npm:5.7.0, @ethersproject/base64@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/base64@npm:5.7.0"
-  dependencies:
-    "@ethersproject/bytes": "npm:^5.7.0"
-  checksum: 10c0/4f748cd82af60ff1866db699fbf2bf057feff774ea0a30d1f03ea26426f53293ea10cc8265cda1695301da61093bedb8cc0d38887f43ed9dad96b78f19d7337e
-  languageName: node
-  linkType: hard
-
-"@ethersproject/basex@npm:5.7.0, @ethersproject/basex@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/basex@npm:5.7.0"
-  dependencies:
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/properties": "npm:^5.7.0"
-  checksum: 10c0/02304de77477506ad798eb5c68077efd2531624380d770ef4a823e631a288fb680107a0f9dc4a6339b2a0b0f5b06ee77f53429afdad8f950cde0f3e40d30167d
-  languageName: node
-  linkType: hard
-
-"@ethersproject/bignumber@npm:5.7.0, @ethersproject/bignumber@npm:^5.7.0":
+"@ethersproject/bignumber@npm:^5.7.0":
   version: 5.7.0
   resolution: "@ethersproject/bignumber@npm:5.7.0"
   dependencies:
@@ -1597,7 +1338,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@ethersproject/bytes@npm:5.7.0, @ethersproject/bytes@npm:^5.7.0":
+"@ethersproject/bytes@npm:^5.7.0":
   version: 5.7.0
   resolution: "@ethersproject/bytes@npm:5.7.0"
   dependencies:
@@ -1606,92 +1347,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@ethersproject/constants@npm:5.7.0, @ethersproject/constants@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/constants@npm:5.7.0"
-  dependencies:
-    "@ethersproject/bignumber": "npm:^5.7.0"
-  checksum: 10c0/6df63ab753e152726b84595250ea722165a5744c046e317df40a6401f38556385a37c84dadf5b11ca651c4fb60f967046125369c57ac84829f6b30e69a096273
-  languageName: node
-  linkType: hard
-
-"@ethersproject/contracts@npm:5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/contracts@npm:5.7.0"
-  dependencies:
-    "@ethersproject/abi": "npm:^5.7.0"
-    "@ethersproject/abstract-provider": "npm:^5.7.0"
-    "@ethersproject/abstract-signer": "npm:^5.7.0"
-    "@ethersproject/address": "npm:^5.7.0"
-    "@ethersproject/bignumber": "npm:^5.7.0"
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/constants": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-    "@ethersproject/properties": "npm:^5.7.0"
-    "@ethersproject/transactions": "npm:^5.7.0"
-  checksum: 10c0/97a10361dddaccfb3e9e20e24d071cfa570050adcb964d3452c5f7c9eaaddb4e145ec9cf928e14417948701b89e81d4907800e799a6083123e4d13a576842f41
-  languageName: node
-  linkType: hard
-
-"@ethersproject/hash@npm:5.7.0, @ethersproject/hash@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/hash@npm:5.7.0"
-  dependencies:
-    "@ethersproject/abstract-signer": "npm:^5.7.0"
-    "@ethersproject/address": "npm:^5.7.0"
-    "@ethersproject/base64": "npm:^5.7.0"
-    "@ethersproject/bignumber": "npm:^5.7.0"
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/keccak256": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-    "@ethersproject/properties": "npm:^5.7.0"
-    "@ethersproject/strings": "npm:^5.7.0"
-  checksum: 10c0/1a631dae34c4cf340dde21d6940dd1715fc7ae483d576f7b8ef9e8cb1d0e30bd7e8d30d4a7d8dc531c14164602323af2c3d51eb2204af18b2e15167e70c9a5ef
-  languageName: node
-  linkType: hard
-
-"@ethersproject/hdnode@npm:5.7.0, @ethersproject/hdnode@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/hdnode@npm:5.7.0"
-  dependencies:
-    "@ethersproject/abstract-signer": "npm:^5.7.0"
-    "@ethersproject/basex": "npm:^5.7.0"
-    "@ethersproject/bignumber": "npm:^5.7.0"
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-    "@ethersproject/pbkdf2": "npm:^5.7.0"
-    "@ethersproject/properties": "npm:^5.7.0"
-    "@ethersproject/sha2": "npm:^5.7.0"
-    "@ethersproject/signing-key": "npm:^5.7.0"
-    "@ethersproject/strings": "npm:^5.7.0"
-    "@ethersproject/transactions": "npm:^5.7.0"
-    "@ethersproject/wordlists": "npm:^5.7.0"
-  checksum: 10c0/36d5c13fe69b1e0a18ea98537bc560d8ba166e012d63faac92522a0b5f405eb67d8848c5aca69e2470f62743aaef2ac36638d9e27fd8c68f51506eb61479d51d
-  languageName: node
-  linkType: hard
-
-"@ethersproject/json-wallets@npm:5.7.0, @ethersproject/json-wallets@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/json-wallets@npm:5.7.0"
-  dependencies:
-    "@ethersproject/abstract-signer": "npm:^5.7.0"
-    "@ethersproject/address": "npm:^5.7.0"
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/hdnode": "npm:^5.7.0"
-    "@ethersproject/keccak256": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-    "@ethersproject/pbkdf2": "npm:^5.7.0"
-    "@ethersproject/properties": "npm:^5.7.0"
-    "@ethersproject/random": "npm:^5.7.0"
-    "@ethersproject/strings": "npm:^5.7.0"
-    "@ethersproject/transactions": "npm:^5.7.0"
-    aes-js: "npm:3.0.0"
-    scrypt-js: "npm:3.0.1"
-  checksum: 10c0/f1a84d19ff38d3506f453abc4702107cbc96a43c000efcd273a056371363767a06a8d746f84263b1300266eb0c329fe3b49a9b39a37aadd016433faf9e15a4bb
-  languageName: node
-  linkType: hard
-
-"@ethersproject/keccak256@npm:5.7.0, @ethersproject/keccak256@npm:^5.5.0, @ethersproject/keccak256@npm:^5.7.0":
+"@ethersproject/keccak256@npm:^5.5.0, @ethersproject/keccak256@npm:^5.7.0":
   version: 5.7.0
   resolution: "@ethersproject/keccak256@npm:5.7.0"
   dependencies:
@@ -1701,80 +1357,14 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@ethersproject/logger@npm:5.7.0, @ethersproject/logger@npm:^5.7.0":
+"@ethersproject/logger@npm:^5.7.0":
   version: 5.7.0
   resolution: "@ethersproject/logger@npm:5.7.0"
   checksum: 10c0/d03d460fb2d4a5e71c627b7986fb9e50e1b59a6f55e8b42a545b8b92398b961e7fd294bd9c3d8f92b35d0f6ff9d15aa14c95eab378f8ea194e943c8ace343501
   languageName: node
   linkType: hard
 
-"@ethersproject/networks@npm:5.7.1, @ethersproject/networks@npm:^5.7.0":
-  version: 5.7.1
-  resolution: "@ethersproject/networks@npm:5.7.1"
-  dependencies:
-    "@ethersproject/logger": "npm:^5.7.0"
-  checksum: 10c0/9efcdce27f150459e85d74af3f72d5c32898823a99f5410e26bf26cca2d21fb14e403377314a93aea248e57fb2964e19cee2c3f7bfc586ceba4c803a8f1b75c0
-  languageName: node
-  linkType: hard
-
-"@ethersproject/pbkdf2@npm:5.7.0, @ethersproject/pbkdf2@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/pbkdf2@npm:5.7.0"
-  dependencies:
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/sha2": "npm:^5.7.0"
-  checksum: 10c0/e5a29cf28b4f4ca1def94d37cfb6a9c05c896106ed64881707813de01c1e7ded613f1e95febcccda4de96aae929068831d72b9d06beef1377b5a1a13a0eb3ff5
-  languageName: node
-  linkType: hard
-
-"@ethersproject/properties@npm:5.7.0, @ethersproject/properties@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/properties@npm:5.7.0"
-  dependencies:
-    "@ethersproject/logger": "npm:^5.7.0"
-  checksum: 10c0/4fe5d36e5550b8e23a305aa236a93e8f04d891d8198eecdc8273914c761b0e198fd6f757877406ee3eb05033ec271132a3e5998c7bd7b9a187964fb4f67b1373
-  languageName: node
-  linkType: hard
-
-"@ethersproject/providers@npm:5.7.2":
-  version: 5.7.2
-  resolution: "@ethersproject/providers@npm:5.7.2"
-  dependencies:
-    "@ethersproject/abstract-provider": "npm:^5.7.0"
-    "@ethersproject/abstract-signer": "npm:^5.7.0"
-    "@ethersproject/address": "npm:^5.7.0"
-    "@ethersproject/base64": "npm:^5.7.0"
-    "@ethersproject/basex": "npm:^5.7.0"
-    "@ethersproject/bignumber": "npm:^5.7.0"
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/constants": "npm:^5.7.0"
-    "@ethersproject/hash": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-    "@ethersproject/networks": "npm:^5.7.0"
-    "@ethersproject/properties": "npm:^5.7.0"
-    "@ethersproject/random": "npm:^5.7.0"
-    "@ethersproject/rlp": "npm:^5.7.0"
-    "@ethersproject/sha2": "npm:^5.7.0"
-    "@ethersproject/strings": "npm:^5.7.0"
-    "@ethersproject/transactions": "npm:^5.7.0"
-    "@ethersproject/web": "npm:^5.7.0"
-    bech32: "npm:1.1.4"
-    ws: "npm:7.4.6"
-  checksum: 10c0/4c8d19e6b31f769c24042fb2d02e483a4ee60dcbfca9e3291f0a029b24337c47d1ea719a390be856f8fd02997125819e834415e77da4fb2023369712348dae4c
-  languageName: node
-  linkType: hard
-
-"@ethersproject/random@npm:5.7.0, @ethersproject/random@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/random@npm:5.7.0"
-  dependencies:
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-  checksum: 10c0/23e572fc55372653c22062f6a153a68c2e2d3200db734cd0d39621fbfd0ca999585bed2d5682e3ac65d87a2893048375682e49d1473d9965631ff56d2808580b
-  languageName: node
-  linkType: hard
-
-"@ethersproject/rlp@npm:5.7.0, @ethersproject/rlp@npm:^5.7.0":
+"@ethersproject/rlp@npm:^5.7.0":
   version: 5.7.0
   resolution: "@ethersproject/rlp@npm:5.7.0"
   dependencies:
@@ -1784,133 +1374,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@ethersproject/sha2@npm:5.7.0, @ethersproject/sha2@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/sha2@npm:5.7.0"
-  dependencies:
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-    hash.js: "npm:1.1.7"
-  checksum: 10c0/0e7f9ce6b1640817b921b9c6dd9dab8d5bf5a0ce7634d6a7d129b7366a576c2f90dcf4bcb15a0aa9310dde67028f3a44e4fcc2f26b565abcd2a0f465116ff3b1
-  languageName: node
-  linkType: hard
-
-"@ethersproject/signing-key@npm:5.7.0, @ethersproject/signing-key@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/signing-key@npm:5.7.0"
-  dependencies:
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-    "@ethersproject/properties": "npm:^5.7.0"
-    bn.js: "npm:^5.2.1"
-    elliptic: "npm:6.5.4"
-    hash.js: "npm:1.1.7"
-  checksum: 10c0/fe2ca55bcdb6e370d81372191d4e04671234a2da872af20b03c34e6e26b97dc07c1ee67e91b673680fb13344c9d5d7eae52f1fa6117733a3d68652b778843e09
-  languageName: node
-  linkType: hard
-
-"@ethersproject/solidity@npm:5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/solidity@npm:5.7.0"
-  dependencies:
-    "@ethersproject/bignumber": "npm:^5.7.0"
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/keccak256": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-    "@ethersproject/sha2": "npm:^5.7.0"
-    "@ethersproject/strings": "npm:^5.7.0"
-  checksum: 10c0/bedf9918911144b0ec352b8aa7fa44abf63f0b131629c625672794ee196ba7d3992b0e0d3741935ca176813da25b9bcbc81aec454652c63113bdc3a1706beac6
-  languageName: node
-  linkType: hard
-
-"@ethersproject/strings@npm:5.7.0, @ethersproject/strings@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/strings@npm:5.7.0"
-  dependencies:
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/constants": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-  checksum: 10c0/570d87040ccc7d94de9861f76fc2fba6c0b84c5d6104a99a5c60b8a2401df2e4f24bf9c30afa536163b10a564a109a96f02e6290b80e8f0c610426f56ad704d1
-  languageName: node
-  linkType: hard
-
-"@ethersproject/transactions@npm:5.7.0, @ethersproject/transactions@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/transactions@npm:5.7.0"
-  dependencies:
-    "@ethersproject/address": "npm:^5.7.0"
-    "@ethersproject/bignumber": "npm:^5.7.0"
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/constants": "npm:^5.7.0"
-    "@ethersproject/keccak256": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-    "@ethersproject/properties": "npm:^5.7.0"
-    "@ethersproject/rlp": "npm:^5.7.0"
-    "@ethersproject/signing-key": "npm:^5.7.0"
-  checksum: 10c0/aa4d51379caab35b9c468ed1692a23ae47ce0de121890b4f7093c982ee57e30bd2df0c743faed0f44936d7e59c55fffd80479f2c28ec6777b8de06bfb638c239
-  languageName: node
-  linkType: hard
-
-"@ethersproject/units@npm:5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/units@npm:5.7.0"
-  dependencies:
-    "@ethersproject/bignumber": "npm:^5.7.0"
-    "@ethersproject/constants": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-  checksum: 10c0/4da2fdefe2a506cc9f8b408b2c8638ab35b843ec413d52713143f08501a55ff67a808897f9a91874774fb526423a0821090ba294f93e8bf4933a57af9677ac5e
-  languageName: node
-  linkType: hard
-
-"@ethersproject/wallet@npm:5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/wallet@npm:5.7.0"
-  dependencies:
-    "@ethersproject/abstract-provider": "npm:^5.7.0"
-    "@ethersproject/abstract-signer": "npm:^5.7.0"
-    "@ethersproject/address": "npm:^5.7.0"
-    "@ethersproject/bignumber": "npm:^5.7.0"
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/hash": "npm:^5.7.0"
-    "@ethersproject/hdnode": "npm:^5.7.0"
-    "@ethersproject/json-wallets": "npm:^5.7.0"
-    "@ethersproject/keccak256": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-    "@ethersproject/properties": "npm:^5.7.0"
-    "@ethersproject/random": "npm:^5.7.0"
-    "@ethersproject/signing-key": "npm:^5.7.0"
-    "@ethersproject/transactions": "npm:^5.7.0"
-    "@ethersproject/wordlists": "npm:^5.7.0"
-  checksum: 10c0/f872b957db46f9de247d39a398538622b6c7a12f93d69bec5f47f9abf0701ef1edc10497924dd1c14a68109284c39a1686fa85586d89b3ee65df49002c40ba4c
-  languageName: node
-  linkType: hard
-
-"@ethersproject/web@npm:5.7.1, @ethersproject/web@npm:^5.7.0":
-  version: 5.7.1
-  resolution: "@ethersproject/web@npm:5.7.1"
-  dependencies:
-    "@ethersproject/base64": "npm:^5.7.0"
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-    "@ethersproject/properties": "npm:^5.7.0"
-    "@ethersproject/strings": "npm:^5.7.0"
-  checksum: 10c0/c82d6745c7f133980e8dab203955260e07da22fa544ccafdd0f21c79fae127bd6ef30957319e37b1cc80cddeb04d6bfb60f291bb14a97c9093d81ce50672f453
-  languageName: node
-  linkType: hard
-
-"@ethersproject/wordlists@npm:5.7.0, @ethersproject/wordlists@npm:^5.7.0":
-  version: 5.7.0
-  resolution: "@ethersproject/wordlists@npm:5.7.0"
-  dependencies:
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@ethersproject/hash": "npm:^5.7.0"
-    "@ethersproject/logger": "npm:^5.7.0"
-    "@ethersproject/properties": "npm:^5.7.0"
-    "@ethersproject/strings": "npm:^5.7.0"
-  checksum: 10c0/da4f3eca6d691ebf4f578e6b2ec3a76dedba791be558f6cf7e10cd0bfbaeab5a6753164201bb72ced745fb02b6ef7ef34edcb7e6065ce2b624c6556a461c3f70
-  languageName: node
-  linkType: hard
-
 "@floating-ui/core@npm:^1.0.0":
   version: 1.6.0
   resolution: "@floating-ui/core@npm:1.6.0"
@@ -2054,42 +1517,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@hexxagon/feather.js@npm:^1.0.9-beta.8":
-  version: 1.0.11
-  resolution: "@hexxagon/feather.js@npm:1.0.11"
-  dependencies:
-    "@classic-terra/terra.proto": "npm:^1.1.0"
-    "@terra-money/legacy.proto": "npm:@terra-money/terra.proto@^0.1.7"
-    "@terra-money/terra.proto": "npm:3.0.5"
-    axios: "npm:^0.27.2"
-    bech32: "npm:^2.0.0"
-    bip32: "npm:^2.0.6"
-    bip39: "npm:^3.0.3"
-    bufferutil: "npm:^4.0.3"
-    decimal.js: "npm:^10.2.1"
-    jscrypto: "npm:^1.0.1"
-    readable-stream: "npm:^3.6.0"
-    secp256k1: "npm:^4.0.2"
-    tmp: "npm:^0.2.1"
-    utf-8-validate: "npm:^5.0.5"
-    ws: "npm:^7.5.9"
-  checksum: 10c0/912e3133e059b73eb587a47774db29d0299750f762bd7ef8a10a6b7ccd3ba05100d8c9d31c04b67097522ea64883ff864970d69875fb68652f239c54b0ad424b
-  languageName: node
-  linkType: hard
-
-"@hexxagon/station-connector@npm:^1.0.17":
-  version: 1.0.19
-  resolution: "@hexxagon/station-connector@npm:1.0.19"
-  dependencies:
-    bech32: "npm:^2.0.0"
-  peerDependencies:
-    "@cosmjs/amino": ^0.31.0
-    "@hexxagon/feather.js": ^2.1.0-beta.5
-    axios: ^0.27.2
-  checksum: 10c0/32d1eb7d20b941c199ebbf68022b9caa94ecdbee6983d7b66d64868362c03a684befb6c7432990afb28a4540ea304e7d5ed2d7823f204165345018ff71644417
-  languageName: node
-  linkType: hard
-
 "@humanwhocodes/config-array@npm:^0.11.6":
   version: 0.11.14
   resolution: "@humanwhocodes/config-array@npm:0.11.14"
@@ -2115,17 +1542,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@improbable-eng/grpc-web@npm:^0.14.1":
-  version: 0.14.1
-  resolution: "@improbable-eng/grpc-web@npm:0.14.1"
-  dependencies:
-    browser-headers: "npm:^0.4.1"
-  peerDependencies:
-    google-protobuf: ^3.14.0
-  checksum: 10c0/972f20d97970b3c7239ef8f26866e417e3079faec5a66e86755cc49b1dc3c56ed50a8f04dbb9d23d2f12ffb5719e39500d5e513d0087d576bc0844d2034491c1
-  languageName: node
-  linkType: hard
-
 "@interchain-ui/react-no-ssr@npm:0.1.2":
   version: 0.1.2
   resolution: "@interchain-ui/react-no-ssr@npm:0.1.2"
@@ -4420,35 +3836,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@starship-ci/cli@npm:^2.9.0":
-  version: 2.9.0
-  resolution: "@starship-ci/cli@npm:2.9.0"
-  dependencies:
-    "@starship-ci/client": "npm:^2.8.0"
-    chalk: "npm:^4.1.0"
-    deepmerge: "npm:^4.3.1"
-    inquirerer: "npm:^1.9.0"
-    js-yaml: "npm:^4.1.0"
-    minimist: "npm:^1.2.8"
-  bin:
-    starship: index.js
-  checksum: 10c0/3aca862a045a6d0a3f163b7e4b729d7f7e13666a7ea34c3b418eb47776f86ece193ed89544486fd44ade91ebadd652d41709d8e3c3b96bdb8cee0873b6a3c036
-  languageName: node
-  linkType: hard
-
-"@starship-ci/client@npm:^2.8.0":
-  version: 2.8.0
-  resolution: "@starship-ci/client@npm:2.8.0"
-  dependencies:
-    chalk: "npm:^4.1.0"
-    deepmerge: "npm:^4.3.1"
-    js-yaml: "npm:^4.1.0"
-    mkdirp: "npm:3.0.1"
-    shelljs: "npm:^0.8.5"
-  checksum: 10c0/ceb176da93674f56933aebca44c7ae09ba0d19f452eeb388a91833a607248c0bb00a1466ef574c35fcacd7c58bdd6ad7b371957b8cad1257061fcc2d221d8b7f
-  languageName: node
-  linkType: hard
-
 "@swc/helpers@npm:0.5.2":
   version: 0.5.2
   resolution: "@swc/helpers@npm:0.5.2"
@@ -4536,92 +3923,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"@terra-money/feather.js@npm:^1.0.8":
-  version: 1.2.1
-  resolution: "@terra-money/feather.js@npm:1.2.1"
-  dependencies:
-    "@ethersproject/bytes": "npm:^5.7.0"
-    "@terra-money/legacy.proto": "npm:@terra-money/terra.proto@^0.1.7"
-    "@terra-money/terra.proto": "npm:^4.0.3"
-    assert: "npm:^2.0.0"
-    axios: "npm:^0.27.2"
-    bech32: "npm:^2.0.0"
-    bip32: "npm:^2.0.6"
-    bip39: "npm:^3.0.3"
-    bufferutil: "npm:^4.0.3"
-    crypto-browserify: "npm:^3.12.0"
-    decimal.js: "npm:^10.2.1"
-    ethers: "npm:^5.7.2"
-    jscrypto: "npm:^1.0.1"
-    keccak256: "npm:^1.0.6"
-    long: "npm:^5.2.3"
-    readable-stream: "npm:^3.6.0"
-    secp256k1: "npm:^4.0.2"
-    tmp: "npm:^0.2.1"
-    utf-8-validate: "npm:^5.0.5"
-    ws: "npm:^7.5.9"
-  checksum: 10c0/bf1c952bf6e6531f663727c5793bfc4a9fb1a6025eed0b8f68f994bedced184a11d961a4ae42620690108171428933fc48e68ea078b53c2375b938b791eb4ff0
-  languageName: node
-  linkType: hard
-
-"@terra-money/legacy.proto@npm:@terra-money/terra.proto@^0.1.7":
-  version: 0.1.7
-  resolution: "@terra-money/terra.proto@npm:0.1.7"
-  dependencies:
-    google-protobuf: "npm:^3.17.3"
-    long: "npm:^4.0.0"
-    protobufjs: "npm:~6.11.2"
-  checksum: 10c0/3ae54002eac9b8fa7dcc90e167ca50134fd5d36549a336e1aa02c9deb6133441d755e6681a6a272e51c70e27610e1566ee5ccf1e2174f239f81b631cb7a8eead
-  languageName: node
-  linkType: hard
-
-"@terra-money/station-connector@npm:^1.1.0":
-  version: 1.1.0
-  resolution: "@terra-money/station-connector@npm:1.1.0"
-  dependencies:
-    bech32: "npm:^2.0.0"
-  peerDependencies:
-    "@cosmjs/amino": ^0.31.0
-    "@terra-money/feather.js": ^3.0.0-beta.1
-    axios: ^0.27.2
-  checksum: 10c0/9749876044357bc0f28ceeb15a1535b8201e6fa3eb09e95c0374ecba04b87d85388a4d5c491b2a89cc3b02ad24c8fa055e69240ae937c16f5bee196416263898
-  languageName: node
-  linkType: hard
-
-"@terra-money/terra.proto@npm:3.0.5":
-  version: 3.0.5
-  resolution: "@terra-money/terra.proto@npm:3.0.5"
-  dependencies:
-    "@improbable-eng/grpc-web": "npm:^0.14.1"
-    google-protobuf: "npm:^3.17.3"
-    long: "npm:^4.0.0"
-    protobufjs: "npm:~6.11.2"
-  checksum: 10c0/f057cbf49dd8dc9effce875f2e60b7c0f17b375b160f08887a3007998584be834141f221dad642c68aac5324583f6e95d06fecc1fc8ee18374960bdd58808538
-  languageName: node
-  linkType: hard
-
-"@terra-money/terra.proto@npm:^4.0.3":
-  version: 4.0.10
-  resolution: "@terra-money/terra.proto@npm:4.0.10"
-  dependencies:
-    "@improbable-eng/grpc-web": "npm:^0.14.1"
-    browser-headers: "npm:^0.4.1"
-    google-protobuf: "npm:^3.17.3"
-    long: "npm:^4.0.0"
-    protobufjs: "npm:~6.11.2"
-  checksum: 10c0/80e701fe8ff5420c896acda16682cc8ad3aa4a317bbfcae89c5576a2ad800f349b0cb1d9bba82c1770829e083bbfbbf82ba2d6124ea06c8b64a17d386126c71e
-  languageName: node
-  linkType: hard
-
-"@terra-money/wallet-types@npm:^3.11.2":
-  version: 3.11.2
-  resolution: "@terra-money/wallet-types@npm:3.11.2"
-  peerDependencies:
-    "@terra-money/terra.js": ^3.1.6
-  checksum: 10c0/3fe1d475bb02655b4d4817dfbddf52f6ecbb87c8731a0c2077f4a5c36c88c730e9d167e802294b04fd6f25f841f68ab12f159f69164375c00dac2a9b6e6f32f5
-  languageName: node
-  linkType: hard
-
 "@types/debug@npm:^4.0.0":
   version: 4.1.12
   resolution: "@types/debug@npm:4.1.12"
@@ -5190,13 +4491,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"aes-js@npm:3.0.0":
-  version: 3.0.0
-  resolution: "aes-js@npm:3.0.0"
-  checksum: 10c0/87dd5b2363534b867db7cef8bc85a90c355460783744877b2db7c8be09740aac5750714f9e00902822f692662bda74cdf40e03fbb5214ffec75c2666666288b8
-  languageName: node
-  linkType: hard
-
 "agent-base@npm:^7.0.2, agent-base@npm:^7.1.0, agent-base@npm:^7.1.1":
   version: 7.1.1
   resolution: "agent-base@npm:7.1.1"
@@ -5415,30 +4709,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"asn1.js@npm:^4.10.1":
-  version: 4.10.1
-  resolution: "asn1.js@npm:4.10.1"
-  dependencies:
-    bn.js: "npm:^4.0.0"
-    inherits: "npm:^2.0.1"
-    minimalistic-assert: "npm:^1.0.0"
-  checksum: 10c0/afa7f3ab9e31566c80175a75b182e5dba50589dcc738aa485be42bdd787e2a07246a4b034d481861123cbe646a7656f318f4f1cad2e9e5e808a210d5d6feaa88
-  languageName: node
-  linkType: hard
-
-"assert@npm:^2.0.0":
-  version: 2.1.0
-  resolution: "assert@npm:2.1.0"
-  dependencies:
-    call-bind: "npm:^1.0.2"
-    is-nan: "npm:^1.3.2"
-    object-is: "npm:^1.1.5"
-    object.assign: "npm:^4.1.4"
-    util: "npm:^0.12.5"
-  checksum: 10c0/7271a5da883c256a1fa690677bf1dd9d6aa882139f2bed1cd15da4f9e7459683e1da8e32a203d6cc6767e5e0f730c77a9532a87b896b4b0af0dd535f668775f0
-  languageName: node
-  linkType: hard
-
 "ast-types-flow@npm:^0.0.8":
   version: 0.0.8
   resolution: "ast-types-flow@npm:0.0.8"
@@ -5483,16 +4753,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"axios@npm:0.27.2, axios@npm:^0.27.2":
-  version: 0.27.2
-  resolution: "axios@npm:0.27.2"
-  dependencies:
-    follow-redirects: "npm:^1.14.9"
-    form-data: "npm:^4.0.0"
-  checksum: 10c0/76d673d2a90629944b44d6f345f01e58e9174690f635115d5ffd4aca495d99bcd8f95c590d5ccb473513f5ebc1d1a6e8934580d0c57cdd0498c3a101313ef771
-  languageName: node
-  linkType: hard
-
 "axios@npm:^0.21.2":
   version: 0.21.4
   resolution: "axios@npm:0.21.4"
@@ -5552,20 +4812,13 @@ __metadata:
   languageName: node
   linkType: hard
 
-"bech32@npm:1.1.4, bech32@npm:^1.1.4":
+"bech32@npm:^1.1.4":
   version: 1.1.4
   resolution: "bech32@npm:1.1.4"
   checksum: 10c0/5f62ca47b8df99ace9c0e0d8deb36a919d91bf40066700aaa9920a45f86bb10eb56d537d559416fd8703aa0fb60dddb642e58f049701e7291df678b2033e5ee5
   languageName: node
   linkType: hard
 
-"bech32@npm:^2.0.0":
-  version: 2.0.0
-  resolution: "bech32@npm:2.0.0"
-  checksum: 10c0/45e7cc62758c9b26c05161b4483f40ea534437cf68ef785abadc5b62a2611319b878fef4f86ddc14854f183b645917a19addebc9573ab890e19194bc8f521942
-  languageName: node
-  linkType: hard
-
 "bfs-path@npm:^1.0.2":
   version: 1.0.2
   resolution: "bfs-path@npm:1.0.2"
@@ -5632,7 +4885,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"bip39@npm:^3.0.3, bip39@npm:^3.1.0":
+"bip39@npm:^3.0.3":
   version: 3.1.0
   resolution: "bip39@npm:3.1.0"
   dependencies:
@@ -5641,14 +4894,14 @@ __metadata:
   languageName: node
   linkType: hard
 
-"bn.js@npm:^4.0.0, bn.js@npm:^4.1.0, bn.js@npm:^4.11.8, bn.js@npm:^4.11.9":
+"bn.js@npm:^4.11.8, bn.js@npm:^4.11.9":
   version: 4.12.0
   resolution: "bn.js@npm:4.12.0"
   checksum: 10c0/9736aaa317421b6b3ed038ff3d4491935a01419ac2d83ddcfebc5717385295fcfcf0c57311d90fe49926d0abbd7a9dbefdd8861e6129939177f7e67ebc645b21
   languageName: node
   linkType: hard
 
-"bn.js@npm:^5.0.0, bn.js@npm:^5.2.0, bn.js@npm:^5.2.1":
+"bn.js@npm:^5.2.0, bn.js@npm:^5.2.1":
   version: 5.2.1
   resolution: "bn.js@npm:5.2.1"
   checksum: 10c0/bed3d8bd34ec89dbcf9f20f88bd7d4a49c160fda3b561c7bb227501f974d3e435a48fb9b61bc3de304acab9215a3bda0803f7017ffb4d0016a0c3a740a283caa
@@ -5699,85 +4952,13 @@ __metadata:
   languageName: node
   linkType: hard
 
-"brorand@npm:^1.0.1, brorand@npm:^1.1.0":
+"brorand@npm:^1.1.0":
   version: 1.1.0
   resolution: "brorand@npm:1.1.0"
   checksum: 10c0/6f366d7c4990f82c366e3878492ba9a372a73163c09871e80d82fb4ae0d23f9f8924cb8a662330308206e6b3b76ba1d528b4601c9ef73c2166b440b2ea3b7571
   languageName: node
   linkType: hard
 
-"browser-headers@npm:^0.4.1":
-  version: 0.4.1
-  resolution: "browser-headers@npm:0.4.1"
-  checksum: 10c0/3b08864bb955b295ab3dd6ab775c7798096c2e85486571803b4070ec484de83ccceebe531a8b00d5daf4463fada5e7ca18cd1a71cc1ee0dfdbab705332318cef
-  languageName: node
-  linkType: hard
-
-"browserify-aes@npm:^1.0.4, browserify-aes@npm:^1.2.0":
-  version: 1.2.0
-  resolution: "browserify-aes@npm:1.2.0"
-  dependencies:
-    buffer-xor: "npm:^1.0.3"
-    cipher-base: "npm:^1.0.0"
-    create-hash: "npm:^1.1.0"
-    evp_bytestokey: "npm:^1.0.3"
-    inherits: "npm:^2.0.1"
-    safe-buffer: "npm:^5.0.1"
-  checksum: 10c0/967f2ae60d610b7b252a4cbb55a7a3331c78293c94b4dd9c264d384ca93354c089b3af9c0dd023534efdc74ffbc82510f7ad4399cf82bc37bc07052eea485f18
-  languageName: node
-  linkType: hard
-
-"browserify-cipher@npm:^1.0.0":
-  version: 1.0.1
-  resolution: "browserify-cipher@npm:1.0.1"
-  dependencies:
-    browserify-aes: "npm:^1.0.4"
-    browserify-des: "npm:^1.0.0"
-    evp_bytestokey: "npm:^1.0.0"
-  checksum: 10c0/aa256dcb42bc53a67168bbc94ab85d243b0a3b56109dee3b51230b7d010d9b78985ffc1fb36e145c6e4db151f888076c1cfc207baf1525d3e375cbe8187fe27d
-  languageName: node
-  linkType: hard
-
-"browserify-des@npm:^1.0.0":
-  version: 1.0.2
-  resolution: "browserify-des@npm:1.0.2"
-  dependencies:
-    cipher-base: "npm:^1.0.1"
-    des.js: "npm:^1.0.0"
-    inherits: "npm:^2.0.1"
-    safe-buffer: "npm:^5.1.2"
-  checksum: 10c0/943eb5d4045eff80a6cde5be4e5fbb1f2d5002126b5a4789c3c1aae3cdddb1eb92b00fb92277f512288e5c6af330730b1dbabcf7ce0923e749e151fcee5a074d
-  languageName: node
-  linkType: hard
-
-"browserify-rsa@npm:^4.0.0, browserify-rsa@npm:^4.1.0":
-  version: 4.1.0
-  resolution: "browserify-rsa@npm:4.1.0"
-  dependencies:
-    bn.js: "npm:^5.0.0"
-    randombytes: "npm:^2.0.1"
-  checksum: 10c0/fb2b5a8279d8a567a28d8ee03fb62e448428a906bab5c3dc9e9c3253ace551b5ea271db15e566ac78f1b1d71b243559031446604168b9235c351a32cae99d02a
-  languageName: node
-  linkType: hard
-
-"browserify-sign@npm:^4.0.0":
-  version: 4.2.3
-  resolution: "browserify-sign@npm:4.2.3"
-  dependencies:
-    bn.js: "npm:^5.2.1"
-    browserify-rsa: "npm:^4.1.0"
-    create-hash: "npm:^1.2.0"
-    create-hmac: "npm:^1.1.7"
-    elliptic: "npm:^6.5.5"
-    hash-base: "npm:~3.0"
-    inherits: "npm:^2.0.4"
-    parse-asn1: "npm:^5.1.7"
-    readable-stream: "npm:^2.3.8"
-    safe-buffer: "npm:^5.2.1"
-  checksum: 10c0/30c0eba3f5970a20866a4d3fbba2c5bd1928cd24f47faf995f913f1499214c6f3be14bb4d6ec1ab5c6cafb1eca9cb76ba1c2e1c04ed018370634d4e659c77216
-  languageName: node
-  linkType: hard
-
 "bs58@npm:^4.0.0":
   version: 4.0.1
   resolution: "bs58@npm:4.0.1"
@@ -5798,13 +4979,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"buffer-xor@npm:^1.0.3":
-  version: 1.0.3
-  resolution: "buffer-xor@npm:1.0.3"
-  checksum: 10c0/fd269d0e0bf71ecac3146187cfc79edc9dbb054e2ee69b4d97dfb857c6d997c33de391696d04bdd669272751fa48e7872a22f3a6c7b07d6c0bc31dbe02a4075c
-  languageName: node
-  linkType: hard
-
 "buffer@npm:^6.0.3":
   version: 6.0.3
   resolution: "buffer@npm:6.0.3"
@@ -5815,16 +4989,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"bufferutil@npm:^4.0.3":
-  version: 4.0.8
-  resolution: "bufferutil@npm:4.0.8"
-  dependencies:
-    node-gyp: "npm:latest"
-    node-gyp-build: "npm:^4.3.0"
-  checksum: 10c0/36cdc5b53a38d9f61f89fdbe62029a2ebcd020599862253fefebe31566155726df9ff961f41b8c97b02b4c12b391ef97faf94e2383392654cf8f0ed68f76e47c
-  languageName: node
-  linkType: hard
-
 "busboy@npm:1.6.0":
   version: 1.6.0
   resolution: "busboy@npm:1.6.0"
@@ -5854,7 +5018,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"call-bind@npm:^1.0.0, call-bind@npm:^1.0.2, call-bind@npm:^1.0.5, call-bind@npm:^1.0.6, call-bind@npm:^1.0.7":
+"call-bind@npm:^1.0.2, call-bind@npm:^1.0.5, call-bind@npm:^1.0.6, call-bind@npm:^1.0.7":
   version: 1.0.7
   resolution: "call-bind@npm:1.0.7"
   dependencies:
@@ -5961,7 +5125,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"cipher-base@npm:^1.0.0, cipher-base@npm:^1.0.1, cipher-base@npm:^1.0.3":
+"cipher-base@npm:^1.0.1, cipher-base@npm:^1.0.3":
   version: 1.0.4
   resolution: "cipher-base@npm:1.0.4"
   dependencies:
@@ -6133,45 +5297,31 @@ __metadata:
   languageName: node
   linkType: hard
 
-"cosmos-kit@npm:2.18.4":
-  version: 2.18.4
-  resolution: "cosmos-kit@npm:2.18.4"
-  dependencies:
-    "@cosmos-kit/cdcwallet": "npm:^2.13.2"
-    "@cosmos-kit/coin98": "npm:^2.11.2"
-    "@cosmos-kit/compass": "npm:^2.11.2"
-    "@cosmos-kit/cosmostation": "npm:^2.11.2"
-    "@cosmos-kit/exodus": "npm:^2.10.2"
-    "@cosmos-kit/fin": "npm:^2.11.2"
-    "@cosmos-kit/frontier": "npm:^2.10.2"
-    "@cosmos-kit/galaxy-station": "npm:^2.10.2"
-    "@cosmos-kit/keplr": "npm:^2.12.2"
-    "@cosmos-kit/leap": "npm:^2.12.2"
-    "@cosmos-kit/ledger": "npm:^2.11.2"
-    "@cosmos-kit/okxwallet-extension": "npm:^2.11.2"
-    "@cosmos-kit/omni": "npm:^2.10.2"
-    "@cosmos-kit/owallet": "npm:^2.11.2"
-    "@cosmos-kit/shell": "npm:^2.11.2"
-    "@cosmos-kit/station": "npm:^2.10.2"
-    "@cosmos-kit/tailwind": "npm:^1.5.2"
-    "@cosmos-kit/trust": "npm:^2.11.2"
-    "@cosmos-kit/vectis": "npm:^2.11.2"
-    "@cosmos-kit/xdefi": "npm:^2.10.2"
-  checksum: 10c0/76ccf246c852b58e99a64b1eed4c3409664159f4b9348362369775c74c6037437c945e2a44759a59bd79320d0d45981aa34cd7d4a3c4d3e67d7865d7777f7f61
-  languageName: node
-  linkType: hard
-
-"create-ecdh@npm:^4.0.0":
-  version: 4.0.4
-  resolution: "create-ecdh@npm:4.0.4"
+"cosmos-kit@npm:2.23.4":
+  version: 2.23.4
+  resolution: "cosmos-kit@npm:2.23.4"
   dependencies:
-    bn.js: "npm:^4.1.0"
-    elliptic: "npm:^6.5.3"
-  checksum: 10c0/77b11a51360fec9c3bce7a76288fc0deba4b9c838d5fb354b3e40c59194d23d66efe6355fd4b81df7580da0661e1334a235a2a5c040b7569ba97db428d466e7f
+    "@cosmos-kit/cdcwallet": "npm:^2.15.3"
+    "@cosmos-kit/coin98": "npm:^2.13.3"
+    "@cosmos-kit/compass": "npm:^2.13.3"
+    "@cosmos-kit/cosmostation": "npm:^2.14.2"
+    "@cosmos-kit/ctrl": "npm:^2.13.2"
+    "@cosmos-kit/exodus": "npm:^2.12.2"
+    "@cosmos-kit/fin": "npm:^2.13.3"
+    "@cosmos-kit/keplr": "npm:^2.14.3"
+    "@cosmos-kit/leap": "npm:^2.14.3"
+    "@cosmos-kit/ledger": "npm:^2.13.2"
+    "@cosmos-kit/okxwallet-extension": "npm:^2.13.1"
+    "@cosmos-kit/omni": "npm:^2.12.2"
+    "@cosmos-kit/owallet": "npm:^2.14.2"
+    "@cosmos-kit/shell": "npm:^2.13.3"
+    "@cosmos-kit/tailwind": "npm:^1.7.2"
+    "@cosmos-kit/trust": "npm:^2.13.2"
+  checksum: 10c0/06a8425228b4c2e9cefc5a780f1f239200201c19292c4014bd5f1a5eca2400de2b6bfb84f4bf563b5aaaa8cbe61b7ca69fc5334288aface292d21e1f41334e2c
   languageName: node
   linkType: hard
 
-"create-hash@npm:^1.1.0, create-hash@npm:^1.1.2, create-hash@npm:^1.2.0":
+"create-hash@npm:^1.1.0, create-hash@npm:^1.2.0":
   version: 1.2.0
   resolution: "create-hash@npm:1.2.0"
   dependencies:
@@ -6184,7 +5334,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"create-hmac@npm:^1.1.0, create-hmac@npm:^1.1.4, create-hmac@npm:^1.1.7":
+"create-hmac@npm:^1.1.7":
   version: 1.1.7
   resolution: "create-hmac@npm:1.1.7"
   dependencies:
@@ -6230,25 +5380,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"crypto-browserify@npm:^3.12.0":
-  version: 3.12.0
-  resolution: "crypto-browserify@npm:3.12.0"
-  dependencies:
-    browserify-cipher: "npm:^1.0.0"
-    browserify-sign: "npm:^4.0.0"
-    create-ecdh: "npm:^4.0.0"
-    create-hash: "npm:^1.1.0"
-    create-hmac: "npm:^1.1.0"
-    diffie-hellman: "npm:^5.0.0"
-    inherits: "npm:^2.0.1"
-    pbkdf2: "npm:^3.0.3"
-    public-encrypt: "npm:^4.0.0"
-    randombytes: "npm:^2.0.0"
-    randomfill: "npm:^1.0.3"
-  checksum: 10c0/0c20198886576050a6aa5ba6ae42f2b82778bfba1753d80c5e7a090836890dc372bdc780986b2568b4fb8ed2a91c958e61db1f0b6b1cc96af4bd03ffc298ba92
-  languageName: node
-  linkType: hard
-
 "crypto-js@npm:^4.0.0":
   version: 4.2.0
   resolution: "crypto-js@npm:4.2.0"
@@ -6347,13 +5478,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"decimal.js@npm:^10.2.1":
-  version: 10.4.3
-  resolution: "decimal.js@npm:10.4.3"
-  checksum: 10c0/6d60206689ff0911f0ce968d40f163304a6c1bc739927758e6efc7921cfa630130388966f16bf6ef6b838cb33679fbe8e7a78a2f3c478afce841fd55ac8fb8ee
-  languageName: node
-  linkType: hard
-
 "decode-named-character-reference@npm:^1.0.0":
   version: 1.0.2
   resolution: "decode-named-character-reference@npm:1.0.2"
@@ -6396,7 +5520,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"deepmerge@npm:^4.2.2, deepmerge@npm:^4.3.1":
+"deepmerge@npm:^4.2.2":
   version: 4.3.1
   resolution: "deepmerge@npm:4.3.1"
   checksum: 10c0/e53481aaf1aa2c4082b5342be6b6d8ad9dfe387bc92ce197a66dea08bd4265904a087e75e464f14d1347cf2ac8afe1e4c16b266e0561cc5df29382d3c5f80044
@@ -6453,16 +5577,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"des.js@npm:^1.0.0":
-  version: 1.1.0
-  resolution: "des.js@npm:1.1.0"
-  dependencies:
-    inherits: "npm:^2.0.1"
-    minimalistic-assert: "npm:^1.0.0"
-  checksum: 10c0/671354943ad67493e49eb4c555480ab153edd7cee3a51c658082fcde539d2690ed2a4a0b5d1f401f9cde822edf3939a6afb2585f32c091f2d3a1b1665cd45236
-  languageName: node
-  linkType: hard
-
 "destr@npm:^2.0.3":
   version: 2.0.3
   resolution: "destr@npm:2.0.3"
@@ -6502,17 +5616,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"diffie-hellman@npm:^5.0.0":
-  version: 5.0.3
-  resolution: "diffie-hellman@npm:5.0.3"
-  dependencies:
-    bn.js: "npm:^4.1.0"
-    miller-rabin: "npm:^4.0.0"
-    randombytes: "npm:^2.0.0"
-  checksum: 10c0/ce53ccafa9ca544b7fc29b08a626e23a9b6562efc2a98559a0c97b4718937cebaa9b5d7d0a05032cc9c1435e9b3c1532b9e9bf2e0ede868525922807ad6e1ecf
-  languageName: node
-  linkType: hard
-
 "dir-glob@npm:^3.0.1":
   version: 3.0.1
   resolution: "dir-glob@npm:3.0.1"
@@ -6559,22 +5662,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"elliptic@npm:6.5.4":
-  version: 6.5.4
-  resolution: "elliptic@npm:6.5.4"
-  dependencies:
-    bn.js: "npm:^4.11.9"
-    brorand: "npm:^1.1.0"
-    hash.js: "npm:^1.0.0"
-    hmac-drbg: "npm:^1.0.1"
-    inherits: "npm:^2.0.4"
-    minimalistic-assert: "npm:^1.0.1"
-    minimalistic-crypto-utils: "npm:^1.0.1"
-  checksum: 10c0/5f361270292c3b27cf0843e84526d11dec31652f03c2763c6c2b8178548175ff5eba95341dd62baff92b2265d1af076526915d8af6cc9cb7559c44a62f8ca6e2
-  languageName: node
-  linkType: hard
-
-"elliptic@npm:^6.4.0, elliptic@npm:^6.5.3, elliptic@npm:^6.5.4, elliptic@npm:^6.5.5":
+"elliptic@npm:^6.4.0, elliptic@npm:^6.5.3, elliptic@npm:^6.5.4":
   version: 6.5.5
   resolution: "elliptic@npm:6.5.5"
   dependencies:
@@ -7088,44 +6176,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"ethers@npm:^5.7.2":
-  version: 5.7.2
-  resolution: "ethers@npm:5.7.2"
-  dependencies:
-    "@ethersproject/abi": "npm:5.7.0"
-    "@ethersproject/abstract-provider": "npm:5.7.0"
-    "@ethersproject/abstract-signer": "npm:5.7.0"
-    "@ethersproject/address": "npm:5.7.0"
-    "@ethersproject/base64": "npm:5.7.0"
-    "@ethersproject/basex": "npm:5.7.0"
-    "@ethersproject/bignumber": "npm:5.7.0"
-    "@ethersproject/bytes": "npm:5.7.0"
-    "@ethersproject/constants": "npm:5.7.0"
-    "@ethersproject/contracts": "npm:5.7.0"
-    "@ethersproject/hash": "npm:5.7.0"
-    "@ethersproject/hdnode": "npm:5.7.0"
-    "@ethersproject/json-wallets": "npm:5.7.0"
-    "@ethersproject/keccak256": "npm:5.7.0"
-    "@ethersproject/logger": "npm:5.7.0"
-    "@ethersproject/networks": "npm:5.7.1"
-    "@ethersproject/pbkdf2": "npm:5.7.0"
-    "@ethersproject/properties": "npm:5.7.0"
-    "@ethersproject/providers": "npm:5.7.2"
-    "@ethersproject/random": "npm:5.7.0"
-    "@ethersproject/rlp": "npm:5.7.0"
-    "@ethersproject/sha2": "npm:5.7.0"
-    "@ethersproject/signing-key": "npm:5.7.0"
-    "@ethersproject/solidity": "npm:5.7.0"
-    "@ethersproject/strings": "npm:5.7.0"
-    "@ethersproject/transactions": "npm:5.7.0"
-    "@ethersproject/units": "npm:5.7.0"
-    "@ethersproject/wallet": "npm:5.7.0"
-    "@ethersproject/web": "npm:5.7.1"
-    "@ethersproject/wordlists": "npm:5.7.0"
-  checksum: 10c0/90629a4cdb88cde7a7694f5610a83eb00d7fbbaea687446b15631397988f591c554dd68dfa752ddf00aabefd6285e5b298be44187e960f5e4962684e10b39962
-  languageName: node
-  linkType: hard
-
 "events@npm:3.3.0, events@npm:^3.3.0":
   version: 3.3.0
   resolution: "events@npm:3.3.0"
@@ -7133,17 +6183,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"evp_bytestokey@npm:^1.0.0, evp_bytestokey@npm:^1.0.3":
-  version: 1.0.3
-  resolution: "evp_bytestokey@npm:1.0.3"
-  dependencies:
-    md5.js: "npm:^1.3.4"
-    node-gyp: "npm:latest"
-    safe-buffer: "npm:^5.1.1"
-  checksum: 10c0/77fbe2d94a902a80e9b8f5a73dcd695d9c14899c5e82967a61b1fc6cbbb28c46552d9b127cff47c45fcf684748bdbcfa0a50410349109de87ceb4b199ef6ee99
-  languageName: node
-  linkType: hard
-
 "execa@npm:^8.0.1":
   version: 8.0.1
   resolution: "execa@npm:8.0.1"
@@ -7319,7 +6358,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"follow-redirects@npm:^1.14.0, follow-redirects@npm:^1.14.9, follow-redirects@npm:^1.15.6":
+"follow-redirects@npm:^1.14.0, follow-redirects@npm:^1.15.6":
   version: 1.15.6
   resolution: "follow-redirects@npm:1.15.6"
   peerDependenciesMeta:
@@ -7543,7 +6582,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"glob@npm:^7.0.0, glob@npm:^7.1.3":
+"glob@npm:^7.1.3":
   version: 7.2.3
   resolution: "glob@npm:7.2.3"
   dependencies:
@@ -7599,13 +6638,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"google-protobuf@npm:^3.17.3":
-  version: 3.21.2
-  resolution: "google-protobuf@npm:3.21.2"
-  checksum: 10c0/df20b41aad9eba4d842d69c717a4d73ac6d321084c12f524ad5eb79a47ad185323bd1b477c19565a15fd08b6eef29e475c8ac281dbc6fe547b81d8b6b99974f5
-  languageName: node
-  linkType: hard
-
 "gopd@npm:^1.0.1":
   version: 1.0.1
   resolution: "gopd@npm:1.0.1"
@@ -7704,17 +6736,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"hash-base@npm:~3.0":
-  version: 3.0.4
-  resolution: "hash-base@npm:3.0.4"
-  dependencies:
-    inherits: "npm:^2.0.1"
-    safe-buffer: "npm:^5.0.1"
-  checksum: 10c0/a13357dccb3827f0bb0b56bf928da85c428dc8670f6e4a1c7265e4f1653ce02d69030b40fd01b0f1d218a995a066eea279cded9cec72d207b593bcdfe309c2f0
-  languageName: node
-  linkType: hard
-
-"hash.js@npm:1.1.7, hash.js@npm:^1.0.0, hash.js@npm:^1.0.3":
+"hash.js@npm:^1.0.0, hash.js@npm:^1.0.3":
   version: 1.1.7
   resolution: "hash.js@npm:1.1.7"
   dependencies:
@@ -7909,18 +6931,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"inquirerer@npm:^1.9.0":
-  version: 1.9.0
-  resolution: "inquirerer@npm:1.9.0"
-  dependencies:
-    chalk: "npm:^4.1.0"
-    deepmerge: "npm:^4.3.1"
-    js-yaml: "npm:^4.1.0"
-    minimist: "npm:^1.2.8"
-  checksum: 10c0/c405e4ce4eb73ef5ad495dd9ae66ebd9686a127d5de0a55440eda3472ce9e93d5233bba9f6feb326d240348a9ff009c6eafb5ef29404880b850b91bbcd18ef6b
-  languageName: node
-  linkType: hard
-
 "interchain-query@npm:1.10.1":
   version: 1.10.1
   resolution: "interchain-query@npm:1.10.1"
@@ -7947,13 +6957,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"interpret@npm:^1.0.0":
-  version: 1.4.0
-  resolution: "interpret@npm:1.4.0"
-  checksum: 10c0/08c5ad30032edeec638485bc3f6db7d0094d9b3e85e0f950866600af3c52e9fd69715416d29564731c479d9f4d43ff3e4d302a178196bdc0e6837ec147640450
-  languageName: node
-  linkType: hard
-
 "intl-messageformat@npm:^10.1.0":
   version: 10.5.11
   resolution: "intl-messageformat@npm:10.5.11"
@@ -8000,16 +7003,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"is-arguments@npm:^1.0.4":
-  version: 1.1.1
-  resolution: "is-arguments@npm:1.1.1"
-  dependencies:
-    call-bind: "npm:^1.0.2"
-    has-tostringtag: "npm:^1.0.0"
-  checksum: 10c0/5ff1f341ee4475350adfc14b2328b38962564b7c2076be2f5bac7bd9b61779efba99b9f844a7b82ba7654adccf8e8eb19d1bb0cc6d1c1a085e498f6793d4328f
-  languageName: node
-  linkType: hard
-
 "is-array-buffer@npm:^3.0.4":
   version: 3.0.4
   resolution: "is-array-buffer@npm:3.0.4"
@@ -8130,7 +7123,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"is-generator-function@npm:^1.0.10, is-generator-function@npm:^1.0.7":
+"is-generator-function@npm:^1.0.10":
   version: 1.0.10
   resolution: "is-generator-function@npm:1.0.10"
   dependencies:
@@ -8180,16 +7173,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"is-nan@npm:^1.3.2":
-  version: 1.3.2
-  resolution: "is-nan@npm:1.3.2"
-  dependencies:
-    call-bind: "npm:^1.0.0"
-    define-properties: "npm:^1.1.3"
-  checksum: 10c0/8bfb286f85763f9c2e28ea32e9127702fe980ffd15fa5d63ade3be7786559e6e21355d3625dd364c769c033c5aedf0a2ed3d4025d336abf1b9241e3d9eddc5b0
-  languageName: node
-  linkType: hard
-
 "is-negative-zero@npm:^2.0.3":
   version: 2.0.3
   resolution: "is-negative-zero@npm:2.0.3"
@@ -8285,7 +7268,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"is-typed-array@npm:^1.1.13, is-typed-array@npm:^1.1.3":
+"is-typed-array@npm:^1.1.13":
   version: 1.1.13
   resolution: "is-typed-array@npm:1.1.13"
   dependencies:
@@ -8473,15 +7456,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"jscrypto@npm:^1.0.1":
-  version: 1.0.3
-  resolution: "jscrypto@npm:1.0.3"
-  bin:
-    jscrypto: bin/cli.js
-  checksum: 10c0/9af6d4db4284d27a43b1228d2d510582fc650f53f6732a16a27d624c9fe28e87e68a7fde5ea2ca12c5d5748ba828715785dea75682f16781ee1e061f1faa505d
-  languageName: node
-  linkType: hard
-
 "json-buffer@npm:3.0.1":
   version: 3.0.1
   resolution: "json-buffer@npm:3.0.1"
@@ -8570,29 +7544,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"keccak256@npm:^1.0.6":
-  version: 1.0.6
-  resolution: "keccak256@npm:1.0.6"
-  dependencies:
-    bn.js: "npm:^5.2.0"
-    buffer: "npm:^6.0.3"
-    keccak: "npm:^3.0.2"
-  checksum: 10c0/2a3f1e281ffd65bcbbae2ee8d62e27f0336efe6f16b7ed9932ad642ed398da62ccbc3d38dcdf43bd2fad9885f02df501dc77a900c358644df296396ed194056f
-  languageName: node
-  linkType: hard
-
-"keccak@npm:^3.0.2":
-  version: 3.0.4
-  resolution: "keccak@npm:3.0.4"
-  dependencies:
-    node-addon-api: "npm:^2.0.0"
-    node-gyp: "npm:latest"
-    node-gyp-build: "npm:^4.2.0"
-    readable-stream: "npm:^3.6.0"
-  checksum: 10c0/153525c1c1f770beadb8f8897dec2f1d2dcbee11d063fe5f61957a5b236bfd3d2a111ae2727e443aa6a848df5edb98b9ef237c78d56df49087b0ca8a232ca9cd
-  languageName: node
-  linkType: hard
-
 "keypress@npm:0.1.x":
   version: 0.1.0
   resolution: "keypress@npm:0.1.0"
@@ -9237,18 +8188,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"miller-rabin@npm:^4.0.0":
-  version: 4.0.1
-  resolution: "miller-rabin@npm:4.0.1"
-  dependencies:
-    bn.js: "npm:^4.0.0"
-    brorand: "npm:^1.0.1"
-  bin:
-    miller-rabin: bin/miller-rabin
-  checksum: 10c0/26b2b96f6e49dbcff7faebb78708ed2f5f9ae27ac8cbbf1d7c08f83cf39bed3d418c0c11034dce997da70d135cc0ff6f3a4c15dc452f8e114c11986388a64346
-  languageName: node
-  linkType: hard
-
 "mime-db@npm:1.52.0":
   version: 1.52.0
   resolution: "mime-db@npm:1.52.0"
@@ -9313,7 +8252,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"minimist@npm:^1.2.0, minimist@npm:^1.2.6, minimist@npm:^1.2.8":
+"minimist@npm:^1.2.0, minimist@npm:^1.2.6":
   version: 1.2.8
   resolution: "minimist@npm:1.2.8"
   checksum: 10c0/19d3fcdca050087b84c2029841a093691a91259a47def2f18222f41e7645a0b7c44ef4b40e88a1e58a40c84d2ef0ee6047c55594d298146d0eb3f6b737c20ce6
@@ -9404,15 +8343,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"mkdirp@npm:3.0.1":
-  version: 3.0.1
-  resolution: "mkdirp@npm:3.0.1"
-  bin:
-    mkdirp: dist/cjs/src/bin.js
-  checksum: 10c0/9f2b975e9246351f5e3a40dcfac99fcd0baa31fbfab615fe059fb11e51f10e4803c63de1f384c54d656e4db31d000e4767e9ef076a22e12a641357602e31d57d
-  languageName: node
-  linkType: hard
-
 "mkdirp@npm:^1.0.3":
   version: 1.0.4
   resolution: "mkdirp@npm:1.0.4"
@@ -9581,15 +8511,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"node-addon-api@npm:^2.0.0":
-  version: 2.0.2
-  resolution: "node-addon-api@npm:2.0.2"
-  dependencies:
-    node-gyp: "npm:latest"
-  checksum: 10c0/ade6c097ba829fa4aee1ca340117bb7f8f29fdae7b777e343a9d5cbd548481d1f0894b7b907d23ce615c70d932e8f96154caed95c3fa935cfe8cf87546510f64
-  languageName: node
-  linkType: hard
-
 "node-addon-api@npm:^7.0.0":
   version: 7.1.0
   resolution: "node-addon-api@npm:7.1.0"
@@ -9606,7 +8527,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"node-fetch@npm:^2.6.1, node-fetch@npm:^2.6.12, node-fetch@npm:^2.6.9":
+"node-fetch@npm:^2.6.1, node-fetch@npm:^2.6.12":
   version: 2.7.0
   resolution: "node-fetch@npm:2.7.0"
   dependencies:
@@ -9627,17 +8548,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"node-gyp-build@npm:^4.2.0, node-gyp-build@npm:^4.3.0":
-  version: 4.8.0
-  resolution: "node-gyp-build@npm:4.8.0"
-  bin:
-    node-gyp-build: bin.js
-    node-gyp-build-optional: optional.js
-    node-gyp-build-test: build-test.js
-  checksum: 10c0/85324be16f81f0235cbbc42e3eceaeb1b5ab94c8d8f5236755e1435b4908338c65a4e75f66ee343cbcb44ddf9b52a428755bec16dcd983295be4458d95c8e1ad
-  languageName: node
-  linkType: hard
-
 "node-gyp@npm:latest":
   version: 10.1.0
   resolution: "node-gyp@npm:10.1.0"
@@ -9706,16 +8616,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"object-is@npm:^1.1.5":
-  version: 1.1.6
-  resolution: "object-is@npm:1.1.6"
-  dependencies:
-    call-bind: "npm:^1.0.7"
-    define-properties: "npm:^1.2.1"
-  checksum: 10c0/506af444c4dce7f8e31f34fc549e2fb8152d6b9c4a30c6e62852badd7f520b579c679af433e7a072f9d78eb7808d230dc12e1cf58da9154dfbf8813099ea0fe0
-  languageName: node
-  linkType: hard
-
 "object-keys@npm:^1.1.1":
   version: 1.1.1
   resolution: "object-keys@npm:1.1.1"
@@ -9848,19 +8748,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"osmo-query@npm:16.5.1":
-  version: 16.5.1
-  resolution: "osmo-query@npm:16.5.1"
-  dependencies:
-    "@cosmjs/amino": "npm:0.29.3"
-    "@cosmjs/proto-signing": "npm:0.29.3"
-    "@cosmjs/stargate": "npm:0.29.3"
-    "@cosmjs/tendermint-rpc": "npm:^0.29.3"
-    "@cosmology/lcd": "npm:^0.12.0"
-  checksum: 10c0/036877b1f2aefda492f1ff2c84163955de439c07bb87380cf05e3d8b244d77f12a505d93e655389172d89bd09214d5b812d8123bd1203fe649e7d934f87c2d34
-  languageName: node
-  linkType: hard
-
 "p-limit@npm:^3.0.2":
   version: 3.1.0
   resolution: "p-limit@npm:3.1.0"
@@ -9904,20 +8791,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"parse-asn1@npm:^5.0.0, parse-asn1@npm:^5.1.7":
-  version: 5.1.7
-  resolution: "parse-asn1@npm:5.1.7"
-  dependencies:
-    asn1.js: "npm:^4.10.1"
-    browserify-aes: "npm:^1.2.0"
-    evp_bytestokey: "npm:^1.0.3"
-    hash-base: "npm:~3.0"
-    pbkdf2: "npm:^3.1.2"
-    safe-buffer: "npm:^5.2.1"
-  checksum: 10c0/05eb5937405c904eb5a7f3633bab1acc11f4ae3478a07ef5c6d81ce88c3c0e505ff51f9c7b935ebc1265c868343793698fc91025755a895d0276f620f95e8a82
-  languageName: node
-  linkType: hard
-
 "parse-entities@npm:^4.0.0":
   version: 4.0.1
   resolution: "parse-entities@npm:4.0.1"
@@ -9993,19 +8866,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"pbkdf2@npm:^3.0.3, pbkdf2@npm:^3.1.2":
-  version: 3.1.2
-  resolution: "pbkdf2@npm:3.1.2"
-  dependencies:
-    create-hash: "npm:^1.1.2"
-    create-hmac: "npm:^1.1.4"
-    ripemd160: "npm:^2.0.1"
-    safe-buffer: "npm:^5.0.1"
-    sha.js: "npm:^2.4.8"
-  checksum: 10c0/5a30374e87d33fa080a92734d778cf172542cc7e41b96198c4c88763997b62d7850de3fbda5c3111ddf79805ee7c1da7046881c90ac4920b5e324204518b05fd
-  languageName: node
-  linkType: hard
-
 "picocolors@npm:^1.0.0":
   version: 1.0.0
   resolution: "picocolors@npm:1.0.0"
@@ -10188,20 +9048,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"public-encrypt@npm:^4.0.0":
-  version: 4.0.3
-  resolution: "public-encrypt@npm:4.0.3"
-  dependencies:
-    bn.js: "npm:^4.1.0"
-    browserify-rsa: "npm:^4.0.0"
-    create-hash: "npm:^1.1.0"
-    parse-asn1: "npm:^5.0.0"
-    randombytes: "npm:^2.0.1"
-    safe-buffer: "npm:^5.1.2"
-  checksum: 10c0/6c2cc19fbb554449e47f2175065d6b32f828f9b3badbee4c76585ac28ae8641aafb9bb107afc430c33c5edd6b05dbe318df4f7d6d7712b1093407b11c4280700
-  languageName: node
-  linkType: hard
-
 "pump@npm:^3.0.0":
   version: 3.0.0
   resolution: "pump@npm:3.0.0"
@@ -10262,25 +9108,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"randombytes@npm:^2.0.0, randombytes@npm:^2.0.1, randombytes@npm:^2.0.5":
-  version: 2.1.0
-  resolution: "randombytes@npm:2.1.0"
-  dependencies:
-    safe-buffer: "npm:^5.1.0"
-  checksum: 10c0/50395efda7a8c94f5dffab564f9ff89736064d32addf0cc7e8bf5e4166f09f8ded7a0849ca6c2d2a59478f7d90f78f20d8048bca3cdf8be09d8e8a10790388f3
-  languageName: node
-  linkType: hard
-
-"randomfill@npm:^1.0.3":
-  version: 1.0.4
-  resolution: "randomfill@npm:1.0.4"
-  dependencies:
-    randombytes: "npm:^2.0.5"
-    safe-buffer: "npm:^5.1.0"
-  checksum: 10c0/11aeed35515872e8f8a2edec306734e6b74c39c46653607f03c68385ab8030e2adcc4215f76b5e4598e028c4750d820afd5c65202527d831d2a5f207fe2bc87c
-  languageName: node
-  linkType: hard
-
 "react-ace@npm:11.0.1":
   version: 11.0.1
   resolution: "react-ace@npm:11.0.1"
@@ -10458,7 +9285,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"readable-stream@npm:^2.3.3, readable-stream@npm:^2.3.8":
+"readable-stream@npm:^2.3.3":
   version: 2.3.8
   resolution: "readable-stream@npm:2.3.8"
   dependencies:
@@ -10507,15 +9334,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"rechoir@npm:^0.6.2":
-  version: 0.6.2
-  resolution: "rechoir@npm:0.6.2"
-  dependencies:
-    resolve: "npm:^1.1.6"
-  checksum: 10c0/22c4bb32f4934a9468468b608417194f7e3ceba9a508512125b16082c64f161915a28467562368eeb15dc16058eb5b7c13a20b9eb29ff9927d1ebb3b5aa83e84
-  languageName: node
-  linkType: hard
-
 "reflect.getprototypeof@npm:^1.0.4":
   version: 1.0.6
   resolution: "reflect.getprototypeof@npm:1.0.6"
@@ -10603,7 +9421,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"resolve@npm:^1.1.6, resolve@npm:^1.22.4":
+"resolve@npm:^1.22.4":
   version: 1.22.8
   resolution: "resolve@npm:1.22.8"
   dependencies:
@@ -10629,7 +9447,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"resolve@patch:resolve@npm%3A^1.1.6#optional!builtin<compat/resolve>, resolve@patch:resolve@npm%3A^1.22.4#optional!builtin<compat/resolve>":
+"resolve@patch:resolve@npm%3A^1.22.4#optional!builtin<compat/resolve>":
   version: 1.22.8
   resolution: "resolve@patch:resolve@npm%3A1.22.8#optional!builtin<compat/resolve>::version=1.22.8&hash=c3c19d"
   dependencies:
@@ -10720,7 +9538,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"safe-buffer@npm:^5.0.1, safe-buffer@npm:^5.1.0, safe-buffer@npm:^5.1.1, safe-buffer@npm:^5.1.2, safe-buffer@npm:^5.2.0, safe-buffer@npm:^5.2.1, safe-buffer@npm:~5.2.0":
+"safe-buffer@npm:^5.0.1, safe-buffer@npm:^5.1.2, safe-buffer@npm:^5.2.0, safe-buffer@npm:~5.2.0":
   version: 5.2.1
   resolution: "safe-buffer@npm:5.2.1"
   checksum: 10c0/6501914237c0a86e9675d4e51d89ca3c21ffd6a31642efeba25ad65720bce6921c9e7e974e5be91a786b25aa058b5303285d3c15dbabf983a919f5f630d349f3
@@ -10768,25 +9586,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"scrypt-js@npm:3.0.1":
-  version: 3.0.1
-  resolution: "scrypt-js@npm:3.0.1"
-  checksum: 10c0/e2941e1c8b5c84c7f3732b0153fee624f5329fc4e772a06270ee337d4d2df4174b8abb5e6ad53804a29f53890ecbc78f3775a319323568c0313040c0e55f5b10
-  languageName: node
-  linkType: hard
-
-"secp256k1@npm:^4.0.2":
-  version: 4.0.3
-  resolution: "secp256k1@npm:4.0.3"
-  dependencies:
-    elliptic: "npm:^6.5.4"
-    node-addon-api: "npm:^2.0.0"
-    node-gyp: "npm:latest"
-    node-gyp-build: "npm:^4.2.0"
-  checksum: 10c0/de0a0e525a6f8eb2daf199b338f0797dbfe5392874285a145bb005a72cabacb9d42c0197d0de129a1a0f6094d2cc4504d1f87acb6a8bbfb7770d4293f252c401
-  languageName: node
-  linkType: hard
-
 "semver@npm:^6.3.1":
   version: 6.3.1
   resolution: "semver@npm:6.3.1"
@@ -10870,19 +9669,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"shelljs@npm:^0.8.5":
-  version: 0.8.5
-  resolution: "shelljs@npm:0.8.5"
-  dependencies:
-    glob: "npm:^7.0.0"
-    interpret: "npm:^1.0.0"
-    rechoir: "npm:^0.6.2"
-  bin:
-    shjs: bin/shjs
-  checksum: 10c0/feb25289a12e4bcd04c40ddfab51aff98a3729f5c2602d5b1a1b95f6819ec7804ac8147ebd8d9a85dfab69d501bcf92d7acef03247320f51c1552cec8d8e2382
-  languageName: node
-  linkType: hard
-
 "side-channel@npm:^1.0.4, side-channel@npm:^1.0.6":
   version: 1.0.6
   resolution: "side-channel@npm:1.0.6"
@@ -10990,18 +9776,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"starshipjs@npm:^2.4.0":
-  version: 2.4.0
-  resolution: "starshipjs@npm:2.4.0"
-  dependencies:
-    "@chain-registry/client": "npm:1.18.1"
-    bip39: "npm:^3.1.0"
-    js-yaml: "npm:^4.1.0"
-    node-fetch: "npm:^2.6.9"
-  checksum: 10c0/e62cc540bc9e8700d3bdb61ac1261b71417f0e687c98a0e3733317d363e425c7188a205d9af70f5218e87f99195fbfb5b759b4f3f9d87823989ef6b4d90442d6
-  languageName: node
-  linkType: hard
-
 "std-env@npm:^3.7.0":
   version: 3.7.0
   resolution: "std-env@npm:3.7.0"
@@ -11295,13 +10069,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"tmp@npm:^0.2.1":
-  version: 0.2.3
-  resolution: "tmp@npm:0.2.3"
-  checksum: 10c0/3e809d9c2f46817475b452725c2aaa5d11985cf18d32a7a970ff25b568438e2c076c2e8609224feef3b7923fa9749b74428e3e634f6b8e520c534eef2fd24125
-  languageName: node
-  linkType: hard
-
 "to-regex-range@npm:^5.0.1":
   version: 5.0.1
   resolution: "to-regex-range@npm:5.0.1"
@@ -11737,16 +10504,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"utf-8-validate@npm:^5.0.5":
-  version: 5.0.10
-  resolution: "utf-8-validate@npm:5.0.10"
-  dependencies:
-    node-gyp: "npm:latest"
-    node-gyp-build: "npm:^4.3.0"
-  checksum: 10c0/23cd6adc29e6901aa37ff97ce4b81be9238d0023c5e217515b34792f3c3edb01470c3bd6b264096dd73d0b01a1690b57468de3a24167dd83004ff71c51cc025f
-  languageName: node
-  linkType: hard
-
 "util-deprecate@npm:^1.0.1, util-deprecate@npm:~1.0.1":
   version: 1.0.2
   resolution: "util-deprecate@npm:1.0.2"
@@ -11754,19 +10511,6 @@ __metadata:
   languageName: node
   linkType: hard
 
-"util@npm:^0.12.5":
-  version: 0.12.5
-  resolution: "util@npm:0.12.5"
-  dependencies:
-    inherits: "npm:^2.0.3"
-    is-arguments: "npm:^1.0.4"
-    is-generator-function: "npm:^1.0.7"
-    is-typed-array: "npm:^1.1.3"
-    which-typed-array: "npm:^1.1.2"
-  checksum: 10c0/c27054de2cea2229a66c09522d0fa1415fb12d861d08523a8846bf2e4cbf0079d4c3f725f09dcb87493549bcbf05f5798dce1688b53c6c17201a45759e7253f3
-  languageName: node
-  linkType: hard
-
 "utility-types@npm:^3.10.0":
   version: 3.11.0
   resolution: "utility-types@npm:3.11.0"
@@ -11883,7 +10627,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"which-typed-array@npm:^1.1.14, which-typed-array@npm:^1.1.15, which-typed-array@npm:^1.1.2, which-typed-array@npm:^1.1.9":
+"which-typed-array@npm:^1.1.14, which-typed-array@npm:^1.1.15, which-typed-array@npm:^1.1.9":
   version: 1.1.15
   resolution: "which-typed-array@npm:1.1.15"
   dependencies:
@@ -11963,22 +10707,7 @@ __metadata:
   languageName: node
   linkType: hard
 
-"ws@npm:7.4.6":
-  version: 7.4.6
-  resolution: "ws@npm:7.4.6"
-  peerDependencies:
-    bufferutil: ^4.0.1
-    utf-8-validate: ^5.0.2
-  peerDependenciesMeta:
-    bufferutil:
-      optional: true
-    utf-8-validate:
-      optional: true
-  checksum: 10c0/4b44b59bbc0549c852fb2f0cdb48e40e122a1b6078aeed3d65557cbeb7d37dda7a4f0027afba2e6a7a695de17701226d02b23bd15c97b0837808c16345c62f8e
-  languageName: node
-  linkType: hard
-
-"ws@npm:^7, ws@npm:^7.5.1, ws@npm:^7.5.9":
+"ws@npm:^7, ws@npm:^7.5.1":
   version: 7.5.9
   resolution: "ws@npm:7.5.9"
   peerDependencies:
